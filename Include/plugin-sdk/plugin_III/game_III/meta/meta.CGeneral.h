/*
    Plugin-SDK (Grand Theft Auto 3) header file
    Authors: GTA Community. See more here
    https://github.com/DK22Pac/plugin-sdk
    Do not delete this comment block. Respect others' work!
*/
#include "PluginBase.h"

namespace plugin {

META_BEGIN(CGeneral::GetAngleBetweenPoints)
    static int address;
    static int global_address;
    static const int id = 0x48CA30;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CA30, 0x48CB30, 0x48CAC0>;
    // total references count: 10en (4), 11en (4), steam (4)
    using refs_t = RefList<
        0x4D685D, GAME_10EN, H_CALL, 0x4D6780, 1,
        0x4DD83A, GAME_10EN, H_CALL, 0x4DD820, 1,
        0x4F185F, GAME_10EN, H_CALL, 0x4F1810, 1,
        0x560B06, GAME_10EN, H_CALL, 0x560620, 1,
        0x4D68FD, GAME_11EN, H_CALL, 0x4D6820, 1,
        0x4DD8EA, GAME_11EN, H_CALL, 0x4DD8D0, 1,
        0x4F190F, GAME_11EN, H_CALL, 0x4F18C0, 1,
        0x560C36, GAME_11EN, H_CALL, 0x560750, 1,
        0x4D688D, GAME_STEAM, H_CALL, 0x4D67B0, 1,
        0x4DD87A, GAME_STEAM, H_CALL, 0x4DD860, 1,
        0x4F189F, GAME_STEAM, H_CALL, 0x4F1850, 1,
        0x560BE6, GAME_STEAM, H_CALL, 0x560700, 1>;
    using def_t = float(float, float, float, float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float,float,float,float>, 0,1,2,3>;
META_END

META_BEGIN(CGeneral::GetRadianAngleBetweenPoints)
    static int address;
    static int global_address;
    static const int id = 0x48CA50;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CA50, 0x48CB50, 0x48CAE0>;
    // total references count: 10en (55), 11en (55), steam (55)
    using refs_t = RefList<
        0x4196B7, GAME_10EN, H_CALL, 0x419300, 1,
        0x42DBB9, GAME_10EN, H_CALL, 0x42DB50, 1,
        0x451F89, GAME_10EN, H_CALL, 0x451E50, 1,
        0x467889, GAME_10EN, H_CALL, 0x467400, 1,
        0x4678B7, GAME_10EN, H_CALL, 0x467400, 2,
        0x4678D9, GAME_10EN, H_CALL, 0x467400, 3,
        0x48CA40, GAME_10EN, H_CALL, 0x48CA30, 1,
        0x48CE57, GAME_10EN, H_CALL, 0x48CE40, 1,
        0x4C0B78, GAME_10EN, H_CALL, 0x4C07A0, 1,
        0x4C0C40, GAME_10EN, H_CALL, 0x4C07A0, 2,
        0x4C1044, GAME_10EN, H_CALL, 0x4C07A0, 3,
        0x4C2D98, GAME_10EN, H_CALL, 0x4C2C90, 1,
        0x4C390C, GAME_10EN, H_CALL, 0x4C30A0, 1,
        0x4C3A6C, GAME_10EN, H_CALL, 0x4C30A0, 2,
        0x4C79BC, GAME_10EN, H_CALL, 0x4C78F0, 1,
        0x4C9814, GAME_10EN, H_CALL, 0x4C8910, 1,
        0x4C9C63, GAME_10EN, H_CALL, 0x4C8910, 2,
        0x4C9D79, GAME_10EN, H_CALL, 0x4C8910, 3,
        0x4C9E6A, GAME_10EN, H_CALL, 0x4C8910, 4,
        0x4C9F48, GAME_10EN, H_CALL, 0x4C8910, 5,
        0x4CA088, GAME_10EN, H_CALL, 0x4C8910, 6,
        0x4CA675, GAME_10EN, H_CALL, 0x4C8910, 7,
        0x4CA82A, GAME_10EN, H_CALL, 0x4C8910, 8,
        0x4CAC8D, GAME_10EN, H_CALL, 0x4C8910, 9,
        0x4D13BF, GAME_10EN, H_CALL, 0x4D1390, 1,
        0x4D1979, GAME_10EN, H_CALL, 0x4D1640, 1,
        0x4D1A8F, GAME_10EN, H_CALL, 0x4D1640, 2,
        0x4D1CEB, GAME_10EN, H_CALL, 0x4D1C40, 1,
        0x4D1E1A, GAME_10EN, H_CALL, 0x4D1D70, 1,
        0x4D221D, GAME_10EN, H_CALL, 0x4D1ED0, 1,
        0x4D246E, GAME_10EN, H_CALL, 0x4D1ED0, 2,
        0x4D24A5, GAME_10EN, H_CALL, 0x4D1ED0, 3,
        0x4D24D7, GAME_10EN, H_CALL, 0x4D1ED0, 4,
        0x4D3120, GAME_10EN, H_CALL, 0x4D30C0, 1,
        0x4D324F, GAME_10EN, H_CALL, 0x4D30C0, 2,
        0x4D3450, GAME_10EN, H_CALL, 0x4D33A0, 1,
        0x4D3536, GAME_10EN, H_CALL, 0x4D33A0, 2,
        0x4D3CFA, GAME_10EN, H_CALL, 0x4D3CC0, 1,
        0x4D56DC, GAME_10EN, H_CALL, 0x4D5040, 1,
        0x4DBD6F, GAME_10EN, H_CALL, 0x4D94E0, 1,
        0x4DC14A, GAME_10EN, H_CALL, 0x4D94E0, 2,
        0x4DD26B, GAME_10EN, H_CALL, 0x4D94E0, 3,
        0x4E5CA3, GAME_10EN, H_CALL, 0x4E5BD0, 1,
        0x4E6A64, GAME_10EN, H_CALL, 0x4E6990, 1,
        0x4E76C2, GAME_10EN, H_CALL, 0x4E7530, 1,
        0x4E84B6, GAME_10EN, H_CALL, 0x4E7EE0, 1,
        0x4E86B0, GAME_10EN, H_CALL, 0x4E7EE0, 2,
        0x4E9D32, GAME_10EN, H_CALL, 0x4E9B50, 1,
        0x4ED5A8, GAME_10EN, H_CALL, 0x4ED590, 1,
        0x4ED5FB, GAME_10EN, H_CALL, 0x4ED590, 2,
        0x4ED938, GAME_10EN, H_CALL, 0x4ED920, 1,
        0x4ED98B, GAME_10EN, H_CALL, 0x4ED920, 2,
        0x4F148A, GAME_10EN, H_CALL, 0x4F13C0, 1,
        0x4F51E8, GAME_10EN, H_CALL, 0x4F4A00, 1,
        0x55B406, GAME_10EN, H_CALL, 0x55B030, 1,
        0x4196B7, GAME_11EN, H_CALL, 0x419300, 1,
        0x42DBB9, GAME_11EN, H_CALL, 0x42DB50, 1,
        0x451F89, GAME_11EN, H_CALL, 0x451E50, 1,
        0x467899, GAME_11EN, H_CALL, 0x467410, 1,
        0x4678C7, GAME_11EN, H_CALL, 0x467410, 2,
        0x4678E9, GAME_11EN, H_CALL, 0x467410, 3,
        0x48CB40, GAME_11EN, H_CALL, 0x48CB30, 1,
        0x48CF57, GAME_11EN, H_CALL, 0x48CF40, 1,
        0x4C0C68, GAME_11EN, H_CALL, 0x4C0890, 1,
        0x4C0D30, GAME_11EN, H_CALL, 0x4C0890, 2,
        0x4C1134, GAME_11EN, H_CALL, 0x4C0890, 3,
        0x4C2E38, GAME_11EN, H_CALL, 0x4C2D30, 1,
        0x4C39AC, GAME_11EN, H_CALL, 0x4C3140, 1,
        0x4C3B0C, GAME_11EN, H_CALL, 0x4C3140, 2,
        0x4C7A5C, GAME_11EN, H_CALL, 0x4C7990, 1,
        0x4C98B4, GAME_11EN, H_CALL, 0x4C89B0, 1,
        0x4C9D03, GAME_11EN, H_CALL, 0x4C89B0, 2,
        0x4C9E19, GAME_11EN, H_CALL, 0x4C89B0, 3,
        0x4C9F0A, GAME_11EN, H_CALL, 0x4C89B0, 4,
        0x4C9FE8, GAME_11EN, H_CALL, 0x4C89B0, 5,
        0x4CA128, GAME_11EN, H_CALL, 0x4C89B0, 6,
        0x4CA715, GAME_11EN, H_CALL, 0x4C89B0, 7,
        0x4CA8CA, GAME_11EN, H_CALL, 0x4C89B0, 8,
        0x4CAD2D, GAME_11EN, H_CALL, 0x4C89B0, 9,
        0x4D145F, GAME_11EN, H_CALL, 0x4D1430, 1,
        0x4D1A19, GAME_11EN, H_CALL, 0x4D16E0, 1,
        0x4D1B2F, GAME_11EN, H_CALL, 0x4D16E0, 2,
        0x4D1D8B, GAME_11EN, H_CALL, 0x4D1CE0, 1,
        0x4D1EBA, GAME_11EN, H_CALL, 0x4D1E10, 1,
        0x4D22BD, GAME_11EN, H_CALL, 0x4D1F70, 1,
        0x4D250E, GAME_11EN, H_CALL, 0x4D1F70, 2,
        0x4D2545, GAME_11EN, H_CALL, 0x4D1F70, 3,
        0x4D2577, GAME_11EN, H_CALL, 0x4D1F70, 4,
        0x4D31C0, GAME_11EN, H_CALL, 0x4D3160, 1,
        0x4D32EF, GAME_11EN, H_CALL, 0x4D3160, 2,
        0x4D34F0, GAME_11EN, H_CALL, 0x4D3440, 1,
        0x4D35D6, GAME_11EN, H_CALL, 0x4D3440, 2,
        0x4D3D9A, GAME_11EN, H_CALL, 0x4D3D60, 1,
        0x4D577C, GAME_11EN, H_CALL, 0x4D50E0, 1,
        0x4DBE1F, GAME_11EN, H_CALL, 0x4D9580, 1,
        0x4DC1FA, GAME_11EN, H_CALL, 0x4D9580, 2,
        0x4DD31B, GAME_11EN, H_CALL, 0x4D9580, 3,
        0x4E5D53, GAME_11EN, H_CALL, 0x4E5C80, 1,
        0x4E6B14, GAME_11EN, H_CALL, 0x4E6A40, 1,
        0x4E7772, GAME_11EN, H_CALL, 0x4E75E0, 1,
        0x4E8566, GAME_11EN, H_CALL, 0x4E7F90, 1,
        0x4E8760, GAME_11EN, H_CALL, 0x4E7F90, 2,
        0x4E9DE2, GAME_11EN, H_CALL, 0x4E9C00, 1,
        0x4ED658, GAME_11EN, H_CALL, 0x4ED640, 1,
        0x4ED6AB, GAME_11EN, H_CALL, 0x4ED640, 2,
        0x4ED9E8, GAME_11EN, H_CALL, 0x4ED9D0, 1,
        0x4EDA3B, GAME_11EN, H_CALL, 0x4ED9D0, 2,
        0x4F153A, GAME_11EN, H_CALL, 0x4F1470, 1,
        0x4F5298, GAME_11EN, H_CALL, 0x4F4AB0, 1,
        0x55B536, GAME_11EN, H_CALL, 0x55B160, 1,
        0x4196B7, GAME_STEAM, H_CALL, 0x419300, 1,
        0x42DBB9, GAME_STEAM, H_CALL, 0x42DB50, 1,
        0x451F89, GAME_STEAM, H_CALL, 0x451E50, 1,
        0x467899, GAME_STEAM, H_CALL, 0x467410, 1,
        0x4678C7, GAME_STEAM, H_CALL, 0x467410, 2,
        0x4678E9, GAME_STEAM, H_CALL, 0x467410, 3,
        0x48CAD0, GAME_STEAM, H_CALL, 0x48CAC0, 1,
        0x48CEE7, GAME_STEAM, H_CALL, 0x48CED0, 1,
        0x4C0BF8, GAME_STEAM, H_CALL, 0x4C0820, 1,
        0x4C0CC0, GAME_STEAM, H_CALL, 0x4C0820, 2,
        0x4C10C4, GAME_STEAM, H_CALL, 0x4C0820, 3,
        0x4C2DC8, GAME_STEAM, H_CALL, 0x4C2CC0, 1,
        0x4C393C, GAME_STEAM, H_CALL, 0x4C30D0, 1,
        0x4C3A9C, GAME_STEAM, H_CALL, 0x4C30D0, 2,
        0x4C79EC, GAME_STEAM, H_CALL, 0x4C7920, 1,
        0x4C9844, GAME_STEAM, H_CALL, 0x4C8940, 1,
        0x4C9C93, GAME_STEAM, H_CALL, 0x4C8940, 2,
        0x4C9DA9, GAME_STEAM, H_CALL, 0x4C8940, 3,
        0x4C9E9A, GAME_STEAM, H_CALL, 0x4C8940, 4,
        0x4C9F78, GAME_STEAM, H_CALL, 0x4C8940, 5,
        0x4CA0B8, GAME_STEAM, H_CALL, 0x4C8940, 6,
        0x4CA6A5, GAME_STEAM, H_CALL, 0x4C8940, 7,
        0x4CA85A, GAME_STEAM, H_CALL, 0x4C8940, 8,
        0x4CACBD, GAME_STEAM, H_CALL, 0x4C8940, 9,
        0x4D13EF, GAME_STEAM, H_CALL, 0x4D13C0, 1,
        0x4D19A9, GAME_STEAM, H_CALL, 0x4D1670, 1,
        0x4D1ABF, GAME_STEAM, H_CALL, 0x4D1670, 2,
        0x4D1D1B, GAME_STEAM, H_CALL, 0x4D1C70, 1,
        0x4D1E4A, GAME_STEAM, H_CALL, 0x4D1DA0, 1,
        0x4D224D, GAME_STEAM, H_CALL, 0x4D1F00, 1,
        0x4D249E, GAME_STEAM, H_CALL, 0x4D1F00, 2,
        0x4D24D5, GAME_STEAM, H_CALL, 0x4D1F00, 3,
        0x4D2507, GAME_STEAM, H_CALL, 0x4D1F00, 4,
        0x4D3150, GAME_STEAM, H_CALL, 0x4D30F0, 1,
        0x4D327F, GAME_STEAM, H_CALL, 0x4D30F0, 2,
        0x4D3480, GAME_STEAM, H_CALL, 0x4D33D0, 1,
        0x4D3566, GAME_STEAM, H_CALL, 0x4D33D0, 2,
        0x4D3D2A, GAME_STEAM, H_CALL, 0x4D3CF0, 1,
        0x4D570C, GAME_STEAM, H_CALL, 0x4D5070, 1,
        0x4DBDAF, GAME_STEAM, H_CALL, 0x4D9510, 1,
        0x4DC18A, GAME_STEAM, H_CALL, 0x4D9510, 2,
        0x4DD2AB, GAME_STEAM, H_CALL, 0x4D9510, 3,
        0x4E5CE3, GAME_STEAM, H_CALL, 0x4E5C10, 1,
        0x4E6AA4, GAME_STEAM, H_CALL, 0x4E69D0, 1,
        0x4E7702, GAME_STEAM, H_CALL, 0x4E7570, 1,
        0x4E84F6, GAME_STEAM, H_CALL, 0x4E7F20, 1,
        0x4E86F0, GAME_STEAM, H_CALL, 0x4E7F20, 2,
        0x4E9D72, GAME_STEAM, H_CALL, 0x4E9B90, 1,
        0x4ED5E8, GAME_STEAM, H_CALL, 0x4ED5D0, 1,
        0x4ED63B, GAME_STEAM, H_CALL, 0x4ED5D0, 2,
        0x4ED978, GAME_STEAM, H_CALL, 0x4ED960, 1,
        0x4ED9CB, GAME_STEAM, H_CALL, 0x4ED960, 2,
        0x4F14CA, GAME_STEAM, H_CALL, 0x4F1400, 1,
        0x4F5228, GAME_STEAM, H_CALL, 0x4F4A40, 1,
        0x55B4E6, GAME_STEAM, H_CALL, 0x55B110, 1>;
    using def_t = float(float, float, float, float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float,float,float,float>, 0,1,2,3>;
META_END

META_BEGIN(CGeneral::LimitAngle)
    static int address;
    static int global_address;
    static const int id = 0x48CB40;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CB40, 0x48CC40, 0x48CBD0>;
    // total references count: 10en (3), 11en (3), steam (3)
    using refs_t = RefList<
        0x4C3920, GAME_10EN, H_CALL, 0x4C30A0, 1,
        0x4C3A80, GAME_10EN, H_CALL, 0x4C30A0, 2,
        0x4D3D17, GAME_10EN, H_CALL, 0x4D3CC0, 1,
        0x4C39C0, GAME_11EN, H_CALL, 0x4C3140, 1,
        0x4C3B20, GAME_11EN, H_CALL, 0x4C3140, 2,
        0x4D3DB7, GAME_11EN, H_CALL, 0x4D3D60, 1,
        0x4C3950, GAME_STEAM, H_CALL, 0x4C30D0, 1,
        0x4C3AB0, GAME_STEAM, H_CALL, 0x4C30D0, 2,
        0x4D3D47, GAME_STEAM, H_CALL, 0x4D3CF0, 1>;
    using def_t = float(float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float>, 0>;
META_END

META_BEGIN(CGeneral::LimitRadianAngle)
    static int address;
    static int global_address;
    static const int id = 0x48CB90;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CB90, 0x48CC90, 0x48CC20>;
    // total references count: 10en (80), 11en (80), steam (80)
    using refs_t = RefList<
        0x4196C7, GAME_10EN, H_CALL, 0x419300, 1,
        0x4196D7, GAME_10EN, H_CALL, 0x419300, 2,
        0x4C0C50, GAME_10EN, H_CALL, 0x4C07A0, 1,
        0x4C7430, GAME_10EN, H_CALL, 0x4C73F0, 1,
        0x4C7440, GAME_10EN, H_CALL, 0x4C73F0, 2,
        0x4C76EB, GAME_10EN, H_CALL, 0x4C73F0, 3,
        0x4C781D, GAME_10EN, H_CALL, 0x4C73F0, 4,
        0x4C79D8, GAME_10EN, H_CALL, 0x4C78F0, 1,
        0x4C907D, GAME_10EN, H_CALL, 0x4C8910, 1,
        0x4C988B, GAME_10EN, H_CALL, 0x4C8910, 2,
        0x4C9D89, GAME_10EN, H_CALL, 0x4C8910, 3,
        0x4C9D9D, GAME_10EN, H_CALL, 0x4C8910, 4,
        0x4CA0B7, GAME_10EN, H_CALL, 0x4C8910, 5,
        0x4CA69B, GAME_10EN, H_CALL, 0x4C8910, 6,
        0x4CA850, GAME_10EN, H_CALL, 0x4C8910, 7,
        0x4CACA1, GAME_10EN, H_CALL, 0x4C8910, 8,
        0x4CD3EC, GAME_10EN, H_CALL, 0x4CCEB0, 1,
        0x4CD999, GAME_10EN, H_CALL, 0x4CCEB0, 2,
        0x4CDA91, GAME_10EN, H_CALL, 0x4CCEB0, 3,
        0x4CDB90, GAME_10EN, H_CALL, 0x4CCEB0, 4,
        0x4CDCB7, GAME_10EN, H_CALL, 0x4CCEB0, 5,
        0x4CDE61, GAME_10EN, H_CALL, 0x4CCEB0, 6,
        0x4CDEA6, GAME_10EN, H_CALL, 0x4CCEB0, 7,
        0x4CDF14, GAME_10EN, H_CALL, 0x4CCEB0, 8,
        0x4CDF35, GAME_10EN, H_CALL, 0x4CCEB0, 9,
        0x4CDF7E, GAME_10EN, H_CALL, 0x4CCEB0, 10,
        0x4CE04D, GAME_10EN, H_CALL, 0x4CCEB0, 11,
        0x4CE092, GAME_10EN, H_CALL, 0x4CCEB0, 12,
        0x4CE0FB, GAME_10EN, H_CALL, 0x4CCEB0, 13,
        0x4CE11C, GAME_10EN, H_CALL, 0x4CCEB0, 14,
        0x4CE135, GAME_10EN, H_CALL, 0x4CCEB0, 15,
        0x4CE1B5, GAME_10EN, H_CALL, 0x4CCEB0, 16,
        0x4CE264, GAME_10EN, H_CALL, 0x4CCEB0, 17,
        0x4CE29E, GAME_10EN, H_CALL, 0x4CCEB0, 18,
        0x4CE303, GAME_10EN, H_CALL, 0x4CCEB0, 19,
        0x4CE3A7, GAME_10EN, H_CALL, 0x4CCEB0, 20,
        0x4CE3C8, GAME_10EN, H_CALL, 0x4CCEB0, 21,
        0x4CE4F7, GAME_10EN, H_CALL, 0x4CCEB0, 22,
        0x4CE554, GAME_10EN, H_CALL, 0x4CCEB0, 23,
        0x4D0FB4, GAME_10EN, H_CALL, 0x4D0F20, 1,
        0x4D13CF, GAME_10EN, H_CALL, 0x4D1390, 1,
        0x4D1CFB, GAME_10EN, H_CALL, 0x4D1C40, 1,
        0x4D1E2A, GAME_10EN, H_CALL, 0x4D1D70, 1,
        0x4D222D, GAME_10EN, H_CALL, 0x4D1ED0, 1,
        0x4D2482, GAME_10EN, H_CALL, 0x4D1ED0, 2,
        0x4D24B5, GAME_10EN, H_CALL, 0x4D1ED0, 3,
        0x4D24E7, GAME_10EN, H_CALL, 0x4D1ED0, 4,
        0x4D2609, GAME_10EN, H_CALL, 0x4D1ED0, 5,
        0x4D3130, GAME_10EN, H_CALL, 0x4D30C0, 1,
        0x4D3140, GAME_10EN, H_CALL, 0x4D30C0, 2,
        0x4D3298, GAME_10EN, H_CALL, 0x4D30C0, 3,
        0x4D3368, GAME_10EN, H_CALL, 0x4D30C0, 4,
        0x4D3460, GAME_10EN, H_CALL, 0x4D33A0, 1,
        0x4D3470, GAME_10EN, H_CALL, 0x4D33A0, 2,
        0x4D356D, GAME_10EN, H_CALL, 0x4D33A0, 3,
        0x4D613C, GAME_10EN, H_CALL, 0x4D5D80, 1,
        0x4D6D42, GAME_10EN, H_CALL, 0x4D6A00, 1,
        0x4D6D92, GAME_10EN, H_CALL, 0x4D6A00, 2,
        0x4D6DE2, GAME_10EN, H_CALL, 0x4D6A00, 3,
        0x4D6E32, GAME_10EN, H_CALL, 0x4D6A00, 4,
        0x4DFF1F, GAME_10EN, H_CALL, 0x4DF940, 1,
        0x4E5CB3, GAME_10EN, H_CALL, 0x4E5BD0, 1,
        0x4E5CC3, GAME_10EN, H_CALL, 0x4E5BD0, 2,
        0x4E6A74, GAME_10EN, H_CALL, 0x4E6990, 1,
        0x4E6A84, GAME_10EN, H_CALL, 0x4E6990, 2,
        0x4E76D6, GAME_10EN, H_CALL, 0x4E7530, 1,
        0x4E84C6, GAME_10EN, H_CALL, 0x4E7EE0, 1,
        0x4E86C0, GAME_10EN, H_CALL, 0x4E7EE0, 2,
        0x4E86D0, GAME_10EN, H_CALL, 0x4E7EE0, 3,
        0x4ED6A2, GAME_10EN, H_CALL, 0x4ED620, 1,
        0x4ED6ED, GAME_10EN, H_CALL, 0x4ED620, 2,
        0x4ED742, GAME_10EN, H_CALL, 0x4ED620, 3,
        0x4ED9D3, GAME_10EN, H_CALL, 0x4ED9B0, 1,
        0x4EDA0D, GAME_10EN, H_CALL, 0x4ED9B0, 2,
        0x4EDBD6, GAME_10EN, H_CALL, 0x4EDB20, 1,
        0x4F04FB, GAME_10EN, H_CALL, 0x4EFD90, 1,
        0x4F0594, GAME_10EN, H_CALL, 0x4EFD90, 2,
        0x4F05AE, GAME_10EN, H_CALL, 0x4EFD90, 3,
        0x4F14A6, GAME_10EN, H_CALL, 0x4F13C0, 1,
        0x4F19E8, GAME_10EN, H_CALL, 0x4F1970, 1,
        0x4196C7, GAME_11EN, H_CALL, 0x419300, 1,
        0x4196D7, GAME_11EN, H_CALL, 0x419300, 2,
        0x4C0D40, GAME_11EN, H_CALL, 0x4C0890, 1,
        0x4C74D0, GAME_11EN, H_CALL, 0x4C7490, 1,
        0x4C74E0, GAME_11EN, H_CALL, 0x4C7490, 2,
        0x4C778B, GAME_11EN, H_CALL, 0x4C7490, 3,
        0x4C78BD, GAME_11EN, H_CALL, 0x4C7490, 4,
        0x4C7A78, GAME_11EN, H_CALL, 0x4C7990, 1,
        0x4C911D, GAME_11EN, H_CALL, 0x4C89B0, 1,
        0x4C992B, GAME_11EN, H_CALL, 0x4C89B0, 2,
        0x4C9E29, GAME_11EN, H_CALL, 0x4C89B0, 3,
        0x4C9E3D, GAME_11EN, H_CALL, 0x4C89B0, 4,
        0x4CA157, GAME_11EN, H_CALL, 0x4C89B0, 5,
        0x4CA73B, GAME_11EN, H_CALL, 0x4C89B0, 6,
        0x4CA8F0, GAME_11EN, H_CALL, 0x4C89B0, 7,
        0x4CAD41, GAME_11EN, H_CALL, 0x4C89B0, 8,
        0x4CD48C, GAME_11EN, H_CALL, 0x4CCF50, 1,
        0x4CDA39, GAME_11EN, H_CALL, 0x4CCF50, 2,
        0x4CDB31, GAME_11EN, H_CALL, 0x4CCF50, 3,
        0x4CDC30, GAME_11EN, H_CALL, 0x4CCF50, 4,
        0x4CDD57, GAME_11EN, H_CALL, 0x4CCF50, 5,
        0x4CDF01, GAME_11EN, H_CALL, 0x4CCF50, 6,
        0x4CDF46, GAME_11EN, H_CALL, 0x4CCF50, 7,
        0x4CDFB4, GAME_11EN, H_CALL, 0x4CCF50, 8,
        0x4CDFD5, GAME_11EN, H_CALL, 0x4CCF50, 9,
        0x4CE01E, GAME_11EN, H_CALL, 0x4CCF50, 10,
        0x4CE0ED, GAME_11EN, H_CALL, 0x4CCF50, 11,
        0x4CE132, GAME_11EN, H_CALL, 0x4CCF50, 12,
        0x4CE19B, GAME_11EN, H_CALL, 0x4CCF50, 13,
        0x4CE1BC, GAME_11EN, H_CALL, 0x4CCF50, 14,
        0x4CE1D5, GAME_11EN, H_CALL, 0x4CCF50, 15,
        0x4CE255, GAME_11EN, H_CALL, 0x4CCF50, 16,
        0x4CE304, GAME_11EN, H_CALL, 0x4CCF50, 17,
        0x4CE33E, GAME_11EN, H_CALL, 0x4CCF50, 18,
        0x4CE3A3, GAME_11EN, H_CALL, 0x4CCF50, 19,
        0x4CE447, GAME_11EN, H_CALL, 0x4CCF50, 20,
        0x4CE468, GAME_11EN, H_CALL, 0x4CCF50, 21,
        0x4CE597, GAME_11EN, H_CALL, 0x4CCF50, 22,
        0x4CE5F4, GAME_11EN, H_CALL, 0x4CCF50, 23,
        0x4D1054, GAME_11EN, H_CALL, 0x4D0FC0, 1,
        0x4D146F, GAME_11EN, H_CALL, 0x4D1430, 1,
        0x4D1D9B, GAME_11EN, H_CALL, 0x4D1CE0, 1,
        0x4D1ECA, GAME_11EN, H_CALL, 0x4D1E10, 1,
        0x4D22CD, GAME_11EN, H_CALL, 0x4D1F70, 1,
        0x4D2522, GAME_11EN, H_CALL, 0x4D1F70, 2,
        0x4D2555, GAME_11EN, H_CALL, 0x4D1F70, 3,
        0x4D2587, GAME_11EN, H_CALL, 0x4D1F70, 4,
        0x4D26A9, GAME_11EN, H_CALL, 0x4D1F70, 5,
        0x4D31D0, GAME_11EN, H_CALL, 0x4D3160, 1,
        0x4D31E0, GAME_11EN, H_CALL, 0x4D3160, 2,
        0x4D3338, GAME_11EN, H_CALL, 0x4D3160, 3,
        0x4D3408, GAME_11EN, H_CALL, 0x4D3160, 4,
        0x4D3500, GAME_11EN, H_CALL, 0x4D3440, 1,
        0x4D3510, GAME_11EN, H_CALL, 0x4D3440, 2,
        0x4D360D, GAME_11EN, H_CALL, 0x4D3440, 3,
        0x4D61DC, GAME_11EN, H_CALL, 0x4D5E20, 1,
        0x4D6DE2, GAME_11EN, H_CALL, 0x4D6AA0, 1,
        0x4D6E32, GAME_11EN, H_CALL, 0x4D6AA0, 2,
        0x4D6E82, GAME_11EN, H_CALL, 0x4D6AA0, 3,
        0x4D6ED2, GAME_11EN, H_CALL, 0x4D6AA0, 4,
        0x4DFFCF, GAME_11EN, H_CALL, 0x4DF9F0, 1,
        0x4E5D63, GAME_11EN, H_CALL, 0x4E5C80, 1,
        0x4E5D73, GAME_11EN, H_CALL, 0x4E5C80, 2,
        0x4E6B24, GAME_11EN, H_CALL, 0x4E6A40, 1,
        0x4E6B34, GAME_11EN, H_CALL, 0x4E6A40, 2,
        0x4E7786, GAME_11EN, H_CALL, 0x4E75E0, 1,
        0x4E8576, GAME_11EN, H_CALL, 0x4E7F90, 1,
        0x4E8770, GAME_11EN, H_CALL, 0x4E7F90, 2,
        0x4E8780, GAME_11EN, H_CALL, 0x4E7F90, 3,
        0x4ED752, GAME_11EN, H_CALL, 0x4ED6D0, 1,
        0x4ED79D, GAME_11EN, H_CALL, 0x4ED6D0, 2,
        0x4ED7F2, GAME_11EN, H_CALL, 0x4ED6D0, 3,
        0x4EDA83, GAME_11EN, H_CALL, 0x4EDA60, 1,
        0x4EDABD, GAME_11EN, H_CALL, 0x4EDA60, 2,
        0x4EDC86, GAME_11EN, H_CALL, 0x4EDBD0, 1,
        0x4F05AB, GAME_11EN, H_CALL, 0x4EFE40, 1,
        0x4F0644, GAME_11EN, H_CALL, 0x4EFE40, 2,
        0x4F065E, GAME_11EN, H_CALL, 0x4EFE40, 3,
        0x4F1556, GAME_11EN, H_CALL, 0x4F1470, 1,
        0x4F1A98, GAME_11EN, H_CALL, 0x4F1A20, 1,
        0x4196C7, GAME_STEAM, H_CALL, 0x419300, 1,
        0x4196D7, GAME_STEAM, H_CALL, 0x419300, 2,
        0x4C0CD0, GAME_STEAM, H_CALL, 0x4C0820, 1,
        0x4C7460, GAME_STEAM, H_CALL, 0x4C7420, 1,
        0x4C7470, GAME_STEAM, H_CALL, 0x4C7420, 2,
        0x4C771B, GAME_STEAM, H_CALL, 0x4C7420, 3,
        0x4C784D, GAME_STEAM, H_CALL, 0x4C7420, 4,
        0x4C7A08, GAME_STEAM, H_CALL, 0x4C7920, 1,
        0x4C90AD, GAME_STEAM, H_CALL, 0x4C8940, 1,
        0x4C98BB, GAME_STEAM, H_CALL, 0x4C8940, 2,
        0x4C9DB9, GAME_STEAM, H_CALL, 0x4C8940, 3,
        0x4C9DCD, GAME_STEAM, H_CALL, 0x4C8940, 4,
        0x4CA0E7, GAME_STEAM, H_CALL, 0x4C8940, 5,
        0x4CA6CB, GAME_STEAM, H_CALL, 0x4C8940, 6,
        0x4CA880, GAME_STEAM, H_CALL, 0x4C8940, 7,
        0x4CACD1, GAME_STEAM, H_CALL, 0x4C8940, 8,
        0x4CD41C, GAME_STEAM, H_CALL, 0x4CCEE0, 1,
        0x4CD9C9, GAME_STEAM, H_CALL, 0x4CCEE0, 2,
        0x4CDAC1, GAME_STEAM, H_CALL, 0x4CCEE0, 3,
        0x4CDBC0, GAME_STEAM, H_CALL, 0x4CCEE0, 4,
        0x4CDCE7, GAME_STEAM, H_CALL, 0x4CCEE0, 5,
        0x4CDE91, GAME_STEAM, H_CALL, 0x4CCEE0, 6,
        0x4CDED6, GAME_STEAM, H_CALL, 0x4CCEE0, 7,
        0x4CDF44, GAME_STEAM, H_CALL, 0x4CCEE0, 8,
        0x4CDF65, GAME_STEAM, H_CALL, 0x4CCEE0, 9,
        0x4CDFAE, GAME_STEAM, H_CALL, 0x4CCEE0, 10,
        0x4CE07D, GAME_STEAM, H_CALL, 0x4CCEE0, 11,
        0x4CE0C2, GAME_STEAM, H_CALL, 0x4CCEE0, 12,
        0x4CE12B, GAME_STEAM, H_CALL, 0x4CCEE0, 13,
        0x4CE14C, GAME_STEAM, H_CALL, 0x4CCEE0, 14,
        0x4CE165, GAME_STEAM, H_CALL, 0x4CCEE0, 15,
        0x4CE1E5, GAME_STEAM, H_CALL, 0x4CCEE0, 16,
        0x4CE294, GAME_STEAM, H_CALL, 0x4CCEE0, 17,
        0x4CE2CE, GAME_STEAM, H_CALL, 0x4CCEE0, 18,
        0x4CE333, GAME_STEAM, H_CALL, 0x4CCEE0, 19,
        0x4CE3D7, GAME_STEAM, H_CALL, 0x4CCEE0, 20,
        0x4CE3F8, GAME_STEAM, H_CALL, 0x4CCEE0, 21,
        0x4CE527, GAME_STEAM, H_CALL, 0x4CCEE0, 22,
        0x4CE584, GAME_STEAM, H_CALL, 0x4CCEE0, 23,
        0x4D0FE4, GAME_STEAM, H_CALL, 0x4D0F50, 1,
        0x4D13FF, GAME_STEAM, H_CALL, 0x4D13C0, 1,
        0x4D1D2B, GAME_STEAM, H_CALL, 0x4D1C70, 1,
        0x4D1E5A, GAME_STEAM, H_CALL, 0x4D1DA0, 1,
        0x4D225D, GAME_STEAM, H_CALL, 0x4D1F00, 1,
        0x4D24B2, GAME_STEAM, H_CALL, 0x4D1F00, 2,
        0x4D24E5, GAME_STEAM, H_CALL, 0x4D1F00, 3,
        0x4D2517, GAME_STEAM, H_CALL, 0x4D1F00, 4,
        0x4D2639, GAME_STEAM, H_CALL, 0x4D1F00, 5,
        0x4D3160, GAME_STEAM, H_CALL, 0x4D30F0, 1,
        0x4D3170, GAME_STEAM, H_CALL, 0x4D30F0, 2,
        0x4D32C8, GAME_STEAM, H_CALL, 0x4D30F0, 3,
        0x4D3398, GAME_STEAM, H_CALL, 0x4D30F0, 4,
        0x4D3490, GAME_STEAM, H_CALL, 0x4D33D0, 1,
        0x4D34A0, GAME_STEAM, H_CALL, 0x4D33D0, 2,
        0x4D359D, GAME_STEAM, H_CALL, 0x4D33D0, 3,
        0x4D616C, GAME_STEAM, H_CALL, 0x4D5DB0, 1,
        0x4D6D72, GAME_STEAM, H_CALL, 0x4D6A30, 1,
        0x4D6DC2, GAME_STEAM, H_CALL, 0x4D6A30, 2,
        0x4D6E12, GAME_STEAM, H_CALL, 0x4D6A30, 3,
        0x4D6E62, GAME_STEAM, H_CALL, 0x4D6A30, 4,
        0x4DFF5F, GAME_STEAM, H_CALL, 0x4DF980, 1,
        0x4E5CF3, GAME_STEAM, H_CALL, 0x4E5C10, 1,
        0x4E5D03, GAME_STEAM, H_CALL, 0x4E5C10, 2,
        0x4E6AB4, GAME_STEAM, H_CALL, 0x4E69D0, 1,
        0x4E6AC4, GAME_STEAM, H_CALL, 0x4E69D0, 2,
        0x4E7716, GAME_STEAM, H_CALL, 0x4E7570, 1,
        0x4E8506, GAME_STEAM, H_CALL, 0x4E7F20, 1,
        0x4E8700, GAME_STEAM, H_CALL, 0x4E7F20, 2,
        0x4E8710, GAME_STEAM, H_CALL, 0x4E7F20, 3,
        0x4ED6E2, GAME_STEAM, H_CALL, 0x4ED660, 1,
        0x4ED72D, GAME_STEAM, H_CALL, 0x4ED660, 2,
        0x4ED782, GAME_STEAM, H_CALL, 0x4ED660, 3,
        0x4EDA13, GAME_STEAM, H_CALL, 0x4ED9F0, 1,
        0x4EDA4D, GAME_STEAM, H_CALL, 0x4ED9F0, 2,
        0x4EDC16, GAME_STEAM, H_CALL, 0x4EDB60, 1,
        0x4F053B, GAME_STEAM, H_CALL, 0x4EFDD0, 1,
        0x4F05D4, GAME_STEAM, H_CALL, 0x4EFDD0, 2,
        0x4F05EE, GAME_STEAM, H_CALL, 0x4EFDD0, 3,
        0x4F14E6, GAME_STEAM, H_CALL, 0x4F1400, 1,
        0x4F1A28, GAME_STEAM, H_CALL, 0x4F19B0, 1>;
    using def_t = float(float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float>, 0>;
META_END

META_BEGIN(CGeneral::GetATanOfXY)
    static int address;
    static int global_address;
    static const int id = 0x48CC30;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CC30, 0x48CD30, 0x48CCC0>;
    // total references count: 10en (102), 11en (102), steam (102)
    using refs_t = RefList<
        0x41AD60, GAME_10EN, H_CALL, 0x41ACF0, 1,
        0x41AE58, GAME_10EN, H_CALL, 0x41ACF0, 2,
        0x41B321, GAME_10EN, H_CALL, 0x41B2D0, 1,
        0x41B84F, GAME_10EN, H_CALL, 0x41B640, 1,
        0x41C6EE, GAME_10EN, H_CALL, 0x41C480, 1,
        0x41C77F, GAME_10EN, H_CALL, 0x41C480, 2,
        0x41E860, GAME_10EN, H_CALL, 0x41E310, 1,
        0x41E873, GAME_10EN, H_CALL, 0x41E310, 2,
        0x41EB38, GAME_10EN, H_CALL, 0x41E310, 3,
        0x41EB75, GAME_10EN, H_CALL, 0x41E310, 4,
        0x41EB88, GAME_10EN, H_CALL, 0x41E310, 5,
        0x41EE4C, GAME_10EN, H_CALL, 0x41EDC0, 1,
        0x41EE5E, GAME_10EN, H_CALL, 0x41EDC0, 2,
        0x41EFCB, GAME_10EN, H_CALL, 0x41EDC0, 3,
        0x41F534, GAME_10EN, H_CALL, 0x41F4A0, 1,
        0x41F547, GAME_10EN, H_CALL, 0x41F4A0, 2,
        0x42FAD0, GAME_10EN, H_CALL, 0x42F7A0, 1,
        0x441564, GAME_10EN, H_CALL, 0x440CB0, 1,
        0x441647, GAME_10EN, H_CALL, 0x440CB0, 2,
        0x442F5D, GAME_10EN, H_CALL, 0x4429C0, 1,
        0x443059, GAME_10EN, H_CALL, 0x4429C0, 2,
        0x44316F, GAME_10EN, H_CALL, 0x4429C0, 3,
        0x44DD8B, GAME_10EN, H_CALL, 0x44CB80, 1,
        0x4564AF, GAME_10EN, H_CALL, 0x4564A0, 1,
        0x457540, GAME_10EN, H_CALL, 0x4574C0, 1,
        0x457555, GAME_10EN, H_CALL, 0x4574C0, 2,
        0x4575F1, GAME_10EN, H_CALL, 0x4574C0, 3,
        0x4586D0, GAME_10EN, H_CALL, 0x458600, 1,
        0x458A0D, GAME_10EN, H_CALL, 0x458600, 2,
        0x458D0E, GAME_10EN, H_CALL, 0x458C40, 1,
        0x459076, GAME_10EN, H_CALL, 0x458FB0, 1,
        0x459788, GAME_10EN, H_CALL, 0x4596A0, 1,
        0x459969, GAME_10EN, H_CALL, 0x4596A0, 2,
        0x459D8F, GAME_10EN, H_CALL, 0x4596A0, 3,
        0x459DA4, GAME_10EN, H_CALL, 0x4596A0, 4,
        0x45A87C, GAME_10EN, H_CALL, 0x459FA0, 1,
        0x45B523, GAME_10EN, H_CALL, 0x45B470, 1,
        0x45BF2B, GAME_10EN, H_CALL, 0x45BE60, 1,
        0x45C207, GAME_10EN, H_CALL, 0x45C090, 1,
        0x45D38D, GAME_10EN, H_CALL, 0x45D2F0, 1,
        0x45E786, GAME_10EN, H_CALL, 0x45E3A0, 1,
        0x460421, GAME_10EN, H_CALL, 0x45FF70, 1,
        0x4616EC, GAME_10EN, H_CALL, 0x460E00, 1,
        0x4623DC, GAME_10EN, H_CALL, 0x461AF0, 1,
        0x462F7E, GAME_10EN, H_CALL, 0x462420, 1,
        0x463337, GAME_10EN, H_CALL, 0x463130, 1,
        0x4633D1, GAME_10EN, H_CALL, 0x463130, 2,
        0x4635F1, GAME_10EN, H_CALL, 0x463130, 3,
        0x463BCA, GAME_10EN, H_CALL, 0x463A70, 1,
        0x463D55, GAME_10EN, H_CALL, 0x463A70, 2,
        0x46506B, GAME_10EN, H_CALL, 0x465000, 1,
        0x465490, GAME_10EN, H_CALL, 0x4653C0, 1,
        0x465768, GAME_10EN, H_CALL, 0x4656C0, 1,
        0x466769, GAME_10EN, H_CALL, 0x466650, 1,
        0x4667A0, GAME_10EN, H_CALL, 0x466650, 2,
        0x4667D4, GAME_10EN, H_CALL, 0x466650, 3,
        0x46685E, GAME_10EN, H_CALL, 0x466650, 4,
        0x466B84, GAME_10EN, H_CALL, 0x466650, 5,
        0x466CDA, GAME_10EN, H_CALL, 0x466650, 6,
        0x466D1A, GAME_10EN, H_CALL, 0x466650, 7,
        0x466D7E, GAME_10EN, H_CALL, 0x466650, 8,
        0x466FC8, GAME_10EN, H_CALL, 0x466650, 9,
        0x467113, GAME_10EN, H_CALL, 0x466650, 10,
        0x4674B6, GAME_10EN, H_CALL, 0x467400, 1,
        0x4674DF, GAME_10EN, H_CALL, 0x467400, 2,
        0x469BED, GAME_10EN, H_CALL, 0x468250, 1,
        0x469C03, GAME_10EN, H_CALL, 0x468250, 2,
        0x46A5DF, GAME_10EN, H_CALL, 0x468250, 3,
        0x46A700, GAME_10EN, H_CALL, 0x468250, 4,
        0x46A725, GAME_10EN, H_CALL, 0x468250, 5,
        0x46D5E2, GAME_10EN, H_CALL, 0x46D3F0, 1,
        0x46D671, GAME_10EN, H_CALL, 0x46D3F0, 2,
        0x46DC1C, GAME_10EN, H_CALL, 0x46D3F0, 3,
        0x46E2AC, GAME_10EN, H_CALL, 0x46D3F0, 4,
        0x46E5E8, GAME_10EN, H_CALL, 0x46D3F0, 5,
        0x46E601, GAME_10EN, H_CALL, 0x46D3F0, 6,
        0x46FC76, GAME_10EN, H_CALL, 0x46FC60, 1,
        0x46FCA6, GAME_10EN, H_CALL, 0x46FC90, 1,
        0x47011D, GAME_10EN, H_CALL, 0x46FFF0, 1,
        0x4703A3, GAME_10EN, H_CALL, 0x46FFF0, 2,
        0x47040C, GAME_10EN, H_CALL, 0x46FFF0, 3,
        0x4704D8, GAME_10EN, H_CALL, 0x46FFF0, 4,
        0x47050B, GAME_10EN, H_CALL, 0x46FFF0, 5,
        0x4706DC, GAME_10EN, H_CALL, 0x46FFF0, 6,
        0x4706FF, GAME_10EN, H_CALL, 0x46FFF0, 7,
        0x4707E7, GAME_10EN, H_CALL, 0x46FFF0, 8,
        0x470E69, GAME_10EN, H_CALL, 0x470DA0, 1,
        0x470E7E, GAME_10EN, H_CALL, 0x470DA0, 2,
        0x4A0EE1, GAME_10EN, H_CALL, 0x4A0EC0, 1,
        0x4A0F03, GAME_10EN, H_CALL, 0x4A0EC0, 2,
        0x4F2991, GAME_10EN, H_CALL, 0x4F28D0, 1,
        0x4F2C0B, GAME_10EN, H_CALL, 0x4F2B60, 1,
        0x4F2DA0, GAME_10EN, H_CALL, 0x4F2D50, 1,
        0x4F2DC5, GAME_10EN, H_CALL, 0x4F2D50, 2,
        0x4F303E, GAME_10EN, H_CALL, 0x4F2FA0, 1,
        0x4F7B7E, GAME_10EN, H_CALL, 0x4F6D90, 1,
        0x5039CB, GAME_10EN, H_CALL, 0x503420, 1,
        0x522837, GAME_10EN, H_CALL, 0x522590, 1,
        0x52284A, GAME_10EN, H_CALL, 0x522590, 2,
        0x54472F, GAME_10EN, H_CALL, 0x544700, 1,
        0x544F22, GAME_10EN, H_CALL, 0x544EF0, 1,
        0x548C2C, GAME_10EN, H_CALL, 0x547CC0, 1,
        0x41AD60, GAME_11EN, H_CALL, 0x41ACF0, 1,
        0x41AE58, GAME_11EN, H_CALL, 0x41ACF0, 2,
        0x41B321, GAME_11EN, H_CALL, 0x41B2D0, 1,
        0x41B84F, GAME_11EN, H_CALL, 0x41B640, 1,
        0x41C6EE, GAME_11EN, H_CALL, 0x41C480, 1,
        0x41C77F, GAME_11EN, H_CALL, 0x41C480, 2,
        0x41E860, GAME_11EN, H_CALL, 0x41E310, 1,
        0x41E873, GAME_11EN, H_CALL, 0x41E310, 2,
        0x41EB38, GAME_11EN, H_CALL, 0x41E310, 3,
        0x41EB75, GAME_11EN, H_CALL, 0x41E310, 4,
        0x41EB88, GAME_11EN, H_CALL, 0x41E310, 5,
        0x41EE4C, GAME_11EN, H_CALL, 0x41EDC0, 1,
        0x41EE5E, GAME_11EN, H_CALL, 0x41EDC0, 2,
        0x41EFCB, GAME_11EN, H_CALL, 0x41EDC0, 3,
        0x41F534, GAME_11EN, H_CALL, 0x41F4A0, 1,
        0x41F547, GAME_11EN, H_CALL, 0x41F4A0, 2,
        0x42FAD0, GAME_11EN, H_CALL, 0x42F7A0, 1,
        0x441564, GAME_11EN, H_CALL, 0x440CB0, 1,
        0x441647, GAME_11EN, H_CALL, 0x440CB0, 2,
        0x442F5D, GAME_11EN, H_CALL, 0x4429C0, 1,
        0x443059, GAME_11EN, H_CALL, 0x4429C0, 2,
        0x44316F, GAME_11EN, H_CALL, 0x4429C0, 3,
        0x44DD8B, GAME_11EN, H_CALL, 0x44CB80, 1,
        0x4564AF, GAME_11EN, H_CALL, 0x4564A0, 1,
        0x457540, GAME_11EN, H_CALL, 0x4574C0, 1,
        0x457555, GAME_11EN, H_CALL, 0x4574C0, 2,
        0x4575F1, GAME_11EN, H_CALL, 0x4574C0, 3,
        0x4586D0, GAME_11EN, H_CALL, 0x458600, 1,
        0x458A0D, GAME_11EN, H_CALL, 0x458600, 2,
        0x458D0E, GAME_11EN, H_CALL, 0x458C40, 1,
        0x459076, GAME_11EN, H_CALL, 0x458FB0, 1,
        0x459788, GAME_11EN, H_CALL, 0x4596A0, 1,
        0x459969, GAME_11EN, H_CALL, 0x4596A0, 2,
        0x459D8F, GAME_11EN, H_CALL, 0x4596A0, 3,
        0x459DA4, GAME_11EN, H_CALL, 0x4596A0, 4,
        0x45A87C, GAME_11EN, H_CALL, 0x459FA0, 1,
        0x45B523, GAME_11EN, H_CALL, 0x45B470, 1,
        0x45BF2B, GAME_11EN, H_CALL, 0x45BE60, 1,
        0x45C207, GAME_11EN, H_CALL, 0x45C090, 1,
        0x45D38D, GAME_11EN, H_CALL, 0x45D2F0, 1,
        0x45E786, GAME_11EN, H_CALL, 0x45E3A0, 1,
        0x460421, GAME_11EN, H_CALL, 0x45FF70, 1,
        0x4616FE, GAME_11EN, H_CALL, 0x460E00, 1,
        0x4623EC, GAME_11EN, H_CALL, 0x461B00, 1,
        0x462F8E, GAME_11EN, H_CALL, 0x462430, 1,
        0x463347, GAME_11EN, H_CALL, 0x463140, 1,
        0x4633E1, GAME_11EN, H_CALL, 0x463140, 2,
        0x463601, GAME_11EN, H_CALL, 0x463140, 3,
        0x463BDA, GAME_11EN, H_CALL, 0x463A80, 1,
        0x463D65, GAME_11EN, H_CALL, 0x463A80, 2,
        0x46507B, GAME_11EN, H_CALL, 0x465010, 1,
        0x4654A0, GAME_11EN, H_CALL, 0x4653D0, 1,
        0x465778, GAME_11EN, H_CALL, 0x4656D0, 1,
        0x466779, GAME_11EN, H_CALL, 0x466660, 1,
        0x4667B0, GAME_11EN, H_CALL, 0x466660, 2,
        0x4667E4, GAME_11EN, H_CALL, 0x466660, 3,
        0x46686E, GAME_11EN, H_CALL, 0x466660, 4,
        0x466B94, GAME_11EN, H_CALL, 0x466660, 5,
        0x466CEA, GAME_11EN, H_CALL, 0x466660, 6,
        0x466D2A, GAME_11EN, H_CALL, 0x466660, 7,
        0x466D8E, GAME_11EN, H_CALL, 0x466660, 8,
        0x466FD8, GAME_11EN, H_CALL, 0x466660, 9,
        0x467123, GAME_11EN, H_CALL, 0x466660, 10,
        0x4674C6, GAME_11EN, H_CALL, 0x467410, 1,
        0x4674EF, GAME_11EN, H_CALL, 0x467410, 2,
        0x469BFD, GAME_11EN, H_CALL, 0x468260, 1,
        0x469C13, GAME_11EN, H_CALL, 0x468260, 2,
        0x46A5EF, GAME_11EN, H_CALL, 0x468260, 3,
        0x46A710, GAME_11EN, H_CALL, 0x468260, 4,
        0x46A735, GAME_11EN, H_CALL, 0x468260, 5,
        0x46D5C2, GAME_11EN, H_CALL, 0x46D3D0, 1,
        0x46D651, GAME_11EN, H_CALL, 0x46D3D0, 2,
        0x46DBFC, GAME_11EN, H_CALL, 0x46D3D0, 3,
        0x46E28C, GAME_11EN, H_CALL, 0x46D3D0, 4,
        0x46E5C8, GAME_11EN, H_CALL, 0x46D3D0, 5,
        0x46E5E1, GAME_11EN, H_CALL, 0x46D3D0, 6,
        0x46FC56, GAME_11EN, H_CALL, 0x46FC40, 1,
        0x46FC86, GAME_11EN, H_CALL, 0x46FC70, 1,
        0x4700FD, GAME_11EN, H_CALL, 0x46FFD0, 1,
        0x470383, GAME_11EN, H_CALL, 0x46FFD0, 2,
        0x4703EC, GAME_11EN, H_CALL, 0x46FFD0, 3,
        0x4704B8, GAME_11EN, H_CALL, 0x46FFD0, 4,
        0x4704EB, GAME_11EN, H_CALL, 0x46FFD0, 5,
        0x4706BC, GAME_11EN, H_CALL, 0x46FFD0, 6,
        0x4706DF, GAME_11EN, H_CALL, 0x46FFD0, 7,
        0x4707C7, GAME_11EN, H_CALL, 0x46FFD0, 8,
        0x470E49, GAME_11EN, H_CALL, 0x470D80, 1,
        0x470E5E, GAME_11EN, H_CALL, 0x470D80, 2,
        0x4A0FD1, GAME_11EN, H_CALL, 0x4A0FB0, 1,
        0x4A0FF3, GAME_11EN, H_CALL, 0x4A0FB0, 2,
        0x4F2A41, GAME_11EN, H_CALL, 0x4F2980, 1,
        0x4F2CBB, GAME_11EN, H_CALL, 0x4F2C10, 1,
        0x4F2E50, GAME_11EN, H_CALL, 0x4F2E00, 1,
        0x4F2E75, GAME_11EN, H_CALL, 0x4F2E00, 2,
        0x4F30EE, GAME_11EN, H_CALL, 0x4F3050, 1,
        0x4F7C5E, GAME_11EN, H_CALL, 0x4F6E70, 1,
        0x503AAB, GAME_11EN, H_CALL, 0x503500, 1,
        0x522A77, GAME_11EN, H_CALL, 0x5227D0, 1,
        0x522A8A, GAME_11EN, H_CALL, 0x5227D0, 2,
        0x54496F, GAME_11EN, H_CALL, 0x544940, 1,
        0x545162, GAME_11EN, H_CALL, 0x545130, 1,
        0x548E2C, GAME_11EN, H_CALL, 0x547EC0, 1,
        0x41AD60, GAME_STEAM, H_CALL, 0x41ACF0, 1,
        0x41AE58, GAME_STEAM, H_CALL, 0x41ACF0, 2,
        0x41B321, GAME_STEAM, H_CALL, 0x41B2D0, 1,
        0x41B84F, GAME_STEAM, H_CALL, 0x41B640, 1,
        0x41C6EE, GAME_STEAM, H_CALL, 0x41C480, 1,
        0x41C77F, GAME_STEAM, H_CALL, 0x41C480, 2,
        0x41E860, GAME_STEAM, H_CALL, 0x41E310, 1,
        0x41E873, GAME_STEAM, H_CALL, 0x41E310, 2,
        0x41EB38, GAME_STEAM, H_CALL, 0x41E310, 3,
        0x41EB75, GAME_STEAM, H_CALL, 0x41E310, 4,
        0x41EB88, GAME_STEAM, H_CALL, 0x41E310, 5,
        0x41EE4C, GAME_STEAM, H_CALL, 0x41EDC0, 1,
        0x41EE5E, GAME_STEAM, H_CALL, 0x41EDC0, 2,
        0x41EFCB, GAME_STEAM, H_CALL, 0x41EDC0, 3,
        0x41F534, GAME_STEAM, H_CALL, 0x41F4A0, 1,
        0x41F547, GAME_STEAM, H_CALL, 0x41F4A0, 2,
        0x42FAD0, GAME_STEAM, H_CALL, 0x42F7A0, 1,
        0x441564, GAME_STEAM, H_CALL, 0x440CB0, 1,
        0x441647, GAME_STEAM, H_CALL, 0x440CB0, 2,
        0x442F5D, GAME_STEAM, H_CALL, 0x4429C0, 1,
        0x443059, GAME_STEAM, H_CALL, 0x4429C0, 2,
        0x44316F, GAME_STEAM, H_CALL, 0x4429C0, 3,
        0x44DD8B, GAME_STEAM, H_CALL, 0x44CB80, 1,
        0x4564AF, GAME_STEAM, H_CALL, 0x4564A0, 1,
        0x457540, GAME_STEAM, H_CALL, 0x4574C0, 1,
        0x457555, GAME_STEAM, H_CALL, 0x4574C0, 2,
        0x4575F1, GAME_STEAM, H_CALL, 0x4574C0, 3,
        0x4586D0, GAME_STEAM, H_CALL, 0x458600, 1,
        0x458A0D, GAME_STEAM, H_CALL, 0x458600, 2,
        0x458D0E, GAME_STEAM, H_CALL, 0x458C40, 1,
        0x459076, GAME_STEAM, H_CALL, 0x458FB0, 1,
        0x459788, GAME_STEAM, H_CALL, 0x4596A0, 1,
        0x459969, GAME_STEAM, H_CALL, 0x4596A0, 2,
        0x459D8F, GAME_STEAM, H_CALL, 0x4596A0, 3,
        0x459DA4, GAME_STEAM, H_CALL, 0x4596A0, 4,
        0x45A87C, GAME_STEAM, H_CALL, 0x459FA0, 1,
        0x45B523, GAME_STEAM, H_CALL, 0x45B470, 1,
        0x45BF2B, GAME_STEAM, H_CALL, 0x45BE60, 1,
        0x45C207, GAME_STEAM, H_CALL, 0x45C090, 1,
        0x45D38D, GAME_STEAM, H_CALL, 0x45D2F0, 1,
        0x45E786, GAME_STEAM, H_CALL, 0x45E3A0, 1,
        0x460421, GAME_STEAM, H_CALL, 0x45FF70, 1,
        0x4616FE, GAME_STEAM, H_CALL, 0x460E00, 1,
        0x4623EC, GAME_STEAM, H_CALL, 0x461B00, 1,
        0x462F8E, GAME_STEAM, H_CALL, 0x462430, 1,
        0x463347, GAME_STEAM, H_CALL, 0x463140, 1,
        0x4633E1, GAME_STEAM, H_CALL, 0x463140, 2,
        0x463601, GAME_STEAM, H_CALL, 0x463140, 3,
        0x463BDA, GAME_STEAM, H_CALL, 0x463A80, 1,
        0x463D65, GAME_STEAM, H_CALL, 0x463A80, 2,
        0x46507B, GAME_STEAM, H_CALL, 0x465010, 1,
        0x4654A0, GAME_STEAM, H_CALL, 0x4653D0, 1,
        0x465778, GAME_STEAM, H_CALL, 0x4656D0, 1,
        0x466779, GAME_STEAM, H_CALL, 0x466660, 1,
        0x4667B0, GAME_STEAM, H_CALL, 0x466660, 2,
        0x4667E4, GAME_STEAM, H_CALL, 0x466660, 3,
        0x46686E, GAME_STEAM, H_CALL, 0x466660, 4,
        0x466B94, GAME_STEAM, H_CALL, 0x466660, 5,
        0x466CEA, GAME_STEAM, H_CALL, 0x466660, 6,
        0x466D2A, GAME_STEAM, H_CALL, 0x466660, 7,
        0x466D8E, GAME_STEAM, H_CALL, 0x466660, 8,
        0x466FD8, GAME_STEAM, H_CALL, 0x466660, 9,
        0x467123, GAME_STEAM, H_CALL, 0x466660, 10,
        0x4674C6, GAME_STEAM, H_CALL, 0x467410, 1,
        0x4674EF, GAME_STEAM, H_CALL, 0x467410, 2,
        0x469BFD, GAME_STEAM, H_CALL, 0x468260, 1,
        0x469C13, GAME_STEAM, H_CALL, 0x468260, 2,
        0x46A5EF, GAME_STEAM, H_CALL, 0x468260, 3,
        0x46A710, GAME_STEAM, H_CALL, 0x468260, 4,
        0x46A735, GAME_STEAM, H_CALL, 0x468260, 5,
        0x46D5C2, GAME_STEAM, H_CALL, 0x46D3D0, 1,
        0x46D651, GAME_STEAM, H_CALL, 0x46D3D0, 2,
        0x46DBFC, GAME_STEAM, H_CALL, 0x46D3D0, 3,
        0x46E28C, GAME_STEAM, H_CALL, 0x46D3D0, 4,
        0x46E5C8, GAME_STEAM, H_CALL, 0x46D3D0, 5,
        0x46E5E1, GAME_STEAM, H_CALL, 0x46D3D0, 6,
        0x46FC56, GAME_STEAM, H_CALL, 0x46FC40, 1,
        0x46FC86, GAME_STEAM, H_CALL, 0x46FC70, 1,
        0x4700FD, GAME_STEAM, H_CALL, 0x46FFD0, 1,
        0x470383, GAME_STEAM, H_CALL, 0x46FFD0, 2,
        0x4703EC, GAME_STEAM, H_CALL, 0x46FFD0, 3,
        0x4704B8, GAME_STEAM, H_CALL, 0x46FFD0, 4,
        0x4704EB, GAME_STEAM, H_CALL, 0x46FFD0, 5,
        0x4706BC, GAME_STEAM, H_CALL, 0x46FFD0, 6,
        0x4706DF, GAME_STEAM, H_CALL, 0x46FFD0, 7,
        0x4707C7, GAME_STEAM, H_CALL, 0x46FFD0, 8,
        0x470E49, GAME_STEAM, H_CALL, 0x470D80, 1,
        0x470E5E, GAME_STEAM, H_CALL, 0x470D80, 2,
        0x4A0F61, GAME_STEAM, H_CALL, 0x4A0F40, 1,
        0x4A0F83, GAME_STEAM, H_CALL, 0x4A0F40, 2,
        0x4F29D1, GAME_STEAM, H_CALL, 0x4F2910, 1,
        0x4F2C4B, GAME_STEAM, H_CALL, 0x4F2BA0, 1,
        0x4F2DE0, GAME_STEAM, H_CALL, 0x4F2D90, 1,
        0x4F2E05, GAME_STEAM, H_CALL, 0x4F2D90, 2,
        0x4F307E, GAME_STEAM, H_CALL, 0x4F2FE0, 1,
        0x4F7BEE, GAME_STEAM, H_CALL, 0x4F6E00, 1,
        0x503A3B, GAME_STEAM, H_CALL, 0x503490, 1,
        0x522A07, GAME_STEAM, H_CALL, 0x522760, 1,
        0x522A1A, GAME_STEAM, H_CALL, 0x522760, 2,
        0x54491F, GAME_STEAM, H_CALL, 0x5448F0, 1,
        0x545112, GAME_STEAM, H_CALL, 0x5450E0, 1,
        0x548DDC, GAME_STEAM, H_CALL, 0x547E70, 1>;
    using def_t = float(float, float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float,float>, 0,1>;
META_END

META_BEGIN(CGeneral::GetNodeHeadingFromVector)
    static int address;
    static int global_address;
    static const int id = 0x48CE40;
    static const bool is_virtual = false;
    static const int vtable_index = -1;
    using mv_addresses_t = MvAddresses<0x48CE40, 0x48CF40, 0x48CED0>;
    // total references count: 10en (2), 11en (2), steam (2)
    using refs_t = RefList<
        0x4D2032, GAME_10EN, H_CALL, 0x4D1ED0, 1,
        0x4D2132, GAME_10EN, H_CALL, 0x4D1ED0, 2,
        0x4D20D2, GAME_11EN, H_CALL, 0x4D1F70, 1,
        0x4D21D2, GAME_11EN, H_CALL, 0x4D1F70, 2,
        0x4D2062, GAME_STEAM, H_CALL, 0x4D1F00, 1,
        0x4D2162, GAME_STEAM, H_CALL, 0x4D1F00, 2>;
    using def_t = int(float, float);
    static const int cb_priority = PRIORITY_BEFORE; 
    using calling_convention_t = CallingConventions::Cdecl;
    using args_t = ArgPick<ArgTypes<float,float>, 0,1>;
META_END

}
