/*
    Plugin-SDK (Grand Theft Auto Vice City) header file
    Authors: GTA Community. See more here
    https://github.com/DK22Pac/plugin-sdk
    Do not delete this comment block. Respect others' work!
*/
#include "PluginBase.h"

namespace plugin {

META_BEGIN(CPad::EditCodesForControls)
static int address;
static int global_address;
static const int id = 0x4A90B0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A90B0, 0x4A90D0, 0x4A8F80>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x499112,100,0,0x4990DD,1, 0x499133,110,0,0x4990FE,1, 0x499033,120,0,0x498FFE,1>;
using def_t = void(int *, int);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<int *,int>, 0,1>;
META_END

META_BEGIN(CPad::ResetCheats)
static int address;
static int global_address;
static const int id = 0x4A9590;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9590, 0x4A95B0, 0x4A9460>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x60051E,100,0,0x5FFAB0,1, 0x61A7D9,100,0,0x61A700,1, 0x60053E,110,0,0x5FFAD0,1, 0x61A7B9,110,0,0x61A6E0,1, 0x60017E,120,0,0x5FF710,1, 0x61A3F9,120,0,0x61A320,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::PrintErrorMessage)
static int address;
static int global_address;
static const int id = 0x4A9660;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9660, 0x4A9680, 0x4A9530>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x4A64F3,100,0,0x4A6190,1, 0x4A6513,110,0,0x4A61B0,1, 0x4A63C3,120,0,0x4A6060,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::ResetAverageWeapon)
static int address;
static int global_address;
static const int id = 0x4A98A0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A98A0, 0x4A98C0, 0x4A9770>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x52D7B5,100,0,0x52D1C0,1, 0x52D7D5,110,0,0x52D1E0,1, 0x52D6A5,120,0,0x52D0B0,1>;
using def_t = void(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::LookAroundUpDown)
static int address;
static int global_address;
static const int id = 0x4A98F0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A98F0, 0x4A9910, 0x4A97C0>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x471206,100,0,0x4700E7,1, 0x47C082,100,0,0x47BE8F,1, 0x481F55,100,0,0x481AB3,1, 0x482955,100,0,0x48267A,1, 0x471206,110,0,0x4700E7,1, 0x47C082,110,0,0x47BE8F,1, 0x481F55,110,0,0x481AB3,1, 0x482955,110,0,0x48267A,1, 0x4710E6,120,0,0x46FFC7,1, 0x47BF62,120,0,0x47BD6F,1, 0x481E35,120,0,0x481993,1, 0x482835,120,0,0x48255A,1>;
using def_t = int(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::LookAroundLeftRight)
static int address;
static int global_address;
static const int id = 0x4A9A80;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9A80, 0x4A9AA0, 0x4A9950>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x4711F2,100,0,0x4700E7,1, 0x47C062,100,0,0x47BE8F,1, 0x481F35,100,0,0x481AB3,1, 0x482935,100,0,0x48267A,1, 0x4711F2,110,0,0x4700E7,1, 0x47C062,110,0,0x47BE8F,1, 0x481F35,110,0,0x481AB3,1, 0x482935,110,0,0x48267A,1, 0x4710D2,120,0,0x46FFC7,1, 0x47BF42,120,0,0x47BD6F,1, 0x481E15,120,0,0x481993,1, 0x482815,120,0,0x48255A,1>;
using def_t = int(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::SniperModeLookUpDown)
static int address;
static int global_address;
static const int id = 0x4A9C40;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9C40, 0x4A9C60, 0x4A9B10>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x479692,100,0,0x479410,1, 0x47A42D,100,0,0x47A20E,1, 0x47AF93,100,0,0x47AE27,1, 0x479692,110,0,0x479410,1, 0x47A42D,110,0,0x47A20E,1, 0x47AF93,110,0,0x47AE27,1, 0x479572,120,0,0x4792F0,1, 0x47A30D,120,0,0x47A0EE,1, 0x47AE73,120,0,0x47AD07,1>;
using def_t = int(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::SniperModeLookLeftRight)
static int address;
static int global_address;
static const int id = 0x4A9D40;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9D40, 0x4A9D60, 0x4A9C10>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x479672,100,0,0x479410,1, 0x47A40D,100,0,0x47A20E,1, 0x47AF73,100,0,0x47AE27,1, 0x479672,110,0,0x479410,1, 0x47A40D,110,0,0x47A20E,1, 0x47AF73,110,0,0x47AE27,1, 0x479552,120,0,0x4792F0,1, 0x47A2ED,120,0,0x47A0EE,1, 0x47AE53,120,0,0x47AD07,1>;
using def_t = int(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::SniperZoomOut)
static int address;
static int global_address;
static const int id = 0x4A9E20;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9E20, 0x4A9E40, 0x4A9CF0>;
// total references count: 10en (5), 11en (5), steam (5)
using refs_t = RefList<0x4799C7,100,0,0x479410,1, 0x4799EE,100,0,0x479410,2, 0x479A20,100,0,0x479410,3, 0x482560,100,0,0x481AB3,1, 0x482586,100,0,0x481AB3,2, 0x4799C7,110,0,0x479410,1, 0x4799EE,110,0,0x479410,2, 0x479A20,110,0,0x479410,3, 0x482560,110,0,0x481AB3,1, 0x482586,110,0,0x481AB3,2, 0x4798A7,120,0,0x4792F0,1, 0x4798CE,120,0,0x4792F0,2, 0x479900,120,0,0x4792F0,3, 0x482440,120,0,0x481993,1, 0x482466,120,0,0x481993,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::SniperZoomIn)
static int address;
static int global_address;
static const int id = 0x4A9E90;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9E90, 0x4A9EB0, 0x4A9D60>;
// total references count: 10en (5), 11en (5), steam (5)
using refs_t = RefList<0x4799A4,100,0,0x479410,1, 0x479A01,100,0,0x479410,2, 0x479A72,100,0,0x479410,3, 0x482573,100,0,0x481AB3,1, 0x4825B9,100,0,0x481AB3,2, 0x4799A4,110,0,0x479410,1, 0x479A01,110,0,0x479410,2, 0x479A72,110,0,0x479410,3, 0x482573,110,0,0x481AB3,1, 0x4825B9,110,0,0x481AB3,2, 0x479884,120,0,0x4792F0,1, 0x4798E1,120,0,0x4792F0,2, 0x479952,120,0,0x4792F0,3, 0x482453,120,0,0x481993,1, 0x482499,120,0,0x481993,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::ForceCameraBehindPlayer)
static int address;
static int global_address;
static const int id = 0x4A9F00;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9F00, 0x4A9F20, 0x4A9DD0>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x47D53E,100,0,0x47CE73,1, 0x47D7C6,100,0,0x47CE73,2, 0x47D53E,110,0,0x47CE73,1, 0x47D7C6,110,0,0x47CE73,2, 0x47D41E,120,0,0x47CD53,1, 0x47D6A6,120,0,0x47CD53,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CollectPickupJustDown)
static int address;
static int global_address;
static const int id = 0x4A9F80;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4A9F80, 0x4A9FA0, 0x4A9E50>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x441BC1,100,0,0x441BB0,1, 0x441BC1,110,0,0x441BB0,1, 0x441B31,120,0,0x441B20,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadRightJustUp)
static int address;
static int global_address;
static const int id = 0x4AA000;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA000, 0x4AA020, 0x4A9ED0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x496CC8,100,0,0x4965BA,1, 0x496CD8,110,0,0x4965CA,1, 0x496BD8,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadLeftJustUp)
static int address;
static int global_address;
static const int id = 0x4AA0D0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA0D0, 0x4AA0F0, 0x4A9FA0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x496CB5,100,0,0x4965BA,1, 0x496CC5,110,0,0x4965CA,1, 0x496BC5,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadRight)
static int address;
static int global_address;
static const int id = 0x4AA1A0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA1A0, 0x4AA1C0, 0x4AA070>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x496FE4,100,0,0x4965BA,1, 0x496FF4,110,0,0x4965CA,1, 0x496EF4,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadLeft)
static int address;
static int global_address;
static const int id = 0x4AA200;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA200, 0x4AA220, 0x4AA0D0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x497069,100,0,0x4965BA,1, 0x497079,110,0,0x4965CA,1, 0x496F79,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadDown)
static int address;
static int global_address;
static const int id = 0x4AA260;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA260, 0x4AA280, 0x4AA130>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x495CE5,100,0,0x49598B,1, 0x49697C,100,0,0x4965BA,1, 0x495CF5,110,0,0x49599B,1, 0x49698C,110,0,0x4965CA,1, 0x495BF5,120,0,0x49589B,1, 0x49688C,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnaloguePadUp)
static int address;
static int global_address;
static const int id = 0x4AA2B0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA2B0, 0x4AA2D0, 0x4AA180>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x495BEC,100,0,0x49598B,1, 0x496A09,100,0,0x4965BA,1, 0x495BFC,110,0,0x49599B,1, 0x496A19,110,0,0x4965CA,1, 0x495AFC,120,0,0x49589B,1, 0x496919,120,0,0x4964CA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::ShiftTargetRightJustDown)
static int address;
static int global_address;
static const int id = 0x4AA300;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA300, 0x4AA320, 0x4AA1D0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x5350A6,100,0,0x534890,1, 0x5350C6,110,0,0x5348B0,1, 0x534F96,120,0,0x534780,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::ShiftTargetLeftJustDown)
static int address;
static int global_address;
static const int id = 0x4AA360;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA360, 0x4AA380, 0x4AA230>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x53508B,100,0,0x534890,1, 0x5350AB,110,0,0x5348B0,1, 0x534F7B,120,0,0x534780,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetSprint)
static int address;
static int global_address;
static const int id = 0x4AA390;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA390, 0x4AA3B0, 0x4AA260>;
// total references count: 10en (6), 11en (6), steam (6)
using refs_t = RefList<0x52BDD9,100,0,0x52B070,1, 0x534945,100,0,0x534890,1, 0x535A54,100,0,0x5357D0,1, 0x535C79,100,0,0x535BB0,1, 0x5362AB,100,0,0x535F40,1, 0x537C6F,100,0,0x537270,1, 0x52BDF9,110,0,0x52B090,1, 0x534965,110,0,0x5348B0,1, 0x535A74,110,0,0x5357F0,1, 0x535C99,110,0,0x535BD0,1, 0x5362CB,110,0,0x535F60,1, 0x537C8F,110,0,0x537290,1, 0x52BCC9,120,0,0x52AF60,1, 0x534835,120,0,0x534780,1, 0x535944,120,0,0x5356C0,1, 0x535B69,120,0,0x535AA0,1, 0x53619B,120,0,0x535E30,1, 0x537B5F,120,0,0x537160,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::JumpJustDown)
static int address;
static int global_address;
static const int id = 0x4AA400;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA400, 0x4AA420, 0x4AA2D0>;
// total references count: 10en (5), 11en (5), steam (5)
using refs_t = RefList<0x507C33,100,0,0x505790,1, 0x534950,100,0,0x534890,1, 0x535AB0,100,0,0x5357D0,1, 0x535CC5,100,0,0x535BB0,1, 0x536329,100,0,0x535F40,1, 0x507C53,110,0,0x5057B0,1, 0x534970,110,0,0x5348B0,1, 0x535AD0,110,0,0x5357F0,1, 0x535CE5,110,0,0x535BD0,1, 0x536349,110,0,0x535F60,1, 0x507AF3,120,0,0x505650,1, 0x534840,120,0,0x534780,1, 0x5359A0,120,0,0x5356C0,1, 0x535BB5,120,0,0x535AA0,1, 0x536219,120,0,0x535E30,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::DuckJustDown)
static int address;
static int global_address;
static const int id = 0x4AA430;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA430, 0x4AA450, 0x4AA300>;
// total references count: 10en (6), 11en (6), steam (6)
using refs_t = RefList<0x5348E3,100,0,0x534890,1, 0x534931,100,0,0x534890,2, 0x5352EE,100,0,0x5352B0,1, 0x53533F,100,0,0x5352B0,2, 0x53558E,100,0,0x535550,1, 0x5355DF,100,0,0x535550,2, 0x534903,110,0,0x5348B0,1, 0x534951,110,0,0x5348B0,2, 0x53530E,110,0,0x5352D0,1, 0x53535F,110,0,0x5352D0,2, 0x5355AE,110,0,0x535570,1, 0x5355FF,110,0,0x535570,2, 0x5347D3,120,0,0x534780,1, 0x534821,120,0,0x534780,2, 0x5351DE,120,0,0x5351A0,1, 0x53522F,120,0,0x5351A0,2, 0x53547E,120,0,0x535440,1, 0x5354CF,120,0,0x535440,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::TargetJustDown)
static int address;
static int global_address;
static const int id = 0x4AA460;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA460, 0x4AA480, 0x4AA330>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x4712F2,100,0,0x4700E7,1, 0x5349F2,100,0,0x534890,1, 0x534D4C,100,0,0x534890,2, 0x4712F2,110,0,0x4700E7,1, 0x534A12,110,0,0x5348B0,1, 0x534D6C,110,0,0x5348B0,2, 0x4711D2,120,0,0x46FFC7,1, 0x5348E2,120,0,0x534780,1, 0x534C3C,120,0,0x534780,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetTarget)
static int address;
static int global_address;
static const int id = 0x4AA4D0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA4D0, 0x4AA4F0, 0x4AA3A0>;
// total references count: 10en (9), 11en (9), steam (9)
using refs_t = RefList<0x472155,100,0,0x4700E7,1, 0x47358C,100,0,0x4700E7,2, 0x519C24,100,0,0x5199F0,1, 0x51AAA1,100,0,0x51A9C0,1, 0x534CDF,100,0,0x534890,1, 0x53536A,100,0,0x5352B0,1, 0x53560A,100,0,0x535550,1, 0x537B8D,100,0,0x537270,1, 0x538104,100,0,0x537270,2, 0x472155,110,0,0x4700E7,1, 0x47358C,110,0,0x4700E7,2, 0x519C44,110,0,0x519A10,1, 0x51AAC1,110,0,0x51A9E0,1, 0x534CFF,110,0,0x5348B0,1, 0x53538A,110,0,0x5352D0,1, 0x53562A,110,0,0x535570,1, 0x537BAD,110,0,0x537290,1, 0x538124,110,0,0x537290,2, 0x472035,120,0,0x46FFC7,1, 0x47346C,120,0,0x46FFC7,2, 0x519B14,120,0,0x5198E0,1, 0x51A991,120,0,0x51A8B0,1, 0x534BCF,120,0,0x534780,1, 0x53525A,120,0,0x5351A0,1, 0x5354FA,120,0,0x535440,1, 0x537A7D,120,0,0x537160,1, 0x537FF4,120,0,0x537160,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CycleWeaponRightJustDown)
static int address;
static int global_address;
static const int id = 0x4AA530;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA530, 0x4AA550, 0x4AA400>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x5345F8,100,0,0x5345A0,1, 0x534618,110,0,0x5345C0,1, 0x5344E8,120,0,0x534490,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CycleWeaponLeftJustDown)
static int address;
static int global_address;
static const int id = 0x4AA560;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA560, 0x4AA580, 0x4AA430>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x5346B2,100,0,0x5345A0,1, 0x5346D2,110,0,0x5345C0,1, 0x5345A2,120,0,0x534490,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::ChangeStationJustDown)
static int address;
static int global_address;
static const int id = 0x4AA590;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA590, 0x4AA5B0, 0x4AA460>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x5FB7D6,100,0,0x5FB600,1, 0x5FB7F6,110,0,0x5FB620,1, 0x5FB436,120,0,0x5FB260,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CycleCameraModeJustDown)
static int address;
static int global_address;
static const int id = 0x4AA630;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA630, 0x4AA650, 0x4AA500>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x473912,100,0,0x4700E7,1, 0x473912,110,0,0x4700E7,1, 0x4737F2,120,0,0x46FFC7,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CycleCameraModeDownJustDown)
static int address;
static int global_address;
static const int id = 0x4AA6C0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA6C0, 0x4AA6E0, 0x4AA590>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x470323,100,0,0x4700E7,1, 0x4710DF,100,0,0x4700E7,2, 0x470323,110,0,0x4700E7,1, 0x4710DF,110,0,0x4700E7,2, 0x470203,120,0,0x46FFC7,1, 0x470FBF,120,0,0x46FFC7,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CycleCameraModeUpJustDown)
static int address;
static int global_address;
static const int id = 0x4AA700;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA700, 0x4AA720, 0x4AA5D0>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x4702B8,100,0,0x4700E7,1, 0x471059,100,0,0x4700E7,2, 0x4702B8,110,0,0x4700E7,1, 0x471059,110,0,0x4700E7,2, 0x470198,120,0,0x46FFC7,1, 0x470F39,120,0,0x46FFC7,2>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAccelerate)
static int address;
static int global_address;
static const int id = 0x4AA760;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA760, 0x4AA780, 0x4AA630>;
// total references count: 10en (19), 11en (19), steam (19)
using refs_t = RefList<0x51A4C9,100,0,0x51A370,1, 0x51DE45,100,0,0x51CA70,1, 0x5377A6,100,0,0x537270,1, 0x589100,100,0,0x588DE0,1, 0x58918A,100,0,0x588DE0,2, 0x5891DE,100,0,0x588DE0,3, 0x597DA0,100,0,0x593030,1, 0x5A4CAF,100,0,0x5A4BC0,1, 0x5B5DB8,100,0,0x5B54C0,1, 0x5B6A51,100,0,0x5B54C0,2, 0x5EE3B1,100,0,0x5EE210,1, 0x5EE3C0,100,0,0x5EE210,2, 0x5F1107,100,0,0x5F0EA0,1, 0x5F33D6,100,0,0x5F3100,1, 0x5F37E3,100,0,0x5F3770,1, 0x5F3E64,100,0,0x5F3DB0,1, 0x60A790,100,0,0x60A540,1, 0x60A7F7,100,0,0x60A540,2, 0x60A84B,100,0,0x60A540,3, 0x51A4E9,110,0,0x51A390,1, 0x51DE65,110,0,0x51CA90,1, 0x5377C6,110,0,0x537290,1, 0x589120,110,0,0x588E00,1, 0x5891AA,110,0,0x588E00,2, 0x5891FE,110,0,0x588E00,3, 0x597DC0,110,0,0x593050,1, 0x5A4CCF,110,0,0x5A4BE0,1, 0x5B5DD8,110,0,0x5B54E0,1, 0x5B6A71,110,0,0x5B54E0,2, 0x5EE3D1,110,0,0x5EE230,1, 0x5EE3E0,110,0,0x5EE230,2, 0x5F1127,110,0,0x5F0EC0,1, 0x5F33F6,110,0,0x5F3120,1, 0x5F3803,110,0,0x5F3790,1, 0x5F3E84,110,0,0x5F3DD0,1, 0x60A770,110,0,0x60A520,1, 0x60A7D7,110,0,0x60A520,2, 0x60A82B,110,0,0x60A520,3, 0x51A3B9,120,0,0x51A260,1, 0x51DD35,120,0,0x51C960,1, 0x537696,120,0,0x537160,1, 0x588F30,120,0,0x588C10,1, 0x588FBA,120,0,0x588C10,2, 0x58900E,120,0,0x588C10,3, 0x597BD0,120,0,0x592E60,1, 0x5A4ADF,120,0,0x5A49F0,1, 0x5B5BE8,120,0,0x5B52F0,1, 0x5B6881,120,0,0x5B52F0,2, 0x5EE011,120,0,0x5EDE70,1, 0x5EE020,120,0,0x5EDE70,2, 0x5F0D67,120,0,0x5F0B00,1, 0x5F3036,120,0,0x5F2D60,1, 0x5F3443,120,0,0x5F33D0,1, 0x5F3AC4,120,0,0x5F3A10,1, 0x60A3B0,120,0,0x60A160,1, 0x60A417,120,0,0x60A160,2, 0x60A46B,120,0,0x60A160,3>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::WeaponJustDown)
static int address;
static int global_address;
static const int id = 0x4AA7B0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA7B0, 0x4AA7D0, 0x4AA680>;
// total references count: 10en (7), 11en (7), steam (7)
using refs_t = RefList<0x47F2AA,100,0,0x47F009,1, 0x534BBF,100,0,0x534890,1, 0x534C3D,100,0,0x534890,2, 0x534C9E,100,0,0x534890,3, 0x535658,100,0,0x535550,1, 0x53797D,100,0,0x537270,1, 0x5936D5,100,0,0x593030,1, 0x47F2AA,110,0,0x47F009,1, 0x534BDF,110,0,0x5348B0,1, 0x534C5D,110,0,0x5348B0,2, 0x534CBE,110,0,0x5348B0,3, 0x535678,110,0,0x535570,1, 0x53799D,110,0,0x537290,1, 0x5936F5,110,0,0x593050,1, 0x47F18A,120,0,0x47EEE9,1, 0x534AAF,120,0,0x534780,1, 0x534B2D,120,0,0x534780,2, 0x534B8E,120,0,0x534780,3, 0x535548,120,0,0x535440,1, 0x53786D,120,0,0x537160,1, 0x593505,120,0,0x592E60,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetWeapon)
static int address;
static int global_address;
static const int id = 0x4AA830;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA830, 0x4AA850, 0x4AA700>;
// total references count: 10en (7), 11en (7), steam (7)
using refs_t = RefList<0x47D4F3,100,0,0x47CE73,1, 0x53475B,100,0,0x5345A0,1, 0x534B02,100,0,0x534890,1, 0x534C6B,100,0,0x534890,2, 0x53538F,100,0,0x5352B0,1, 0x535754,100,0,0x535550,1, 0x5374B0,100,0,0x537270,1, 0x47D4F3,110,0,0x47CE73,1, 0x53477B,110,0,0x5345C0,1, 0x534B22,110,0,0x5348B0,1, 0x534C8B,110,0,0x5348B0,2, 0x5353AF,110,0,0x5352D0,1, 0x535774,110,0,0x535570,1, 0x5374D0,110,0,0x537290,1, 0x47D3D3,120,0,0x47CD53,1, 0x53464B,120,0,0x534490,1, 0x5349F2,120,0,0x534780,1, 0x534B5B,120,0,0x534780,2, 0x53527F,120,0,0x5351A0,1, 0x535644,120,0,0x535440,1, 0x5373A0,120,0,0x537160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::ExitVehicleJustDown)
static int address;
static int global_address;
static const int id = 0x4AA870;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA870, 0x4AA890, 0x4AA740>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x4BD730,100,0,0x4BCA90,1, 0x4BD90A,100,0,0x4BCA90,2, 0x53495B,100,0,0x534890,1, 0x4BD750,110,0,0x4BCAB0,1, 0x4BD92A,110,0,0x4BCAB0,2, 0x53497B,110,0,0x5348B0,1, 0x4BD600,120,0,0x4BC960,1, 0x4BD7DA,120,0,0x4BC960,2, 0x53484B,120,0,0x534780,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetExitVehicle)
static int address;
static int global_address;
static const int id = 0x4AA8F0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA8F0, 0x4AA910, 0x4AA7C0>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x4BD743,100,0,0x4BCA90,1, 0x588E15,100,0,0x588DE0,1, 0x60A575,100,0,0x60A540,1, 0x4BD763,110,0,0x4BCAB0,1, 0x588E35,110,0,0x588E00,1, 0x60A555,110,0,0x60A520,1, 0x4BD613,120,0,0x4BC960,1, 0x588C45,120,0,0x588C10,1, 0x60A195,120,0,0x60A160,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetBrake)
static int address;
static int global_address;
static const int id = 0x4AA960;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA960, 0x4AA980, 0x4AA830>;
// total references count: 10en (17), 11en (17), steam (17)
using refs_t = RefList<0x51A4EB,100,0,0x51A370,1, 0x5377EE,100,0,0x537270,1, 0x5890ED,100,0,0x588DE0,1, 0x5891B6,100,0,0x588DE0,2, 0x58920B,100,0,0x588DE0,3, 0x5A4BED,100,0,0x5A4BC0,1, 0x5B5DA6,100,0,0x5B54C0,1, 0x5B6A3F,100,0,0x5B54C0,2, 0x5EE3A5,100,0,0x5EE210,1, 0x5EE3CC,100,0,0x5EE210,2, 0x5F1115,100,0,0x5F0EA0,1, 0x5F33E2,100,0,0x5F3100,1, 0x5F37F0,100,0,0x5F3770,1, 0x5F3E72,100,0,0x5F3DB0,1, 0x60A77D,100,0,0x60A540,1, 0x60A823,100,0,0x60A540,2, 0x60A878,100,0,0x60A540,3, 0x51A50B,110,0,0x51A390,1, 0x53780E,110,0,0x537290,1, 0x58910D,110,0,0x588E00,1, 0x5891D6,110,0,0x588E00,2, 0x58922B,110,0,0x588E00,3, 0x5A4C0D,110,0,0x5A4BE0,1, 0x5B5DC6,110,0,0x5B54E0,1, 0x5B6A5F,110,0,0x5B54E0,2, 0x5EE3C5,110,0,0x5EE230,1, 0x5EE3EC,110,0,0x5EE230,2, 0x5F1135,110,0,0x5F0EC0,1, 0x5F3402,110,0,0x5F3120,1, 0x5F3810,110,0,0x5F3790,1, 0x5F3E92,110,0,0x5F3DD0,1, 0x60A75D,110,0,0x60A520,1, 0x60A803,110,0,0x60A520,2, 0x60A858,110,0,0x60A520,3, 0x51A3DB,120,0,0x51A260,1, 0x5376DE,120,0,0x537160,1, 0x588F1D,120,0,0x588C10,1, 0x588FE6,120,0,0x588C10,2, 0x58903B,120,0,0x588C10,3, 0x5A4A1D,120,0,0x5A49F0,1, 0x5B5BD6,120,0,0x5B52F0,1, 0x5B686F,120,0,0x5B52F0,2, 0x5EE005,120,0,0x5EDE70,1, 0x5EE02C,120,0,0x5EDE70,2, 0x5F0D75,120,0,0x5F0B00,1, 0x5F3042,120,0,0x5F2D60,1, 0x5F3450,120,0,0x5F33D0,1, 0x5F3AD2,120,0,0x5F3A10,1, 0x60A39D,120,0,0x60A160,1, 0x60A443,120,0,0x60A160,2, 0x60A498,120,0,0x60A160,3>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetHandBrake)
static int address;
static int global_address;
static const int id = 0x4AA9B0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA9B0, 0x4AA9D0, 0x4AA880>;
// total references count: 10en (7), 11en (7), steam (7)
using refs_t = RefList<0x588E6C,100,0,0x588DE0,1, 0x5981EA,100,0,0x593030,1, 0x598327,100,0,0x593030,2, 0x5A14E0,100,0,0x59FE90,1, 0x5A2367,100,0,0x59FE90,2, 0x5EF3F6,100,0,0x5EE7B0,1, 0x60A5A9,100,0,0x60A540,1, 0x588E8C,110,0,0x588E00,1, 0x59820A,110,0,0x593050,1, 0x598347,110,0,0x593050,2, 0x5A1500,110,0,0x59FEB0,1, 0x5A2387,110,0,0x59FEB0,2, 0x5EF416,110,0,0x5EE7D0,1, 0x60A589,110,0,0x60A520,1, 0x588C9C,120,0,0x588C10,1, 0x59801A,120,0,0x592E60,1, 0x598157,120,0,0x592E60,2, 0x5A1310,120,0,0x59FCC0,1, 0x5A2197,120,0,0x59FCC0,2, 0x5EF056,120,0,0x5EE410,1, 0x60A1C9,120,0,0x60A160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::CarGunJustDown)
static int address;
static int global_address;
static const int id = 0x4AA9F0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AA9F0, 0x4AAA10, 0x4AA8C0>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x58667D,100,0,0x5864C0,1, 0x593C51,100,0,0x593030,1, 0x597F6F,100,0,0x593030,2, 0x60EAFC,100,0,0x60E3E0,1, 0x58669D,110,0,0x5864E0,1, 0x593C71,110,0,0x593050,1, 0x597F8F,110,0,0x593050,2, 0x60EADC,110,0,0x60E3C0,1, 0x5864AD,120,0,0x5862F0,1, 0x593A81,120,0,0x592E60,1, 0x597D9F,120,0,0x592E60,2, 0x60E71C,120,0,0x60E000,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetCarGunFired)
static int address;
static int global_address;
static const int id = 0x4AAA60;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAA60, 0x4AAA80, 0x4AA930>;
// total references count: 10en (9), 11en (9), steam (9)
using refs_t = RefList<0x475497,100,0,0x474F16,1, 0x4800F9,100,0,0x47FE8C,1, 0x57AB51,100,0,0x57AB30,1, 0x5C919A,100,0,0x5C9170,1, 0x5C92E2,100,0,0x5C91E0,1, 0x5C9474,100,0,0x5C91E0,2, 0x5C970F,100,0,0x5C9540,1, 0x5C99B6,100,0,0x5C97B0,1, 0x637B82,100,0,0x637600,1, 0x475497,110,0,0x474F16,1, 0x4800F9,110,0,0x47FE8C,1, 0x57AB71,110,0,0x57AB50,1, 0x5C91BA,110,0,0x5C9190,1, 0x5C9302,110,0,0x5C9200,1, 0x5C9494,110,0,0x5C9200,2, 0x5C972F,110,0,0x5C9560,1, 0x5C99D6,110,0,0x5C97D0,1, 0x637BD2,110,0,0x637650,1, 0x475377,120,0,0x474DF6,1, 0x47FFD9,120,0,0x47FD6C,1, 0x57AA41,120,0,0x57AA20,1, 0x5C8FCA,120,0,0x5C8FA0,1, 0x5C9112,120,0,0x5C9010,1, 0x5C92A4,120,0,0x5C9010,2, 0x5C953F,120,0,0x5C9370,1, 0x5C97E6,120,0,0x5C95E0,1, 0x637812,120,0,0x6372C0,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::HornJustDown)
static int address;
static int global_address;
static const int id = 0x4AAAC0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAAC0, 0x4AAAE0, 0x4AA990>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x5946DC,100,0,0x593030,1, 0x59D7F2,100,0,0x59D260,1, 0x5946FC,110,0,0x593050,1, 0x59D812,110,0,0x59D280,1, 0x59450C,120,0,0x592E60,1, 0x59D622,120,0,0x59D090,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetHorn)
static int address;
static int global_address;
static const int id = 0x4AAB60;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAB60, 0x4AAB80, 0x4AAA30>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x445CE3,100,0,0x444BE0,1, 0x597BAE,100,0,0x593030,1, 0x5B7049,100,0,0x5B54C0,1, 0x61217A,100,0,0x60E3E0,1, 0x445CE3,110,0,0x444BE0,1, 0x597BCE,110,0,0x593050,1, 0x5B7069,110,0,0x5B54E0,1, 0x61215A,110,0,0x60E3C0,1, 0x445BF3,120,0,0x444AF0,1, 0x5979DE,120,0,0x592E60,1, 0x5B6E79,120,0,0x5B52F0,1, 0x611D9A,120,0,0x60E000,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetLookBehindForPed)
static int address;
static int global_address;
static const int id = 0x4AAC00;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAC00, 0x4AAC20, 0x4AAAD0>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x46F8BA,100,0,0x46F890,1, 0x475BF0,100,0,0x4758C6,1, 0x48405D,100,0,0x48351A,1, 0x5574A9,100,0,0x557320,1, 0x46F8BA,110,0,0x46F890,1, 0x475BF0,110,0,0x4758C6,1, 0x48405D,110,0,0x48351A,1, 0x5574C9,110,0,0x557340,1, 0x46F79A,120,0,0x46F770,1, 0x475AD0,120,0,0x4757A6,1, 0x483F3D,120,0,0x4833FA,1, 0x557399,120,0,0x557210,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetLookBehindForCar)
static int address;
static int global_address;
static const int id = 0x4AAC30;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAC30, 0x4AAC50, 0x4AAB00>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x475BDD,100,0,0x4758C6,1, 0x483F87,100,0,0x48351A,1, 0x475BDD,110,0,0x4758C6,1, 0x483F87,110,0,0x48351A,1, 0x475ABD,120,0,0x4757A6,1, 0x483E67,120,0,0x4833FA,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetLookRight)
static int address;
static int global_address;
static const int id = 0x4AAC60;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAC60, 0x4AAC80, 0x4AAB30>;
// total references count: 10en (8), 11en (8), steam (8)
using refs_t = RefList<0x475C16,100,0,0x4758C6,1, 0x483FFF,100,0,0x48351A,1, 0x5B6172,100,0,0x5B54C0,1, 0x5B6EA0,100,0,0x5B54C0,2, 0x5B6F8D,100,0,0x5B54C0,3, 0x5C92A0,100,0,0x5C91E0,1, 0x5C95FE,100,0,0x5C9540,1, 0x5C986E,100,0,0x5C97B0,1, 0x475C16,110,0,0x4758C6,1, 0x483FFF,110,0,0x48351A,1, 0x5B6192,110,0,0x5B54E0,1, 0x5B6EC0,110,0,0x5B54E0,2, 0x5B6FAD,110,0,0x5B54E0,3, 0x5C92C0,110,0,0x5C9200,1, 0x5C961E,110,0,0x5C9560,1, 0x5C988E,110,0,0x5C97D0,1, 0x475AF6,120,0,0x4757A6,1, 0x483EDF,120,0,0x4833FA,1, 0x5B5FA2,120,0,0x5B52F0,1, 0x5B6CD0,120,0,0x5B52F0,2, 0x5B6DBD,120,0,0x5B52F0,3, 0x5C90D0,120,0,0x5C9010,1, 0x5C942E,120,0,0x5C9370,1, 0x5C969E,120,0,0x5C95E0,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetLookLeft)
static int address;
static int global_address;
static const int id = 0x4AAC90;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAC90, 0x4AACB0, 0x4AAB60>;
// total references count: 10en (8), 11en (8), steam (8)
using refs_t = RefList<0x475C03,100,0,0x4758C6,1, 0x483FCB,100,0,0x48351A,1, 0x5B6198,100,0,0x5B54C0,1, 0x5B6EC6,100,0,0x5B54C0,2, 0x5B6F67,100,0,0x5B54C0,3, 0x5C9288,100,0,0x5C91E0,1, 0x5C95E6,100,0,0x5C9540,1, 0x5C9856,100,0,0x5C97B0,1, 0x475C03,110,0,0x4758C6,1, 0x483FCB,110,0,0x48351A,1, 0x5B61B8,110,0,0x5B54E0,1, 0x5B6EE6,110,0,0x5B54E0,2, 0x5B6F87,110,0,0x5B54E0,3, 0x5C92A8,110,0,0x5C9200,1, 0x5C9606,110,0,0x5C9560,1, 0x5C9876,110,0,0x5C97D0,1, 0x475AE3,120,0,0x4757A6,1, 0x483EAB,120,0,0x4833FA,1, 0x5B5FC8,120,0,0x5B52F0,1, 0x5B6CF6,120,0,0x5B52F0,2, 0x5B6D97,120,0,0x5B52F0,3, 0x5C90B8,120,0,0x5C9010,1, 0x5C9416,120,0,0x5C9370,1, 0x5C9686,120,0,0x5C95E0,1>;
using def_t = bool(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnalogueUpDown)
static int address;
static int global_address;
static const int id = 0x4AACC0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AACC0, 0x4AACE0, 0x4AAB90>;
// total references count: 10en (4), 11en (4), steam (4)
using refs_t = RefList<0x4976E8,100,0,0x49739F,1, 0x497780,100,0,0x49739F,2, 0x497BA3,100,0,0x49739F,3, 0x497C35,100,0,0x49739F,4, 0x4976F8,110,0,0x4973AF,1, 0x497790,110,0,0x4973AF,2, 0x497BB3,110,0,0x4973AF,3, 0x497C45,110,0,0x4973AF,4, 0x4975F8,120,0,0x4972AF,1, 0x497690,120,0,0x4972AF,2, 0x497AB3,120,0,0x4972AF,3, 0x497B45,120,0,0x4972AF,4>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetPedWalkUpDown)
static int address;
static int global_address;
static const int id = 0x4AAD40;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAD40, 0x4AAD60, 0x4AAC10>;
// total references count: 10en (8), 11en (8), steam (8)
using refs_t = RefList<0x471248,100,0,0x4700E7,1, 0x507C6E,100,0,0x505790,1, 0x507E2B,100,0,0x505790,2, 0x50A57E,100,0,0x50A530,1, 0x5357FD,100,0,0x5357D0,1, 0x535BD2,100,0,0x535BB0,1, 0x535F79,100,0,0x535F40,1, 0x53791B,100,0,0x537270,1, 0x471248,110,0,0x4700E7,1, 0x507C8E,110,0,0x5057B0,1, 0x507E4B,110,0,0x5057B0,2, 0x50A59E,110,0,0x50A550,1, 0x53581D,110,0,0x5357F0,1, 0x535BF2,110,0,0x535BD0,1, 0x535F99,110,0,0x535F60,1, 0x53793B,110,0,0x537290,1, 0x471128,120,0,0x46FFC7,1, 0x507B2E,120,0,0x505650,1, 0x507CEB,120,0,0x505650,2, 0x50A43E,120,0,0x50A3F0,1, 0x5356ED,120,0,0x5356C0,1, 0x535AC2,120,0,0x535AA0,1, 0x535E69,120,0,0x535E30,1, 0x53780B,120,0,0x537160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetAnalogueLeftRight)
static int address;
static int global_address;
static const int id = 0x4AADC0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AADC0, 0x4AADE0, 0x4AAC90>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x497CCA,100,0,0x49739F,1, 0x497E99,100,0,0x49739F,2, 0x497CDA,110,0,0x4973AF,1, 0x497EA9,110,0,0x4973AF,2, 0x497BDA,120,0,0x4972AF,1, 0x497DA9,120,0,0x4972AF,2>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetPedWalkLeftRight)
static int address;
static int global_address;
static const int id = 0x4AAE30;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAE30, 0x4AAE50, 0x4AAD00>;
// total references count: 10en (10), 11en (10), steam (10)
using refs_t = RefList<0x471230,100,0,0x4700E7,1, 0x496E2A,100,0,0x4965BA,1, 0x496ED1,100,0,0x4965BA,2, 0x507C4A,100,0,0x505790,1, 0x507E04,100,0,0x505790,2, 0x50A560,100,0,0x50A530,1, 0x5357E7,100,0,0x5357D0,1, 0x535BBD,100,0,0x535BB0,1, 0x535F63,100,0,0x535F40,1, 0x5378F9,100,0,0x537270,1, 0x471230,110,0,0x4700E7,1, 0x496E3A,110,0,0x4965CA,1, 0x496EE1,110,0,0x4965CA,2, 0x507C6A,110,0,0x5057B0,1, 0x507E24,110,0,0x5057B0,2, 0x50A580,110,0,0x50A550,1, 0x535807,110,0,0x5357F0,1, 0x535BDD,110,0,0x535BD0,1, 0x535F83,110,0,0x535F60,1, 0x537919,110,0,0x537290,1, 0x471110,120,0,0x46FFC7,1, 0x496D3A,120,0,0x4964CA,1, 0x496DE1,120,0,0x4964CA,2, 0x507B0A,120,0,0x505650,1, 0x507CC4,120,0,0x505650,2, 0x50A420,120,0,0x50A3F0,1, 0x5356D7,120,0,0x5356C0,1, 0x535AAD,120,0,0x535AA0,1, 0x535E53,120,0,0x535E30,1, 0x5377E9,120,0,0x537160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetCarGunLeftRight)
static int address;
static int global_address;
static const int id = 0x4AAEB0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAEB0, 0x4AAED0, 0x4AAD80>;
// total references count: 10en (5), 11en (5), steam (5)
using refs_t = RefList<0x57AB72,100,0,0x57AB30,1, 0x5865B8,100,0,0x5864C0,1, 0x59DB2A,100,0,0x59D260,1, 0x5B6EE3,100,0,0x5B54C0,1, 0x5B6F2C,100,0,0x5B54C0,2, 0x57AB92,110,0,0x57AB50,1, 0x5865D8,110,0,0x5864E0,1, 0x59DB4A,110,0,0x59D280,1, 0x5B6F03,110,0,0x5B54E0,1, 0x5B6F4C,110,0,0x5B54E0,2, 0x57AA62,120,0,0x57AA20,1, 0x5863E8,120,0,0x5862F0,1, 0x59D95A,120,0,0x59D090,1, 0x5B6D13,120,0,0x5B52F0,1, 0x5B6D5C,120,0,0x5B52F0,2>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetCarGunUpDown)
static int address;
static int global_address;
static const int id = 0x4AAF00;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAF00, 0x4AAF20, 0x4AADD0>;
// total references count: 10en (9), 11en (9), steam (9)
using refs_t = RefList<0x57ABAE,100,0,0x57AB30,1, 0x597DB8,100,0,0x593030,1, 0x59DB48,100,0,0x59D260,1, 0x5B5ADA,100,0,0x5B54C0,1, 0x5B5B23,100,0,0x5B54C0,2, 0x5B6FD4,100,0,0x5B54C0,3, 0x5B701D,100,0,0x5B54C0,4, 0x5F37FC,100,0,0x5F3770,1, 0x60A6C4,100,0,0x60A540,1, 0x57ABCE,110,0,0x57AB50,1, 0x597DD8,110,0,0x593050,1, 0x59DB68,110,0,0x59D280,1, 0x5B5AFA,110,0,0x5B54E0,1, 0x5B5B43,110,0,0x5B54E0,2, 0x5B6FF4,110,0,0x5B54E0,3, 0x5B703D,110,0,0x5B54E0,4, 0x5F381C,110,0,0x5F3790,1, 0x60A6A4,110,0,0x60A520,1, 0x57AA9E,120,0,0x57AA20,1, 0x597BE8,120,0,0x592E60,1, 0x59D978,120,0,0x59D090,1, 0x5B590A,120,0,0x5B52F0,1, 0x5B5953,120,0,0x5B52F0,2, 0x5B6E04,120,0,0x5B52F0,3, 0x5B6E4D,120,0,0x5B52F0,4, 0x5F345C,120,0,0x5F33D0,1, 0x60A2E4,120,0,0x60A160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetSteeringUpDown)
static int address;
static int global_address;
static const int id = 0x4AAF50;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAF50, 0x4AAF70, 0x4AAE20>;
// total references count: 10en (7), 11en (7), steam (7)
using refs_t = RefList<0x5A58E4,100,0,0x5A5570,1, 0x5A599F,100,0,0x5A5570,2, 0x5B57EF,100,0,0x5B54C0,1, 0x5B5AB0,100,0,0x5B54C0,2, 0x5B6E4A,100,0,0x5B54C0,3, 0x5B6F3D,100,0,0x5B54C0,4, 0x60A69D,100,0,0x60A540,1, 0x5A5904,110,0,0x5A5590,1, 0x5A59BF,110,0,0x5A5590,2, 0x5B580F,110,0,0x5B54E0,1, 0x5B5AD0,110,0,0x5B54E0,2, 0x5B6E6A,110,0,0x5B54E0,3, 0x5B6F5D,110,0,0x5B54E0,4, 0x60A67D,110,0,0x60A520,1, 0x5A5714,120,0,0x5A53A0,1, 0x5A57CF,120,0,0x5A53A0,2, 0x5B561F,120,0,0x5B52F0,1, 0x5B58E0,120,0,0x5B52F0,2, 0x5B6C7A,120,0,0x5B52F0,3, 0x5B6D6D,120,0,0x5B52F0,4, 0x60A2BD,120,0,0x60A160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetSteeringLeftRight)
static int address;
static int global_address;
static const int id = 0x4AAFD0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AAFD0, 0x4AAFF0, 0x4AAEA0>;
// total references count: 10en (10), 11en (10), steam (10)
using refs_t = RefList<0x5377CC,100,0,0x537270,1, 0x588FAD,100,0,0x588DE0,1, 0x588FDA,100,0,0x588DE0,2, 0x589035,100,0,0x588DE0,3, 0x5938B5,100,0,0x593030,1, 0x5A4CEB,100,0,0x5A4BC0,1, 0x5B5A86,100,0,0x5B54C0,1, 0x5B6E74,100,0,0x5B54C0,2, 0x5B6FAA,100,0,0x5B54C0,3, 0x60A5F2,100,0,0x60A540,1, 0x5377EC,110,0,0x537290,1, 0x588FCD,110,0,0x588E00,1, 0x588FFA,110,0,0x588E00,2, 0x589055,110,0,0x588E00,3, 0x5938D5,110,0,0x593050,1, 0x5A4D0B,110,0,0x5A4BE0,1, 0x5B5AA6,110,0,0x5B54E0,1, 0x5B6E94,110,0,0x5B54E0,2, 0x5B6FCA,110,0,0x5B54E0,3, 0x60A5D2,110,0,0x60A520,1, 0x5376BC,120,0,0x537160,1, 0x588DDD,120,0,0x588C10,1, 0x588E0A,120,0,0x588C10,2, 0x588E65,120,0,0x588C10,3, 0x5936E5,120,0,0x592E60,1, 0x5A4B1B,120,0,0x5A49F0,1, 0x5B58B6,120,0,0x5B52F0,1, 0x5B6CA4,120,0,0x5B52F0,2, 0x5B6DDA,120,0,0x5B52F0,3, 0x60A212,120,0,0x60A160,1>;
using def_t = short(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::GetPad)
static int address;
static int global_address;
static const int id = 0x4AB060;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB060, 0x4AB080, 0x4AAF30>;
// total references count: 10en (648), 11en (648), steam (648)
using refs_t = RefList<0x406244,100,0,0x405FA0,1, 0x406276,100,0,0x405FA0,2, 0x40629F,100,0,0x405FA0,3, 0x4062C8,100,0,0x405FA0,4, 0x406308,100,0,0x405FA0,5, 0x406B2D,100,0,0x4069D0,1, 0x406BF4,100,0,0x4069D0,2, 0x407036,100,0,0x406D30,1, 0x42AD59,100,0,0x42AC10,1, 0x42AFE7,100,0,0x42AE70,1, 0x42B0D3,100,0,0x42AE70,2, 0x42B5C3,100,0,0x42AE70,3, 0x42B6FC,100,0,0x42AE70,4, 0x42B788,100,0,0x42B730,1, 0x42B81A,100,0,0x42B7A0,1, 0x42B961,100,0,0x42B900,1, 0x42BE2C,100,0,0x42BB70,1, 0x42BE54,100,0,0x42BB70,2, 0x42C217,100,0,0x42BB70,3, 0x42C23F,100,0,0x42BB70,4, 0x42C419,100,0,0x42BB70,5, 0x42C441,100,0,0x42BB70,6, 0x430D24,100,0,0x430A60,1, 0x4311B9,100,0,0x430A60,2, 0x4318C7,100,0,0x430A60,3, 0x431CA2,100,0,0x430A60,4, 0x431CD3,100,0,0x430A60,5, 0x431D20,100,0,0x430A60,6, 0x431F5D,100,0,0x430A60,7, 0x432066,100,0,0x430A60,8, 0x432445,100,0,0x430A60,9, 0x432554,100,0,0x430A60,10, 0x432D99,100,0,0x430A60,11, 0x432EA6,100,0,0x430A60,12, 0x433CFE,100,0,0x430A60,13, 0x433DB3,100,0,0x430A60,14, 0x43C6C6,100,0,0x43C600,1, 0x43C9B4,100,0,0x43C600,2, 0x43CD8B,100,0,0x43CD70,1, 0x440AE9,100,0,0x440030,1, 0x440CB6,100,0,0x440030,2, 0x4414A6,100,0,0x440030,3, 0x441BB9,100,0,0x441BB0,1, 0x445CDB,100,0,0x444BE0,1, 0x451718,100,0,0x451550,1, 0x4580C4,100,0,0x457580,1, 0x4580D9,100,0,0x457580,2, 0x460C0D,100,0,0x460C00,1, 0x46F8B2,100,0,0x46F890,1, 0x4701E5,100,0,0x4700E7,1, 0x4702B0,100,0,0x4700E7,2, 0x47031B,100,0,0x4700E7,3, 0x471051,100,0,0x4700E7,4, 0x4710D7,100,0,0x4700E7,5, 0x4711EA,100,0,0x4700E7,6, 0x4711FE,100,0,0x4700E7,7, 0x471228,100,0,0x4700E7,8, 0x471240,100,0,0x4700E7,9, 0x471258,100,0,0x4700E7,10, 0x47126C,100,0,0x4700E7,11, 0x471280,100,0,0x4700E7,12, 0x471290,100,0,0x4700E7,13, 0x4712A0,100,0,0x4700E7,14, 0x4712EA,100,0,0x4700E7,15, 0x471349,100,0,0x4700E7,16, 0x47214D,100,0,0x4700E7,17, 0x473584,100,0,0x4700E7,18, 0x4735CD,100,0,0x4700E7,19, 0x47390A,100,0,0x4700E7,20, 0x47548F,100,0,0x474F16,1, 0x475BD5,100,0,0x4758C6,1, 0x475BE8,100,0,0x4758C6,2, 0x475BFB,100,0,0x4758C6,3, 0x475C0E,100,0,0x4758C6,4, 0x479627,100,0,0x479410,1, 0x47966A,100,0,0x479410,2, 0x47968A,100,0,0x479410,3, 0x47997A,100,0,0x479410,4, 0x47998B,100,0,0x479410,5, 0x47999C,100,0,0x479410,6, 0x4799BF,100,0,0x479410,7, 0x4799E6,100,0,0x479410,8, 0x4799F9,100,0,0x479410,9, 0x479A18,100,0,0x479410,10, 0x479A6A,100,0,0x479410,11, 0x47A3C2,100,0,0x47A20E,1, 0x47A405,100,0,0x47A20E,2, 0x47A425,100,0,0x47A20E,3, 0x47AF28,100,0,0x47AE27,1, 0x47AF6B,100,0,0x47AE27,2, 0x47AF8B,100,0,0x47AE27,3, 0x47BED9,100,0,0x47BE8F,1, 0x47BF2C,100,0,0x47BE8F,2, 0x47BFE0,100,0,0x47BE8F,3, 0x47C023,100,0,0x47BE8F,4, 0x47C05A,100,0,0x47BE8F,5, 0x47C07A,100,0,0x47BE8F,6, 0x47C15E,100,0,0x47BE8F,7, 0x47CDC1,100,0,0x47BE8F,8, 0x47D4EB,100,0,0x47CE73,1, 0x47D536,100,0,0x47CE73,2, 0x47D7BE,100,0,0x47CE73,3, 0x47F2A2,100,0,0x47F009,1, 0x47F700,100,0,0x47F68C,1, 0x47F70B,100,0,0x47F68C,2, 0x47F97A,100,0,0x47F68C,3, 0x47F9A1,100,0,0x47F68C,4, 0x47FACC,100,0,0x47F68C,5, 0x47FD2D,100,0,0x47F68C,6, 0x4800F1,100,0,0x47FE8C,1, 0x480785,100,0,0x47FE8C,2, 0x480799,100,0,0x47FE8C,3, 0x4807F2,100,0,0x47FE8C,4, 0x480960,100,0,0x47FE8C,5, 0x4816E6,100,0,0x480F17,1, 0x4816FA,100,0,0x480F17,2, 0x481753,100,0,0x480F17,3, 0x48186E,100,0,0x480F17,4, 0x481EEA,100,0,0x481AB3,1, 0x481F2D,100,0,0x481AB3,2, 0x481F4D,100,0,0x481AB3,3, 0x482558,100,0,0x481AB3,4, 0x48256B,100,0,0x481AB3,5, 0x48257E,100,0,0x481AB3,6, 0x4825B1,100,0,0x481AB3,7, 0x48292D,100,0,0x48267A,1, 0x48294D,100,0,0x48267A,2, 0x483118,100,0,0x48267A,3, 0x48312B,100,0,0x48267A,4, 0x483F7F,100,0,0x48351A,1, 0x483FC3,100,0,0x48351A,2, 0x483FF7,100,0,0x48351A,3, 0x484055,100,0,0x48351A,4, 0x487012,100,0,0x487010,1, 0x49048B,100,0,0x49045D,1, 0x4959F9,100,0,0x49598B,1, 0x495A33,100,0,0x49598B,2, 0x495A63,100,0,0x49598B,3, 0x495B1D,100,0,0x49598B,4, 0x495BD2,100,0,0x49598B,5, 0x495BE4,100,0,0x49598B,6, 0x495BF7,100,0,0x49598B,7, 0x495C28,100,0,0x49598B,8, 0x495CCB,100,0,0x49598B,9, 0x495CDD,100,0,0x49598B,10, 0x495CF0,100,0,0x49598B,11, 0x495D21,100,0,0x49598B,12, 0x495DEA,100,0,0x49598B,13, 0x495EBE,100,0,0x49598B,14, 0x495F9C,100,0,0x49598B,15, 0x495FEE,100,0,0x49598B,16, 0x496048,100,0,0x49598B,17, 0x49606E,100,0,0x49598B,18, 0x49609E,100,0,0x49598B,19, 0x49624A,100,0,0x49598B,20, 0x4962B2,100,0,0x49598B,21, 0x4962F5,100,0,0x49598B,22, 0x496949,100,0,0x4965BA,1, 0x496974,100,0,0x4965BA,2, 0x496987,100,0,0x4965BA,3, 0x4969D6,100,0,0x4965BA,4, 0x496A01,100,0,0x4965BA,5, 0x496A14,100,0,0x4965BA,6, 0x496A67,100,0,0x4965BA,7, 0x496AA5,100,0,0x4965BA,8, 0x496ACC,100,0,0x4965BA,9, 0x496B06,100,0,0x4965BA,10, 0x496B38,100,0,0x4965BA,11, 0x496B9B,100,0,0x4965BA,12, 0x496BD4,100,0,0x4965BA,13, 0x496C01,100,0,0x4965BA,14, 0x496C30,100,0,0x4965BA,15, 0x496C5F,100,0,0x4965BA,16, 0x496C88,100,0,0x4965BA,17, 0x496CAD,100,0,0x4965BA,18, 0x496CC0,100,0,0x4965BA,19, 0x496CD3,100,0,0x4965BA,20, 0x496CFC,100,0,0x4965BA,21, 0x496D6C,100,0,0x4965BA,22, 0x496D91,100,0,0x4965BA,23, 0x496E08,100,0,0x4965BA,24, 0x496E1A,100,0,0x4965BA,25, 0x496E22,100,0,0x4965BA,26, 0x496E36,100,0,0x4965BA,27, 0x496EAF,100,0,0x4965BA,28, 0x496EC1,100,0,0x4965BA,29, 0x496EC9,100,0,0x4965BA,30, 0x496EDD,100,0,0x4965BA,31, 0x496F4D,100,0,0x4965BA,32, 0x496F7D,100,0,0x4965BA,33, 0x496FB1,100,0,0x4965BA,34, 0x496FDC,100,0,0x4965BA,35, 0x496FEF,100,0,0x4965BA,36, 0x497036,100,0,0x4965BA,37, 0x497061,100,0,0x4965BA,38, 0x497074,100,0,0x4965BA,39, 0x49766C,100,0,0x49739F,1, 0x497695,100,0,0x49739F,2, 0x4976BE,100,0,0x49739F,3, 0x4976D0,100,0,0x49739F,4, 0x4976E0,100,0,0x49739F,5, 0x497704,100,0,0x49739F,6, 0x49772D,100,0,0x49739F,7, 0x497756,100,0,0x49739F,8, 0x497768,100,0,0x49739F,9, 0x497778,100,0,0x49739F,10, 0x497798,100,0,0x49739F,11, 0x4977D1,100,0,0x49739F,12, 0x4977E3,100,0,0x49739F,13, 0x497809,100,0,0x49739F,14, 0x49781B,100,0,0x49739F,15, 0x497873,100,0,0x49739F,16, 0x497885,100,0,0x49739F,17, 0x497894,100,0,0x49739F,18, 0x4978BD,100,0,0x49739F,19, 0x49791E,100,0,0x49739F,20, 0x497930,100,0,0x49739F,21, 0x49793F,100,0,0x49739F,22, 0x497968,100,0,0x49739F,23, 0x497B5A,100,0,0x49739F,24, 0x497B79,100,0,0x49739F,25, 0x497B8B,100,0,0x49739F,26, 0x497B9B,100,0,0x49739F,27, 0x497BEC,100,0,0x49739F,28, 0x497C0B,100,0,0x49739F,29, 0x497C1D,100,0,0x49739F,30, 0x497C2D,100,0,0x49739F,31, 0x497C81,100,0,0x49739F,32, 0x497CA0,100,0,0x49739F,33, 0x497CB2,100,0,0x49739F,34, 0x497CC2,100,0,0x49739F,35, 0x497D2C,100,0,0x49739F,36, 0x497E50,100,0,0x49739F,37, 0x497E6F,100,0,0x49739F,38, 0x497E81,100,0,0x49739F,39, 0x497E91,100,0,0x49739F,40, 0x497F18,100,0,0x49739F,41, 0x498015,100,0,0x49739F,42, 0x4981E3,100,0,0x49739F,43, 0x498237,100,0,0x49739F,44, 0x498249,100,0,0x49739F,45, 0x49826B,100,0,0x49739F,46, 0x49827D,100,0,0x49739F,47, 0x498E8C,100,0,0x498E5F,1, 0x498FD5,100,0,0x498E5F,2, 0x498FE6,100,0,0x498E5F,3, 0x49912E,100,0,0x4990DD,1, 0x499166,100,0,0x4990DD,2, 0x49919E,100,0,0x4990DD,3, 0x4991D6,100,0,0x4990DD,4, 0x49920E,100,0,0x4990DD,5, 0x499243,100,0,0x4990DD,6, 0x499278,100,0,0x4990DD,7, 0x4A49BA,100,0,0x4A4850,1, 0x4A49CB,100,0,0x4A4850,2, 0x4A4F8D,100,0,0x4A4B10,1, 0x4A4F9E,100,0,0x4A4B10,2, 0x4A65D9,100,0,0x4A65D0,1, 0x4A66BE,100,0,0x4A65D0,2, 0x4A66E3,100,0,0x4A65D0,3, 0x4A66F3,100,0,0x4A65D0,4, 0x4A6718,100,0,0x4A65D0,5, 0x4A672C,100,0,0x4A65D0,6, 0x4A67E4,100,0,0x4A65D0,7, 0x4BBC3C,100,0,0x4BBC10,1, 0x4BBDD2,100,0,0x4BBC10,2, 0x4BD728,100,0,0x4BCA90,1, 0x4BD73B,100,0,0x4BCA90,2, 0x4BD902,100,0,0x4BCA90,3, 0x4FD228,100,0,0x4FCF60,1, 0x507C2B,100,0,0x505790,1, 0x507C42,100,0,0x505790,2, 0x507C66,100,0,0x505790,3, 0x507DFC,100,0,0x505790,4, 0x507E23,100,0,0x505790,5, 0x50A558,100,0,0x50A530,1, 0x50A576,100,0,0x50A530,2, 0x50FD55,100,0,0x50F170,1, 0x510B30,100,0,0x50FFC0,1, 0x519BDD,100,0,0x5199F0,1, 0x51AA8D,100,0,0x51A9C0,1, 0x51ACE4,100,0,0x51ABC0,1, 0x51DCDB,100,0,0x51CA70,1, 0x51DE3D,100,0,0x51CA70,2, 0x522220,100,0,0x521F10,1, 0x523EDE,100,0,0x523CD0,1, 0x5252E7,100,0,0x524920,1, 0x52B7DF,100,0,0x52B070,1, 0x52BDD1,100,0,0x52B070,2, 0x52D7AD,100,0,0x52D1C0,1, 0x53524A,100,0,0x535240,1, 0x5373C2,100,0,0x537270,1, 0x5380FC,100,0,0x537270,2, 0x544613,100,0,0x5445FF,1, 0x55734D,100,0,0x557320,1, 0x5574A1,100,0,0x557320,2, 0x57AB49,100,0,0x57AB30,1, 0x57AB6A,100,0,0x57AB30,2, 0x57ABA6,100,0,0x57AB30,3, 0x57D7D2,100,0,0x57D580,1, 0x5865B0,100,0,0x5864C0,1, 0x586675,100,0,0x5864C0,2, 0x58745B,100,0,0x5870D0,1, 0x587666,100,0,0x5870D0,2, 0x588E0D,100,0,0x588DE0,1, 0x588E64,100,0,0x588DE0,2, 0x588EBC,100,0,0x588DE0,3, 0x588EEF,100,0,0x588DE0,4, 0x588FA5,100,0,0x588DE0,5, 0x588FD2,100,0,0x588DE0,6, 0x58902D,100,0,0x588DE0,7, 0x5890E5,100,0,0x588DE0,8, 0x5890F8,100,0,0x588DE0,9, 0x589182,100,0,0x588DE0,10, 0x5891AE,100,0,0x588DE0,11, 0x5891D6,100,0,0x588DE0,12, 0x589203,100,0,0x588DE0,13, 0x5893DC,100,0,0x588DE0,14, 0x5936CD,100,0,0x593030,1, 0x5938AD,100,0,0x593030,2, 0x593C49,100,0,0x593030,3, 0x5946D4,100,0,0x593030,4, 0x597D98,100,0,0x593030,5, 0x597DB0,100,0,0x593030,6, 0x597F67,100,0,0x593030,7, 0x5981E2,100,0,0x593030,8, 0x59831F,100,0,0x593030,9, 0x5990D7,100,0,0x593030,10, 0x59B936,100,0,0x59B550,1, 0x59D7EA,100,0,0x59D260,1, 0x59DB22,100,0,0x59D260,2, 0x59DB40,100,0,0x59D260,3, 0x5A14D8,100,0,0x59FE90,1, 0x5A235F,100,0,0x59FE90,2, 0x5A4BE5,100,0,0x5A4BC0,1, 0x5A4CA7,100,0,0x5A4BC0,2, 0x5A4CE3,100,0,0x5A4BC0,3, 0x5A58DC,100,0,0x5A5570,1, 0x5A5997,100,0,0x5A5570,2, 0x5B57E7,100,0,0x5B54C0,1, 0x5B5A7E,100,0,0x5B54C0,2, 0x5B5AA8,100,0,0x5B54C0,3, 0x5B5AD2,100,0,0x5B54C0,4, 0x5B5B1B,100,0,0x5B54C0,5, 0x5B5D9E,100,0,0x5B54C0,6, 0x5B5DB0,100,0,0x5B54C0,7, 0x5B616A,100,0,0x5B54C0,8, 0x5B6190,100,0,0x5B54C0,9, 0x5B6A37,100,0,0x5B54C0,10, 0x5B6A49,100,0,0x5B54C0,11, 0x5B6E42,100,0,0x5B54C0,12, 0x5B6E6C,100,0,0x5B54C0,13, 0x5B6E98,100,0,0x5B54C0,14, 0x5B6EBE,100,0,0x5B54C0,15, 0x5B6EDB,100,0,0x5B54C0,16, 0x5B6F24,100,0,0x5B54C0,17, 0x5B6F35,100,0,0x5B54C0,18, 0x5B6F5F,100,0,0x5B54C0,19, 0x5B6F85,100,0,0x5B54C0,20, 0x5B6FA2,100,0,0x5B54C0,21, 0x5B6FCC,100,0,0x5B54C0,22, 0x5B7015,100,0,0x5B54C0,23, 0x5B7041,100,0,0x5B54C0,24, 0x5C66BC,100,0,0x5C5720,1, 0x5C9192,100,0,0x5C9170,1, 0x5C9280,100,0,0x5C91E0,1, 0x5C9298,100,0,0x5C91E0,2, 0x5C92DA,100,0,0x5C91E0,3, 0x5C946C,100,0,0x5C91E0,4, 0x5C95DE,100,0,0x5C9540,1, 0x5C95F6,100,0,0x5C9540,2, 0x5C9707,100,0,0x5C9540,3, 0x5C984E,100,0,0x5C97B0,1, 0x5C9866,100,0,0x5C97B0,2, 0x5C99AE,100,0,0x5C97B0,3, 0x5CBFA3,100,0,0x5CB0A0,1, 0x5CC42B,100,0,0x5CBFF0,1, 0x5CC966,100,0,0x5CC730,1, 0x5CEDCE,100,0,0x5CD340,1, 0x5D00E6,100,0,0x5CEE60,1, 0x5D4B49,100,0,0x5D45E0,1, 0x5EF3EE,100,0,0x5EE7B0,1, 0x5FB7CE,100,0,0x5FB600,1, 0x5FF8B7,100,0,0x5FF630,1, 0x5FFFFF,100,0,0x5FFAB0,1, 0x600016,100,0,0x5FFAB0,2, 0x600043,100,0,0x5FFAB0,3, 0x600081,100,0,0x5FFAB0,4, 0x6000B0,100,0,0x5FFAB0,5, 0x600106,100,0,0x5FFAB0,6, 0x6001B5,100,0,0x5FFAB0,7, 0x6001CC,100,0,0x5FFAB0,8, 0x6001F9,100,0,0x5FFAB0,9, 0x60023C,100,0,0x5FFAB0,10, 0x60026B,100,0,0x5FFAB0,11, 0x6002C1,100,0,0x5FFAB0,12, 0x60154A,100,0,0x6010B0,1, 0x60155B,100,0,0x6010B0,2, 0x6023E4,100,0,0x6023D0,1, 0x60249C,100,0,0x602490,1, 0x602547,100,0,0x602540,1, 0x60254F,100,0,0x602540,2, 0x602939,100,0,0x602930,1, 0x602943,100,0,0x602930,2, 0x6032FA,100,0,0x6032E0,1, 0x6033CA,100,0,0x6032E0,2, 0x60349A,100,0,0x6032E0,3, 0x6034C9,100,0,0x6032E0,4, 0x603564,100,0,0x603520,1, 0x6035B6,100,0,0x603520,2, 0x60367F,100,0,0x603520,3, 0x6036B4,100,0,0x603520,4, 0x6037C4,100,0,0x603700,1, 0x603834,100,0,0x603700,2, 0x60390F,100,0,0x603700,3, 0x603944,100,0,0x603700,4, 0x603A44,100,0,0x603980,1, 0x603AD7,100,0,0x603980,2, 0x603B9D,100,0,0x603980,3, 0x603BD2,100,0,0x603980,4, 0x603C4D,100,0,0x603C10,1, 0x604762,100,0,0x604500,1, 0x6047D6,100,0,0x604500,2, 0x6048B3,100,0,0x604500,3, 0x60498B,100,0,0x604500,4, 0x604A54,100,0,0x604500,5, 0x604AF8,100,0,0x604500,6, 0x604D06,100,0,0x604500,7, 0x604D7A,100,0,0x604500,8, 0x604E55,100,0,0x604500,9, 0x604F2D,100,0,0x604500,10, 0x604FF6,100,0,0x604500,11, 0x605034,100,0,0x604500,12, 0x605102,100,0,0x604500,13, 0x6051FC,100,0,0x604500,14, 0x6054DD,100,0,0x604500,15, 0x6055EB,100,0,0x604500,16, 0x6056B9,100,0,0x604500,17, 0x605806,100,0,0x604500,18, 0x60594C,100,0,0x604500,19, 0x605A11,100,0,0x604500,20, 0x605A62,100,0,0x604500,21, 0x605B0C,100,0,0x604500,22, 0x605B6B,100,0,0x604500,23, 0x605C88,100,0,0x604500,24, 0x605CC7,100,0,0x604500,25, 0x605D06,100,0,0x604500,26, 0x607CBA,100,0,0x606730,1, 0x6085F3,100,0,0x6084C0,1, 0x60882C,100,0,0x6084C0,2, 0x60A56D,100,0,0x60A540,1, 0x60A5A1,100,0,0x60A540,2, 0x60A5EA,100,0,0x60A540,3, 0x60A695,100,0,0x60A540,4, 0x60A6BC,100,0,0x60A540,5, 0x60A775,100,0,0x60A540,6, 0x60A788,100,0,0x60A540,7, 0x60A7EF,100,0,0x60A540,8, 0x60A81B,100,0,0x60A540,9, 0x60A843,100,0,0x60A540,10, 0x60A870,100,0,0x60A540,11, 0x60AA08,100,0,0x60A540,12, 0x60EAF4,100,0,0x60E3E0,1, 0x6129BB,100,0,0x60E3E0,2, 0x617290,100,0,0x617270,1, 0x6172AD,100,0,0x617270,2, 0x6172CA,100,0,0x617270,3, 0x6172E3,100,0,0x617270,4, 0x6172FC,100,0,0x617270,5, 0x617315,100,0,0x617270,6, 0x61732E,100,0,0x617270,7, 0x617370,100,0,0x617350,1, 0x61738D,100,0,0x617350,2, 0x6173AA,100,0,0x617350,3, 0x6173C3,100,0,0x617350,4, 0x6173DC,100,0,0x617350,5, 0x6173F5,100,0,0x617350,6, 0x61740E,100,0,0x617350,7, 0x617447,100,0,0x617430,1, 0x61745A,100,0,0x617430,2, 0x617483,100,0,0x617430,3, 0x617496,100,0,0x617430,4, 0x6174D1,100,0,0x617430,5, 0x6174E7,100,0,0x617430,6, 0x617507,100,0,0x617430,7, 0x61751D,100,0,0x617430,8, 0x61753D,100,0,0x617430,9, 0x617553,100,0,0x617430,10, 0x617573,100,0,0x617430,11, 0x617589,100,0,0x617430,12, 0x6175A9,100,0,0x617430,13, 0x6175BF,100,0,0x617430,14, 0x6175DF,100,0,0x617430,15, 0x6175F5,100,0,0x617430,16, 0x617615,100,0,0x617430,17, 0x61762B,100,0,0x617430,18, 0x61764B,100,0,0x617430,19, 0x617661,100,0,0x617430,20, 0x617681,100,0,0x617430,21, 0x617697,100,0,0x617430,22, 0x6176B7,100,0,0x617430,23, 0x6176CD,100,0,0x617430,24, 0x6176ED,100,0,0x617430,25, 0x617703,100,0,0x617430,26, 0x617723,100,0,0x617430,27, 0x617739,100,0,0x617430,28, 0x617759,100,0,0x617430,29, 0x61776F,100,0,0x617430,30, 0x61778F,100,0,0x617430,31, 0x6177A5,100,0,0x617430,32, 0x6177C5,100,0,0x617430,33, 0x6177DB,100,0,0x617430,34, 0x6177FB,100,0,0x617430,35, 0x617811,100,0,0x617430,36, 0x617831,100,0,0x617430,37, 0x617847,100,0,0x617430,38, 0x617867,100,0,0x617430,39, 0x61787D,100,0,0x617430,40, 0x61789D,100,0,0x617430,41, 0x6178B3,100,0,0x617430,42, 0x6178D3,100,0,0x617430,43, 0x6178E9,100,0,0x617430,44, 0x617909,100,0,0x617430,45, 0x61791F,100,0,0x617430,46, 0x61793F,100,0,0x617430,47, 0x617955,100,0,0x617430,48, 0x617975,100,0,0x617430,49, 0x61798B,100,0,0x617430,50, 0x6179AB,100,0,0x617430,51, 0x6179C1,100,0,0x617430,52, 0x6179E1,100,0,0x617430,53, 0x6179F7,100,0,0x617430,54, 0x617A17,100,0,0x617430,55, 0x617A2D,100,0,0x617430,56, 0x617A4D,100,0,0x617430,57, 0x617A63,100,0,0x617430,58, 0x617A83,100,0,0x617430,59, 0x617A99,100,0,0x617430,60, 0x617AB9,100,0,0x617430,61, 0x617ACF,100,0,0x617430,62, 0x617AEF,100,0,0x617430,63, 0x617B05,100,0,0x617430,64, 0x617B25,100,0,0x617430,65, 0x617B3B,100,0,0x617430,66, 0x617B5B,100,0,0x617430,67, 0x617B71,100,0,0x617430,68, 0x617B91,100,0,0x617430,69, 0x617BA7,100,0,0x617430,70, 0x617BC7,100,0,0x617430,71, 0x617BDD,100,0,0x617430,72, 0x617BFD,100,0,0x617430,73, 0x617C13,100,0,0x617430,74, 0x617C33,100,0,0x617430,75, 0x617C49,100,0,0x617430,76, 0x617C69,100,0,0x617430,77, 0x617C7F,100,0,0x617430,78, 0x617C9F,100,0,0x617430,79, 0x617CB5,100,0,0x617430,80, 0x617CD5,100,0,0x617430,81, 0x617CEB,100,0,0x617430,82, 0x617D0B,100,0,0x617430,83, 0x617D21,100,0,0x617430,84, 0x617D41,100,0,0x617430,85, 0x617D57,100,0,0x617430,86, 0x617D77,100,0,0x617430,87, 0x617D89,100,0,0x617430,88, 0x617DA5,100,0,0x617430,89, 0x617DB7,100,0,0x617430,90, 0x617DD3,100,0,0x617430,91, 0x617DE5,100,0,0x617430,92, 0x617E27,100,0,0x617E10,1, 0x617E50,100,0,0x617E10,2, 0x617E90,100,0,0x617E10,3, 0x617EB0,100,0,0x617E10,4, 0x617ED0,100,0,0x617E10,5, 0x617EF0,100,0,0x617E10,6, 0x617F10,100,0,0x617E10,7, 0x617F30,100,0,0x617E10,8, 0x617F50,100,0,0x617E10,9, 0x617F70,100,0,0x617E10,10, 0x617F90,100,0,0x617E10,11, 0x617FB0,100,0,0x617E10,12, 0x617FD0,100,0,0x617E10,13, 0x617FF0,100,0,0x617E10,14, 0x618010,100,0,0x617E10,15, 0x618030,100,0,0x617E10,16, 0x618050,100,0,0x617E10,17, 0x618070,100,0,0x617E10,18, 0x618090,100,0,0x617E10,19, 0x6180B0,100,0,0x617E10,20, 0x6180D0,100,0,0x617E10,21, 0x6180F0,100,0,0x617E10,22, 0x618110,100,0,0x617E10,23, 0x618130,100,0,0x617E10,24, 0x618150,100,0,0x617E10,25, 0x618170,100,0,0x617E10,26, 0x618190,100,0,0x617E10,27, 0x6181B0,100,0,0x617E10,28, 0x6181D0,100,0,0x617E10,29, 0x6181F0,100,0,0x617E10,30, 0x618210,100,0,0x617E10,31, 0x618230,100,0,0x617E10,32, 0x618250,100,0,0x617E10,33, 0x618270,100,0,0x617E10,34, 0x618290,100,0,0x617E10,35, 0x6182B0,100,0,0x617E10,36, 0x6182D0,100,0,0x617E10,37, 0x6182F0,100,0,0x617E10,38, 0x618310,100,0,0x617E10,39, 0x618330,100,0,0x617E10,40, 0x618350,100,0,0x617E10,41, 0x618370,100,0,0x617E10,42, 0x618390,100,0,0x617E10,43, 0x6183AC,100,0,0x617E10,44, 0x6183C8,100,0,0x617E10,45, 0x6183E4,100,0,0x617E10,46, 0x61867F,100,0,0x618630,1, 0x61868C,100,0,0x618630,2, 0x61869B,100,0,0x618630,3, 0x6186AE,100,0,0x618630,4, 0x6186FA,100,0,0x6186E0,1, 0x618964,100,0,0x618950,1, 0x618EE6,100,0,0x618EA0,1, 0x618F61,100,0,0x618EA0,2, 0x618F6E,100,0,0x618EA0,3, 0x618F7D,100,0,0x618EA0,4, 0x61901A,100,0,0x619000,1, 0x61A945,100,0,0x61A700,1, 0x61C61C,100,0,0x61C420,1, 0x61D9FB,100,0,0x61D960,1, 0x61DBBD,100,0,0x61D960,2, 0x61DD4E,100,0,0x61D960,3, 0x61E987,100,0,0x61E970,1, 0x61E9B3,100,0,0x61E970,2, 0x61EA99,100,0,0x61E970,3, 0x61EAAE,100,0,0x61E970,4, 0x624ECB,100,0,0x624EC0,1, 0x624F4E,100,0,0x624EC0,2, 0x624F60,100,0,0x624EC0,3, 0x624F90,100,0,0x624EC0,4, 0x624FA2,100,0,0x624EC0,5, 0x624FB9,100,0,0x624EC0,6, 0x624FCB,100,0,0x624EC0,7, 0x624FED,100,0,0x624EC0,8, 0x624FFF,100,0,0x624EC0,9, 0x625011,100,0,0x624EC0,10, 0x625023,100,0,0x624EC0,11, 0x637B7A,100,0,0x637600,1, 0x406244,110,0,0x405FA0,1, 0x406276,110,0,0x405FA0,2, 0x40629F,110,0,0x405FA0,3, 0x4062C8,110,0,0x405FA0,4, 0x406308,110,0,0x405FA0,5, 0x406B2D,110,0,0x4069D0,1, 0x406BF4,110,0,0x4069D0,2, 0x407036,110,0,0x406D30,1, 0x42AD59,110,0,0x42AC10,1, 0x42AFE7,110,0,0x42AE70,1, 0x42B0D3,110,0,0x42AE70,2, 0x42B5C3,110,0,0x42AE70,3, 0x42B6FC,110,0,0x42AE70,4, 0x42B788,110,0,0x42B730,1, 0x42B81A,110,0,0x42B7A0,1, 0x42B961,110,0,0x42B900,1, 0x42BE2C,110,0,0x42BB70,1, 0x42BE54,110,0,0x42BB70,2, 0x42C217,110,0,0x42BB70,3, 0x42C23F,110,0,0x42BB70,4, 0x42C419,110,0,0x42BB70,5, 0x42C441,110,0,0x42BB70,6, 0x430D24,110,0,0x430A60,1, 0x4311B9,110,0,0x430A60,2, 0x4318C7,110,0,0x430A60,3, 0x431CA2,110,0,0x430A60,4, 0x431CD3,110,0,0x430A60,5, 0x431D20,110,0,0x430A60,6, 0x431F5D,110,0,0x430A60,7, 0x432066,110,0,0x430A60,8, 0x432445,110,0,0x430A60,9, 0x432554,110,0,0x430A60,10, 0x432D99,110,0,0x430A60,11, 0x432EA6,110,0,0x430A60,12, 0x433CFE,110,0,0x430A60,13, 0x433DB3,110,0,0x430A60,14, 0x43C6C6,110,0,0x43C600,1, 0x43C9B4,110,0,0x43C600,2, 0x43CD8B,110,0,0x43CD70,1, 0x440AE9,110,0,0x440030,1, 0x440CB6,110,0,0x440030,2, 0x4414A6,110,0,0x440030,3, 0x441BB9,110,0,0x441BB0,1, 0x445CDB,110,0,0x444BE0,1, 0x451718,110,0,0x451550,1, 0x4580C4,110,0,0x457580,1, 0x4580D9,110,0,0x457580,2, 0x460C0D,110,0,0x460C00,1, 0x46F8B2,110,0,0x46F890,1, 0x4701E5,110,0,0x4700E7,1, 0x4702B0,110,0,0x4700E7,2, 0x47031B,110,0,0x4700E7,3, 0x471051,110,0,0x4700E7,4, 0x4710D7,110,0,0x4700E7,5, 0x4711EA,110,0,0x4700E7,6, 0x4711FE,110,0,0x4700E7,7, 0x471228,110,0,0x4700E7,8, 0x471240,110,0,0x4700E7,9, 0x471258,110,0,0x4700E7,10, 0x47126C,110,0,0x4700E7,11, 0x471280,110,0,0x4700E7,12, 0x471290,110,0,0x4700E7,13, 0x4712A0,110,0,0x4700E7,14, 0x4712EA,110,0,0x4700E7,15, 0x471349,110,0,0x4700E7,16, 0x47214D,110,0,0x4700E7,17, 0x473584,110,0,0x4700E7,18, 0x4735CD,110,0,0x4700E7,19, 0x47390A,110,0,0x4700E7,20, 0x47548F,110,0,0x474F16,1, 0x475BD5,110,0,0x4758C6,1, 0x475BE8,110,0,0x4758C6,2, 0x475BFB,110,0,0x4758C6,3, 0x475C0E,110,0,0x4758C6,4, 0x479627,110,0,0x479410,1, 0x47966A,110,0,0x479410,2, 0x47968A,110,0,0x479410,3, 0x47997A,110,0,0x479410,4, 0x47998B,110,0,0x479410,5, 0x47999C,110,0,0x479410,6, 0x4799BF,110,0,0x479410,7, 0x4799E6,110,0,0x479410,8, 0x4799F9,110,0,0x479410,9, 0x479A18,110,0,0x479410,10, 0x479A6A,110,0,0x479410,11, 0x47A3C2,110,0,0x47A20E,1, 0x47A405,110,0,0x47A20E,2, 0x47A425,110,0,0x47A20E,3, 0x47AF28,110,0,0x47AE27,1, 0x47AF6B,110,0,0x47AE27,2, 0x47AF8B,110,0,0x47AE27,3, 0x47BED9,110,0,0x47BE8F,1, 0x47BF2C,110,0,0x47BE8F,2, 0x47BFE0,110,0,0x47BE8F,3, 0x47C023,110,0,0x47BE8F,4, 0x47C05A,110,0,0x47BE8F,5, 0x47C07A,110,0,0x47BE8F,6, 0x47C15E,110,0,0x47BE8F,7, 0x47CDC1,110,0,0x47BE8F,8, 0x47D4EB,110,0,0x47CE73,1, 0x47D536,110,0,0x47CE73,2, 0x47D7BE,110,0,0x47CE73,3, 0x47F2A2,110,0,0x47F009,1, 0x47F700,110,0,0x47F68C,1, 0x47F70B,110,0,0x47F68C,2, 0x47F97A,110,0,0x47F68C,3, 0x47F9A1,110,0,0x47F68C,4, 0x47FACC,110,0,0x47F68C,5, 0x47FD2D,110,0,0x47F68C,6, 0x4800F1,110,0,0x47FE8C,1, 0x480785,110,0,0x47FE8C,2, 0x480799,110,0,0x47FE8C,3, 0x4807F2,110,0,0x47FE8C,4, 0x480960,110,0,0x47FE8C,5, 0x4816E6,110,0,0x480F17,1, 0x4816FA,110,0,0x480F17,2, 0x481753,110,0,0x480F17,3, 0x48186E,110,0,0x480F17,4, 0x481EEA,110,0,0x481AB3,1, 0x481F2D,110,0,0x481AB3,2, 0x481F4D,110,0,0x481AB3,3, 0x482558,110,0,0x481AB3,4, 0x48256B,110,0,0x481AB3,5, 0x48257E,110,0,0x481AB3,6, 0x4825B1,110,0,0x481AB3,7, 0x48292D,110,0,0x48267A,1, 0x48294D,110,0,0x48267A,2, 0x483118,110,0,0x48267A,3, 0x48312B,110,0,0x48267A,4, 0x483F7F,110,0,0x48351A,1, 0x483FC3,110,0,0x48351A,2, 0x483FF7,110,0,0x48351A,3, 0x484055,110,0,0x48351A,4, 0x487012,110,0,0x487010,1, 0x49049B,110,0,0x49046D,1, 0x495A09,110,0,0x49599B,1, 0x495A43,110,0,0x49599B,2, 0x495A73,110,0,0x49599B,3, 0x495B2D,110,0,0x49599B,4, 0x495BE2,110,0,0x49599B,5, 0x495BF4,110,0,0x49599B,6, 0x495C07,110,0,0x49599B,7, 0x495C38,110,0,0x49599B,8, 0x495CDB,110,0,0x49599B,9, 0x495CED,110,0,0x49599B,10, 0x495D00,110,0,0x49599B,11, 0x495D31,110,0,0x49599B,12, 0x495DFA,110,0,0x49599B,13, 0x495ECE,110,0,0x49599B,14, 0x495FAC,110,0,0x49599B,15, 0x495FFE,110,0,0x49599B,16, 0x496058,110,0,0x49599B,17, 0x49607E,110,0,0x49599B,18, 0x4960AE,110,0,0x49599B,19, 0x49625A,110,0,0x49599B,20, 0x4962C2,110,0,0x49599B,21, 0x496305,110,0,0x49599B,22, 0x496959,110,0,0x4965CA,1, 0x496984,110,0,0x4965CA,2, 0x496997,110,0,0x4965CA,3, 0x4969E6,110,0,0x4965CA,4, 0x496A11,110,0,0x4965CA,5, 0x496A24,110,0,0x4965CA,6, 0x496A77,110,0,0x4965CA,7, 0x496AB5,110,0,0x4965CA,8, 0x496ADC,110,0,0x4965CA,9, 0x496B16,110,0,0x4965CA,10, 0x496B48,110,0,0x4965CA,11, 0x496BAB,110,0,0x4965CA,12, 0x496BE4,110,0,0x4965CA,13, 0x496C11,110,0,0x4965CA,14, 0x496C40,110,0,0x4965CA,15, 0x496C6F,110,0,0x4965CA,16, 0x496C98,110,0,0x4965CA,17, 0x496CBD,110,0,0x4965CA,18, 0x496CD0,110,0,0x4965CA,19, 0x496CE3,110,0,0x4965CA,20, 0x496D0C,110,0,0x4965CA,21, 0x496D7C,110,0,0x4965CA,22, 0x496DA1,110,0,0x4965CA,23, 0x496E18,110,0,0x4965CA,24, 0x496E2A,110,0,0x4965CA,25, 0x496E32,110,0,0x4965CA,26, 0x496E46,110,0,0x4965CA,27, 0x496EBF,110,0,0x4965CA,28, 0x496ED1,110,0,0x4965CA,29, 0x496ED9,110,0,0x4965CA,30, 0x496EED,110,0,0x4965CA,31, 0x496F5D,110,0,0x4965CA,32, 0x496F8D,110,0,0x4965CA,33, 0x496FC1,110,0,0x4965CA,34, 0x496FEC,110,0,0x4965CA,35, 0x496FFF,110,0,0x4965CA,36, 0x497046,110,0,0x4965CA,37, 0x497071,110,0,0x4965CA,38, 0x497084,110,0,0x4965CA,39, 0x49767C,110,0,0x4973AF,1, 0x4976A5,110,0,0x4973AF,2, 0x4976CE,110,0,0x4973AF,3, 0x4976E0,110,0,0x4973AF,4, 0x4976F0,110,0,0x4973AF,5, 0x497714,110,0,0x4973AF,6, 0x49773D,110,0,0x4973AF,7, 0x497766,110,0,0x4973AF,8, 0x497778,110,0,0x4973AF,9, 0x497788,110,0,0x4973AF,10, 0x4977A8,110,0,0x4973AF,11, 0x4977E1,110,0,0x4973AF,12, 0x4977F3,110,0,0x4973AF,13, 0x497819,110,0,0x4973AF,14, 0x49782B,110,0,0x4973AF,15, 0x497883,110,0,0x4973AF,16, 0x497895,110,0,0x4973AF,17, 0x4978A4,110,0,0x4973AF,18, 0x4978CD,110,0,0x4973AF,19, 0x49792E,110,0,0x4973AF,20, 0x497940,110,0,0x4973AF,21, 0x49794F,110,0,0x4973AF,22, 0x497978,110,0,0x4973AF,23, 0x497B6A,110,0,0x4973AF,24, 0x497B89,110,0,0x4973AF,25, 0x497B9B,110,0,0x4973AF,26, 0x497BAB,110,0,0x4973AF,27, 0x497BFC,110,0,0x4973AF,28, 0x497C1B,110,0,0x4973AF,29, 0x497C2D,110,0,0x4973AF,30, 0x497C3D,110,0,0x4973AF,31, 0x497C91,110,0,0x4973AF,32, 0x497CB0,110,0,0x4973AF,33, 0x497CC2,110,0,0x4973AF,34, 0x497CD2,110,0,0x4973AF,35, 0x497D3C,110,0,0x4973AF,36, 0x497E60,110,0,0x4973AF,37, 0x497E7F,110,0,0x4973AF,38, 0x497E91,110,0,0x4973AF,39, 0x497EA1,110,0,0x4973AF,40, 0x497F28,110,0,0x4973AF,41, 0x498025,110,0,0x4973AF,42, 0x4981F3,110,0,0x4973AF,43, 0x498247,110,0,0x4973AF,44, 0x498259,110,0,0x4973AF,45, 0x49827B,110,0,0x4973AF,46, 0x49828D,110,0,0x4973AF,47, 0x498E9C,110,0,0x498E6F,1, 0x498FE5,110,0,0x498E6F,2, 0x498FF6,110,0,0x498E6F,3, 0x49914F,110,0,0x4990FE,1, 0x499187,110,0,0x4990FE,2, 0x4991BF,110,0,0x4990FE,3, 0x4991F7,110,0,0x4990FE,4, 0x49922F,110,0,0x4990FE,5, 0x499264,110,0,0x4990FE,6, 0x499299,110,0,0x4990FE,7, 0x4A49DA,110,0,0x4A4870,1, 0x4A49EB,110,0,0x4A4870,2, 0x4A4FAD,110,0,0x4A4B30,1, 0x4A4FBE,110,0,0x4A4B30,2, 0x4A65F9,110,0,0x4A65F0,1, 0x4A66DE,110,0,0x4A65F0,2, 0x4A6703,110,0,0x4A65F0,3, 0x4A6713,110,0,0x4A65F0,4, 0x4A6738,110,0,0x4A65F0,5, 0x4A674C,110,0,0x4A65F0,6, 0x4A6804,110,0,0x4A65F0,7, 0x4BBC5C,110,0,0x4BBC30,1, 0x4BBDF2,110,0,0x4BBC30,2, 0x4BD748,110,0,0x4BCAB0,1, 0x4BD75B,110,0,0x4BCAB0,2, 0x4BD922,110,0,0x4BCAB0,3, 0x4FD248,110,0,0x4FCF80,1, 0x507C4B,110,0,0x5057B0,1, 0x507C62,110,0,0x5057B0,2, 0x507C86,110,0,0x5057B0,3, 0x507E1C,110,0,0x5057B0,4, 0x507E43,110,0,0x5057B0,5, 0x50A578,110,0,0x50A550,1, 0x50A596,110,0,0x50A550,2, 0x50FD75,110,0,0x50F190,1, 0x510B50,110,0,0x50FFE0,1, 0x519BFD,110,0,0x519A10,1, 0x51AAAD,110,0,0x51A9E0,1, 0x51AD04,110,0,0x51ABE0,1, 0x51DCFB,110,0,0x51CA90,1, 0x51DE5D,110,0,0x51CA90,2, 0x522240,110,0,0x521F30,1, 0x523EFE,110,0,0x523CF0,1, 0x525307,110,0,0x524944,1, 0x52B7FF,110,0,0x52B090,1, 0x52BDF1,110,0,0x52B090,2, 0x52D7CD,110,0,0x52D1E0,1, 0x53526A,110,0,0x535260,1, 0x5373E2,110,0,0x537290,1, 0x53811C,110,0,0x537290,2, 0x544633,110,0,0x54461F,1, 0x55736D,110,0,0x557340,1, 0x5574C1,110,0,0x557340,2, 0x57AB69,110,0,0x57AB50,1, 0x57AB8A,110,0,0x57AB50,2, 0x57ABC6,110,0,0x57AB50,3, 0x57D7F2,110,0,0x57D5A0,1, 0x5865D0,110,0,0x5864E0,1, 0x586695,110,0,0x5864E0,2, 0x58747B,110,0,0x5870F0,1, 0x587686,110,0,0x5870F0,2, 0x588E2D,110,0,0x588E00,1, 0x588E84,110,0,0x588E00,2, 0x588EDC,110,0,0x588E00,3, 0x588F0F,110,0,0x588E00,4, 0x588FC5,110,0,0x588E00,5, 0x588FF2,110,0,0x588E00,6, 0x58904D,110,0,0x588E00,7, 0x589105,110,0,0x588E00,8, 0x589118,110,0,0x588E00,9, 0x5891A2,110,0,0x588E00,10, 0x5891CE,110,0,0x588E00,11, 0x5891F6,110,0,0x588E00,12, 0x589223,110,0,0x588E00,13, 0x5893FC,110,0,0x588E00,14, 0x5936ED,110,0,0x593050,1, 0x5938CD,110,0,0x593050,2, 0x593C69,110,0,0x593050,3, 0x5946F4,110,0,0x593050,4, 0x597DB8,110,0,0x593050,5, 0x597DD0,110,0,0x593050,6, 0x597F87,110,0,0x593050,7, 0x598202,110,0,0x593050,8, 0x59833F,110,0,0x593050,9, 0x5990F7,110,0,0x593050,10, 0x59B956,110,0,0x59B570,1, 0x59D80A,110,0,0x59D280,1, 0x59DB42,110,0,0x59D280,2, 0x59DB60,110,0,0x59D280,3, 0x5A14F8,110,0,0x59FEB0,1, 0x5A237F,110,0,0x59FEB0,2, 0x5A4C05,110,0,0x5A4BE0,1, 0x5A4CC7,110,0,0x5A4BE0,2, 0x5A4D03,110,0,0x5A4BE0,3, 0x5A58FC,110,0,0x5A5590,1, 0x5A59B7,110,0,0x5A5590,2, 0x5B5807,110,0,0x5B54E0,1, 0x5B5A9E,110,0,0x5B54E0,2, 0x5B5AC8,110,0,0x5B54E0,3, 0x5B5AF2,110,0,0x5B54E0,4, 0x5B5B3B,110,0,0x5B54E0,5, 0x5B5DBE,110,0,0x5B54E0,6, 0x5B5DD0,110,0,0x5B54E0,7, 0x5B618A,110,0,0x5B54E0,8, 0x5B61B0,110,0,0x5B54E0,9, 0x5B6A57,110,0,0x5B54E0,10, 0x5B6A69,110,0,0x5B54E0,11, 0x5B6E62,110,0,0x5B54E0,12, 0x5B6E8C,110,0,0x5B54E0,13, 0x5B6EB8,110,0,0x5B54E0,14, 0x5B6EDE,110,0,0x5B54E0,15, 0x5B6EFB,110,0,0x5B54E0,16, 0x5B6F44,110,0,0x5B54E0,17, 0x5B6F55,110,0,0x5B54E0,18, 0x5B6F7F,110,0,0x5B54E0,19, 0x5B6FA5,110,0,0x5B54E0,20, 0x5B6FC2,110,0,0x5B54E0,21, 0x5B6FEC,110,0,0x5B54E0,22, 0x5B7035,110,0,0x5B54E0,23, 0x5B7061,110,0,0x5B54E0,24, 0x5C66DC,110,0,0x5C5740,1, 0x5C91B2,110,0,0x5C9190,1, 0x5C92A0,110,0,0x5C9200,1, 0x5C92B8,110,0,0x5C9200,2, 0x5C92FA,110,0,0x5C9200,3, 0x5C948C,110,0,0x5C9200,4, 0x5C95FE,110,0,0x5C9560,1, 0x5C9616,110,0,0x5C9560,2, 0x5C9727,110,0,0x5C9560,3, 0x5C986E,110,0,0x5C97D0,1, 0x5C9886,110,0,0x5C97D0,2, 0x5C99CE,110,0,0x5C97D0,3, 0x5CBFC3,110,0,0x5CB0C0,1, 0x5CC44B,110,0,0x5CC010,1, 0x5CC986,110,0,0x5CC750,1, 0x5CEDEE,110,0,0x5CD360,1, 0x5D0106,110,0,0x5CEE80,1, 0x5D4B69,110,0,0x5D4600,1, 0x5EF40E,110,0,0x5EE7D0,1, 0x5FB7EE,110,0,0x5FB620,1, 0x5FF8D7,110,0,0x5FF650,1, 0x60001F,110,0,0x5FFAD0,1, 0x600036,110,0,0x5FFAD0,2, 0x600063,110,0,0x5FFAD0,3, 0x6000A1,110,0,0x5FFAD0,4, 0x6000D0,110,0,0x5FFAD0,5, 0x600126,110,0,0x5FFAD0,6, 0x6001D5,110,0,0x5FFAD0,7, 0x6001EC,110,0,0x5FFAD0,8, 0x600219,110,0,0x5FFAD0,9, 0x60025C,110,0,0x5FFAD0,10, 0x60028B,110,0,0x5FFAD0,11, 0x6002E1,110,0,0x5FFAD0,12, 0x60157A,110,0,0x6010E0,1, 0x60158B,110,0,0x6010E0,2, 0x6023C4,110,0,0x6023B0,1, 0x60247C,110,0,0x602470,1, 0x602527,110,0,0x602520,1, 0x60252F,110,0,0x602520,2, 0x602919,110,0,0x602910,1, 0x602923,110,0,0x602910,2, 0x6032DA,110,0,0x6032C0,1, 0x6033AA,110,0,0x6032C0,2, 0x60347A,110,0,0x6032C0,3, 0x6034A9,110,0,0x6032C0,4, 0x603544,110,0,0x603500,1, 0x603596,110,0,0x603500,2, 0x60365F,110,0,0x603500,3, 0x603694,110,0,0x603500,4, 0x6037A4,110,0,0x6036E0,1, 0x603814,110,0,0x6036E0,2, 0x6038EF,110,0,0x6036E0,3, 0x603924,110,0,0x6036E0,4, 0x603A24,110,0,0x603960,1, 0x603AB7,110,0,0x603960,2, 0x603B7D,110,0,0x603960,3, 0x603BB2,110,0,0x603960,4, 0x603C2D,110,0,0x603BF0,1, 0x604742,110,0,0x6044E0,1, 0x6047B6,110,0,0x6044E0,2, 0x604893,110,0,0x6044E0,3, 0x60496B,110,0,0x6044E0,4, 0x604A34,110,0,0x6044E0,5, 0x604AD8,110,0,0x6044E0,6, 0x604CE6,110,0,0x6044E0,7, 0x604D5A,110,0,0x6044E0,8, 0x604E35,110,0,0x6044E0,9, 0x604F0D,110,0,0x6044E0,10, 0x604FD6,110,0,0x6044E0,11, 0x605014,110,0,0x6044E0,12, 0x6050E2,110,0,0x6044E0,13, 0x6051DC,110,0,0x6044E0,14, 0x6054BD,110,0,0x6044E0,15, 0x6055CB,110,0,0x6044E0,16, 0x605699,110,0,0x6044E0,17, 0x6057E6,110,0,0x6044E0,18, 0x60592C,110,0,0x6044E0,19, 0x6059F1,110,0,0x6044E0,20, 0x605A42,110,0,0x6044E0,21, 0x605AEC,110,0,0x6044E0,22, 0x605B4B,110,0,0x6044E0,23, 0x605C68,110,0,0x6044E0,24, 0x605CA7,110,0,0x6044E0,25, 0x605CE6,110,0,0x6044E0,26, 0x607C9A,110,0,0x606710,1, 0x6085D3,110,0,0x6084A0,1, 0x60880C,110,0,0x6084A0,2, 0x60A54D,110,0,0x60A520,1, 0x60A581,110,0,0x60A520,2, 0x60A5CA,110,0,0x60A520,3, 0x60A675,110,0,0x60A520,4, 0x60A69C,110,0,0x60A520,5, 0x60A755,110,0,0x60A520,6, 0x60A768,110,0,0x60A520,7, 0x60A7CF,110,0,0x60A520,8, 0x60A7FB,110,0,0x60A520,9, 0x60A823,110,0,0x60A520,10, 0x60A850,110,0,0x60A520,11, 0x60A9E8,110,0,0x60A520,12, 0x60EAD4,110,0,0x60E3C0,1, 0x61299B,110,0,0x60E3C0,2, 0x617270,110,0,0x617250,1, 0x61728D,110,0,0x617250,2, 0x6172AA,110,0,0x617250,3, 0x6172C3,110,0,0x617250,4, 0x6172DC,110,0,0x617250,5, 0x6172F5,110,0,0x617250,6, 0x61730E,110,0,0x617250,7, 0x617350,110,0,0x617330,1, 0x61736D,110,0,0x617330,2, 0x61738A,110,0,0x617330,3, 0x6173A3,110,0,0x617330,4, 0x6173BC,110,0,0x617330,5, 0x6173D5,110,0,0x617330,6, 0x6173EE,110,0,0x617330,7, 0x617427,110,0,0x617410,1, 0x61743A,110,0,0x617410,2, 0x617463,110,0,0x617410,3, 0x617476,110,0,0x617410,4, 0x6174B1,110,0,0x617410,5, 0x6174C7,110,0,0x617410,6, 0x6174E7,110,0,0x617410,7, 0x6174FD,110,0,0x617410,8, 0x61751D,110,0,0x617410,9, 0x617533,110,0,0x617410,10, 0x617553,110,0,0x617410,11, 0x617569,110,0,0x617410,12, 0x617589,110,0,0x617410,13, 0x61759F,110,0,0x617410,14, 0x6175BF,110,0,0x617410,15, 0x6175D5,110,0,0x617410,16, 0x6175F5,110,0,0x617410,17, 0x61760B,110,0,0x617410,18, 0x61762B,110,0,0x617410,19, 0x617641,110,0,0x617410,20, 0x617661,110,0,0x617410,21, 0x617677,110,0,0x617410,22, 0x617697,110,0,0x617410,23, 0x6176AD,110,0,0x617410,24, 0x6176CD,110,0,0x617410,25, 0x6176E3,110,0,0x617410,26, 0x617703,110,0,0x617410,27, 0x617719,110,0,0x617410,28, 0x617739,110,0,0x617410,29, 0x61774F,110,0,0x617410,30, 0x61776F,110,0,0x617410,31, 0x617785,110,0,0x617410,32, 0x6177A5,110,0,0x617410,33, 0x6177BB,110,0,0x617410,34, 0x6177DB,110,0,0x617410,35, 0x6177F1,110,0,0x617410,36, 0x617811,110,0,0x617410,37, 0x617827,110,0,0x617410,38, 0x617847,110,0,0x617410,39, 0x61785D,110,0,0x617410,40, 0x61787D,110,0,0x617410,41, 0x617893,110,0,0x617410,42, 0x6178B3,110,0,0x617410,43, 0x6178C9,110,0,0x617410,44, 0x6178E9,110,0,0x617410,45, 0x6178FF,110,0,0x617410,46, 0x61791F,110,0,0x617410,47, 0x617935,110,0,0x617410,48, 0x617955,110,0,0x617410,49, 0x61796B,110,0,0x617410,50, 0x61798B,110,0,0x617410,51, 0x6179A1,110,0,0x617410,52, 0x6179C1,110,0,0x617410,53, 0x6179D7,110,0,0x617410,54, 0x6179F7,110,0,0x617410,55, 0x617A0D,110,0,0x617410,56, 0x617A2D,110,0,0x617410,57, 0x617A43,110,0,0x617410,58, 0x617A63,110,0,0x617410,59, 0x617A79,110,0,0x617410,60, 0x617A99,110,0,0x617410,61, 0x617AAF,110,0,0x617410,62, 0x617ACF,110,0,0x617410,63, 0x617AE5,110,0,0x617410,64, 0x617B05,110,0,0x617410,65, 0x617B1B,110,0,0x617410,66, 0x617B3B,110,0,0x617410,67, 0x617B51,110,0,0x617410,68, 0x617B71,110,0,0x617410,69, 0x617B87,110,0,0x617410,70, 0x617BA7,110,0,0x617410,71, 0x617BBD,110,0,0x617410,72, 0x617BDD,110,0,0x617410,73, 0x617BF3,110,0,0x617410,74, 0x617C13,110,0,0x617410,75, 0x617C29,110,0,0x617410,76, 0x617C49,110,0,0x617410,77, 0x617C5F,110,0,0x617410,78, 0x617C7F,110,0,0x617410,79, 0x617C95,110,0,0x617410,80, 0x617CB5,110,0,0x617410,81, 0x617CCB,110,0,0x617410,82, 0x617CEB,110,0,0x617410,83, 0x617D01,110,0,0x617410,84, 0x617D21,110,0,0x617410,85, 0x617D37,110,0,0x617410,86, 0x617D57,110,0,0x617410,87, 0x617D69,110,0,0x617410,88, 0x617D85,110,0,0x617410,89, 0x617D97,110,0,0x617410,90, 0x617DB3,110,0,0x617410,91, 0x617DC5,110,0,0x617410,92, 0x617E07,110,0,0x617DF0,1, 0x617E30,110,0,0x617DF0,2, 0x617E70,110,0,0x617DF0,3, 0x617E90,110,0,0x617DF0,4, 0x617EB0,110,0,0x617DF0,5, 0x617ED0,110,0,0x617DF0,6, 0x617EF0,110,0,0x617DF0,7, 0x617F10,110,0,0x617DF0,8, 0x617F30,110,0,0x617DF0,9, 0x617F50,110,0,0x617DF0,10, 0x617F70,110,0,0x617DF0,11, 0x617F90,110,0,0x617DF0,12, 0x617FB0,110,0,0x617DF0,13, 0x617FD0,110,0,0x617DF0,14, 0x617FF0,110,0,0x617DF0,15, 0x618010,110,0,0x617DF0,16, 0x618030,110,0,0x617DF0,17, 0x618050,110,0,0x617DF0,18, 0x618070,110,0,0x617DF0,19, 0x618090,110,0,0x617DF0,20, 0x6180B0,110,0,0x617DF0,21, 0x6180D0,110,0,0x617DF0,22, 0x6180F0,110,0,0x617DF0,23, 0x618110,110,0,0x617DF0,24, 0x618130,110,0,0x617DF0,25, 0x618150,110,0,0x617DF0,26, 0x618170,110,0,0x617DF0,27, 0x618190,110,0,0x617DF0,28, 0x6181B0,110,0,0x617DF0,29, 0x6181D0,110,0,0x617DF0,30, 0x6181F0,110,0,0x617DF0,31, 0x618210,110,0,0x617DF0,32, 0x618230,110,0,0x617DF0,33, 0x618250,110,0,0x617DF0,34, 0x618270,110,0,0x617DF0,35, 0x618290,110,0,0x617DF0,36, 0x6182B0,110,0,0x617DF0,37, 0x6182D0,110,0,0x617DF0,38, 0x6182F0,110,0,0x617DF0,39, 0x618310,110,0,0x617DF0,40, 0x618330,110,0,0x617DF0,41, 0x618350,110,0,0x617DF0,42, 0x618370,110,0,0x617DF0,43, 0x61838C,110,0,0x617DF0,44, 0x6183A8,110,0,0x617DF0,45, 0x6183C4,110,0,0x617DF0,46, 0x61865F,110,0,0x618610,1, 0x61866C,110,0,0x618610,2, 0x61867B,110,0,0x618610,3, 0x61868E,110,0,0x618610,4, 0x6186DA,110,0,0x6186C0,1, 0x618944,110,0,0x618930,1, 0x618EC6,110,0,0x618E80,1, 0x618F41,110,0,0x618E80,2, 0x618F4E,110,0,0x618E80,3, 0x618F5D,110,0,0x618E80,4, 0x618FFA,110,0,0x618FE0,1, 0x61A925,110,0,0x61A6E0,1, 0x61C5FC,110,0,0x61C400,1, 0x61D9DB,110,0,0x61D940,1, 0x61DB9D,110,0,0x61D940,2, 0x61DD2E,110,0,0x61D940,3, 0x61E967,110,0,0x61E950,1, 0x61E993,110,0,0x61E950,2, 0x61EA79,110,0,0x61E950,3, 0x61EA8E,110,0,0x61E950,4, 0x624EAB,110,0,0x624EA0,1, 0x624F2E,110,0,0x624EA0,2, 0x624F40,110,0,0x624EA0,3, 0x624F70,110,0,0x624EA0,4, 0x624F82,110,0,0x624EA0,5, 0x624F99,110,0,0x624EA0,6, 0x624FAB,110,0,0x624EA0,7, 0x624FCD,110,0,0x624EA0,8, 0x624FDF,110,0,0x624EA0,9, 0x624FF1,110,0,0x624EA0,10, 0x625003,110,0,0x624EA0,11, 0x637BCA,110,0,0x637650,1, 0x406244,120,0,0x405FA0,1, 0x406276,120,0,0x405FA0,2, 0x40629F,120,0,0x405FA0,3, 0x4062C8,120,0,0x405FA0,4, 0x406308,120,0,0x405FA0,5, 0x406B2D,120,0,0x4069D0,1, 0x406BF4,120,0,0x4069D0,2, 0x407036,120,0,0x406D30,1, 0x42AD29,120,0,0x42ABE0,1, 0x42AFB7,120,0,0x42AE40,1, 0x42B0A3,120,0,0x42AE40,2, 0x42B593,120,0,0x42AE40,3, 0x42B6CC,120,0,0x42AE40,4, 0x42B758,120,0,0x42B700,1, 0x42B7EA,120,0,0x42B770,1, 0x42B931,120,0,0x42B8D0,1, 0x42BDFC,120,0,0x42BB40,1, 0x42BE24,120,0,0x42BB40,2, 0x42C1E7,120,0,0x42BB40,3, 0x42C20F,120,0,0x42BB40,4, 0x42C3E9,120,0,0x42BB40,5, 0x42C411,120,0,0x42BB40,6, 0x430CF4,120,0,0x430A30,1, 0x431189,120,0,0x430A30,2, 0x431897,120,0,0x430A30,3, 0x431C72,120,0,0x430A30,4, 0x431CA3,120,0,0x430A30,5, 0x431CF0,120,0,0x430A30,6, 0x431F2D,120,0,0x430A30,7, 0x432036,120,0,0x430A30,8, 0x432415,120,0,0x430A30,9, 0x432524,120,0,0x430A30,10, 0x432D69,120,0,0x430A30,11, 0x432E76,120,0,0x430A30,12, 0x433CCE,120,0,0x430A30,13, 0x433D83,120,0,0x430A30,14, 0x43C636,120,0,0x43C570,1, 0x43C924,120,0,0x43C570,2, 0x43CCFB,120,0,0x43CCE0,1, 0x440A59,120,0,0x43FFA0,1, 0x440C26,120,0,0x43FFA0,2, 0x441416,120,0,0x43FFA0,3, 0x441B29,120,0,0x441B20,1, 0x445BEB,120,0,0x444AF0,1, 0x451628,120,0,0x451460,1, 0x457FA4,120,0,0x457460,1, 0x457FB9,120,0,0x457460,2, 0x460AED,120,0,0x460AE0,1, 0x46F792,120,0,0x46F770,1, 0x4700C5,120,0,0x46FFC7,1, 0x470190,120,0,0x46FFC7,2, 0x4701FB,120,0,0x46FFC7,3, 0x470F31,120,0,0x46FFC7,4, 0x470FB7,120,0,0x46FFC7,5, 0x4710CA,120,0,0x46FFC7,6, 0x4710DE,120,0,0x46FFC7,7, 0x471108,120,0,0x46FFC7,8, 0x471120,120,0,0x46FFC7,9, 0x471138,120,0,0x46FFC7,10, 0x47114C,120,0,0x46FFC7,11, 0x471160,120,0,0x46FFC7,12, 0x471170,120,0,0x46FFC7,13, 0x471180,120,0,0x46FFC7,14, 0x4711CA,120,0,0x46FFC7,15, 0x471229,120,0,0x46FFC7,16, 0x47202D,120,0,0x46FFC7,17, 0x473464,120,0,0x46FFC7,18, 0x4734AD,120,0,0x46FFC7,19, 0x4737EA,120,0,0x46FFC7,20, 0x47536F,120,0,0x474DF6,1, 0x475AB5,120,0,0x4757A6,1, 0x475AC8,120,0,0x4757A6,2, 0x475ADB,120,0,0x4757A6,3, 0x475AEE,120,0,0x4757A6,4, 0x479507,120,0,0x4792F0,1, 0x47954A,120,0,0x4792F0,2, 0x47956A,120,0,0x4792F0,3, 0x47985A,120,0,0x4792F0,4, 0x47986B,120,0,0x4792F0,5, 0x47987C,120,0,0x4792F0,6, 0x47989F,120,0,0x4792F0,7, 0x4798C6,120,0,0x4792F0,8, 0x4798D9,120,0,0x4792F0,9, 0x4798F8,120,0,0x4792F0,10, 0x47994A,120,0,0x4792F0,11, 0x47A2A2,120,0,0x47A0EE,1, 0x47A2E5,120,0,0x47A0EE,2, 0x47A305,120,0,0x47A0EE,3, 0x47AE08,120,0,0x47AD07,1, 0x47AE4B,120,0,0x47AD07,2, 0x47AE6B,120,0,0x47AD07,3, 0x47BDB9,120,0,0x47BD6F,1, 0x47BE0C,120,0,0x47BD6F,2, 0x47BEC0,120,0,0x47BD6F,3, 0x47BF03,120,0,0x47BD6F,4, 0x47BF3A,120,0,0x47BD6F,5, 0x47BF5A,120,0,0x47BD6F,6, 0x47C03E,120,0,0x47BD6F,7, 0x47CCA1,120,0,0x47BD6F,8, 0x47D3CB,120,0,0x47CD53,1, 0x47D416,120,0,0x47CD53,2, 0x47D69E,120,0,0x47CD53,3, 0x47F182,120,0,0x47EEE9,1, 0x47F5E0,120,0,0x47F56C,1, 0x47F5EB,120,0,0x47F56C,2, 0x47F85A,120,0,0x47F56C,3, 0x47F881,120,0,0x47F56C,4, 0x47F9AC,120,0,0x47F56C,5, 0x47FC0D,120,0,0x47F56C,6, 0x47FFD1,120,0,0x47FD6C,1, 0x480665,120,0,0x47FD6C,2, 0x480679,120,0,0x47FD6C,3, 0x4806D2,120,0,0x47FD6C,4, 0x480840,120,0,0x47FD6C,5, 0x4815C6,120,0,0x480DF7,1, 0x4815DA,120,0,0x480DF7,2, 0x481633,120,0,0x480DF7,3, 0x48174E,120,0,0x480DF7,4, 0x481DCA,120,0,0x481993,1, 0x481E0D,120,0,0x481993,2, 0x481E2D,120,0,0x481993,3, 0x482438,120,0,0x481993,4, 0x48244B,120,0,0x481993,5, 0x48245E,120,0,0x481993,6, 0x482491,120,0,0x481993,7, 0x48280D,120,0,0x48255A,1, 0x48282D,120,0,0x48255A,2, 0x482FF8,120,0,0x48255A,3, 0x48300B,120,0,0x48255A,4, 0x483E5F,120,0,0x4833FA,1, 0x483EA3,120,0,0x4833FA,2, 0x483ED7,120,0,0x4833FA,3, 0x483F35,120,0,0x4833FA,4, 0x486EF2,120,0,0x486EF0,1, 0x49039B,120,0,0x49036D,1, 0x495909,120,0,0x49589B,1, 0x495943,120,0,0x49589B,2, 0x495973,120,0,0x49589B,3, 0x495A2D,120,0,0x49589B,4, 0x495AE2,120,0,0x49589B,5, 0x495AF4,120,0,0x49589B,6, 0x495B07,120,0,0x49589B,7, 0x495B38,120,0,0x49589B,8, 0x495BDB,120,0,0x49589B,9, 0x495BED,120,0,0x49589B,10, 0x495C00,120,0,0x49589B,11, 0x495C31,120,0,0x49589B,12, 0x495CFA,120,0,0x49589B,13, 0x495DCE,120,0,0x49589B,14, 0x495EAC,120,0,0x49589B,15, 0x495EFE,120,0,0x49589B,16, 0x495F58,120,0,0x49589B,17, 0x495F7E,120,0,0x49589B,18, 0x495FAE,120,0,0x49589B,19, 0x49615A,120,0,0x49589B,20, 0x4961C2,120,0,0x49589B,21, 0x496205,120,0,0x49589B,22, 0x496859,120,0,0x4964CA,1, 0x496884,120,0,0x4964CA,2, 0x496897,120,0,0x4964CA,3, 0x4968E6,120,0,0x4964CA,4, 0x496911,120,0,0x4964CA,5, 0x496924,120,0,0x4964CA,6, 0x496977,120,0,0x4964CA,7, 0x4969B5,120,0,0x4964CA,8, 0x4969DC,120,0,0x4964CA,9, 0x496A16,120,0,0x4964CA,10, 0x496A48,120,0,0x4964CA,11, 0x496AAB,120,0,0x4964CA,12, 0x496AE4,120,0,0x4964CA,13, 0x496B11,120,0,0x4964CA,14, 0x496B40,120,0,0x4964CA,15, 0x496B6F,120,0,0x4964CA,16, 0x496B98,120,0,0x4964CA,17, 0x496BBD,120,0,0x4964CA,18, 0x496BD0,120,0,0x4964CA,19, 0x496BE3,120,0,0x4964CA,20, 0x496C0C,120,0,0x4964CA,21, 0x496C7C,120,0,0x4964CA,22, 0x496CA1,120,0,0x4964CA,23, 0x496D18,120,0,0x4964CA,24, 0x496D2A,120,0,0x4964CA,25, 0x496D32,120,0,0x4964CA,26, 0x496D46,120,0,0x4964CA,27, 0x496DBF,120,0,0x4964CA,28, 0x496DD1,120,0,0x4964CA,29, 0x496DD9,120,0,0x4964CA,30, 0x496DED,120,0,0x4964CA,31, 0x496E5D,120,0,0x4964CA,32, 0x496E8D,120,0,0x4964CA,33, 0x496EC1,120,0,0x4964CA,34, 0x496EEC,120,0,0x4964CA,35, 0x496EFF,120,0,0x4964CA,36, 0x496F46,120,0,0x4964CA,37, 0x496F71,120,0,0x4964CA,38, 0x496F84,120,0,0x4964CA,39, 0x49757C,120,0,0x4972AF,1, 0x4975A5,120,0,0x4972AF,2, 0x4975CE,120,0,0x4972AF,3, 0x4975E0,120,0,0x4972AF,4, 0x4975F0,120,0,0x4972AF,5, 0x497614,120,0,0x4972AF,6, 0x49763D,120,0,0x4972AF,7, 0x497666,120,0,0x4972AF,8, 0x497678,120,0,0x4972AF,9, 0x497688,120,0,0x4972AF,10, 0x4976A8,120,0,0x4972AF,11, 0x4976E1,120,0,0x4972AF,12, 0x4976F3,120,0,0x4972AF,13, 0x497719,120,0,0x4972AF,14, 0x49772B,120,0,0x4972AF,15, 0x497783,120,0,0x4972AF,16, 0x497795,120,0,0x4972AF,17, 0x4977A4,120,0,0x4972AF,18, 0x4977CD,120,0,0x4972AF,19, 0x49782E,120,0,0x4972AF,20, 0x497840,120,0,0x4972AF,21, 0x49784F,120,0,0x4972AF,22, 0x497878,120,0,0x4972AF,23, 0x497A6A,120,0,0x4972AF,24, 0x497A89,120,0,0x4972AF,25, 0x497A9B,120,0,0x4972AF,26, 0x497AAB,120,0,0x4972AF,27, 0x497AFC,120,0,0x4972AF,28, 0x497B1B,120,0,0x4972AF,29, 0x497B2D,120,0,0x4972AF,30, 0x497B3D,120,0,0x4972AF,31, 0x497B91,120,0,0x4972AF,32, 0x497BB0,120,0,0x4972AF,33, 0x497BC2,120,0,0x4972AF,34, 0x497BD2,120,0,0x4972AF,35, 0x497C3C,120,0,0x4972AF,36, 0x497D60,120,0,0x4972AF,37, 0x497D7F,120,0,0x4972AF,38, 0x497D91,120,0,0x4972AF,39, 0x497DA1,120,0,0x4972AF,40, 0x497E28,120,0,0x4972AF,41, 0x497F25,120,0,0x4972AF,42, 0x4980F3,120,0,0x4972AF,43, 0x498147,120,0,0x4972AF,44, 0x498159,120,0,0x4972AF,45, 0x49817B,120,0,0x4972AF,46, 0x49818D,120,0,0x4972AF,47, 0x498D9C,120,0,0x498D6F,1, 0x498EE5,120,0,0x498D6F,2, 0x498EF6,120,0,0x498D6F,3, 0x49904F,120,0,0x498FFE,1, 0x499087,120,0,0x498FFE,2, 0x4990BF,120,0,0x498FFE,3, 0x4990F7,120,0,0x498FFE,4, 0x49912F,120,0,0x498FFE,5, 0x499164,120,0,0x498FFE,6, 0x499199,120,0,0x498FFE,7, 0x4A487A,120,0,0x4A4710,1, 0x4A488B,120,0,0x4A4710,2, 0x4A4E5A,120,0,0x4A49D0,1, 0x4A4E6B,120,0,0x4A49D0,2, 0x4A64A9,120,0,0x4A64A0,1, 0x4A658E,120,0,0x4A64A0,2, 0x4A65B3,120,0,0x4A64A0,3, 0x4A65C3,120,0,0x4A64A0,4, 0x4A65E8,120,0,0x4A64A0,5, 0x4A65FC,120,0,0x4A64A0,6, 0x4A66B4,120,0,0x4A64A0,7, 0x4BBB0C,120,0,0x4BBAE0,1, 0x4BBCA2,120,0,0x4BBAE0,2, 0x4BD5F8,120,0,0x4BC960,1, 0x4BD60B,120,0,0x4BC960,2, 0x4BD7D2,120,0,0x4BC960,3, 0x4FD0E8,120,0,0x4FCE20,1, 0x507AEB,120,0,0x505650,1, 0x507B02,120,0,0x505650,2, 0x507B26,120,0,0x505650,3, 0x507CBC,120,0,0x505650,4, 0x507CE3,120,0,0x505650,5, 0x50A418,120,0,0x50A3F0,1, 0x50A436,120,0,0x50A3F0,2, 0x50FC15,120,0,0x50F030,1, 0x5109F0,120,0,0x50FE80,1, 0x519ACD,120,0,0x5198E0,1, 0x51A97D,120,0,0x51A8B0,1, 0x51ABD4,120,0,0x51AAB0,1, 0x51DBCB,120,0,0x51C960,1, 0x51DD2D,120,0,0x51C960,2, 0x522110,120,0,0x521E00,1, 0x523DCE,120,0,0x523BC0,1, 0x5251D7,120,0,0x524810,1, 0x52B6CF,120,0,0x52AF60,1, 0x52BCC1,120,0,0x52AF60,2, 0x52D69D,120,0,0x52D0B0,1, 0x53513A,120,0,0x535130,1, 0x5372B2,120,0,0x537160,1, 0x537FEC,120,0,0x537160,2, 0x544503,120,0,0x5444EF,1, 0x55723D,120,0,0x557210,1, 0x557391,120,0,0x557210,2, 0x57AA39,120,0,0x57AA20,1, 0x57AA5A,120,0,0x57AA20,2, 0x57AA96,120,0,0x57AA20,3, 0x57D602,120,0,0x57D3B0,1, 0x5863E0,120,0,0x5862F0,1, 0x5864A5,120,0,0x5862F0,2, 0x58728B,120,0,0x586F00,1, 0x587496,120,0,0x586F00,2, 0x588C3D,120,0,0x588C10,1, 0x588C94,120,0,0x588C10,2, 0x588CEC,120,0,0x588C10,3, 0x588D1F,120,0,0x588C10,4, 0x588DD5,120,0,0x588C10,5, 0x588E02,120,0,0x588C10,6, 0x588E5D,120,0,0x588C10,7, 0x588F15,120,0,0x588C10,8, 0x588F28,120,0,0x588C10,9, 0x588FB2,120,0,0x588C10,10, 0x588FDE,120,0,0x588C10,11, 0x589006,120,0,0x588C10,12, 0x589033,120,0,0x588C10,13, 0x58920C,120,0,0x588C10,14, 0x5934FD,120,0,0x592E60,1, 0x5936DD,120,0,0x592E60,2, 0x593A79,120,0,0x592E60,3, 0x594504,120,0,0x592E60,4, 0x597BC8,120,0,0x592E60,5, 0x597BE0,120,0,0x592E60,6, 0x597D97,120,0,0x592E60,7, 0x598012,120,0,0x592E60,8, 0x59814F,120,0,0x592E60,9, 0x598F07,120,0,0x592E60,10, 0x59B766,120,0,0x59B380,1, 0x59D61A,120,0,0x59D090,1, 0x59D952,120,0,0x59D090,2, 0x59D970,120,0,0x59D090,3, 0x5A1308,120,0,0x59FCC0,1, 0x5A218F,120,0,0x59FCC0,2, 0x5A4A15,120,0,0x5A49F0,1, 0x5A4AD7,120,0,0x5A49F0,2, 0x5A4B13,120,0,0x5A49F0,3, 0x5A570C,120,0,0x5A53A0,1, 0x5A57C7,120,0,0x5A53A0,2, 0x5B5617,120,0,0x5B52F0,1, 0x5B58AE,120,0,0x5B52F0,2, 0x5B58D8,120,0,0x5B52F0,3, 0x5B5902,120,0,0x5B52F0,4, 0x5B594B,120,0,0x5B52F0,5, 0x5B5BCE,120,0,0x5B52F0,6, 0x5B5BE0,120,0,0x5B52F0,7, 0x5B5F9A,120,0,0x5B52F0,8, 0x5B5FC0,120,0,0x5B52F0,9, 0x5B6867,120,0,0x5B52F0,10, 0x5B6879,120,0,0x5B52F0,11, 0x5B6C72,120,0,0x5B52F0,12, 0x5B6C9C,120,0,0x5B52F0,13, 0x5B6CC8,120,0,0x5B52F0,14, 0x5B6CEE,120,0,0x5B52F0,15, 0x5B6D0B,120,0,0x5B52F0,16, 0x5B6D54,120,0,0x5B52F0,17, 0x5B6D65,120,0,0x5B52F0,18, 0x5B6D8F,120,0,0x5B52F0,19, 0x5B6DB5,120,0,0x5B52F0,20, 0x5B6DD2,120,0,0x5B52F0,21, 0x5B6DFC,120,0,0x5B52F0,22, 0x5B6E45,120,0,0x5B52F0,23, 0x5B6E71,120,0,0x5B52F0,24, 0x5C64EC,120,0,0x5C5550,1, 0x5C8FC2,120,0,0x5C8FA0,1, 0x5C90B0,120,0,0x5C9010,1, 0x5C90C8,120,0,0x5C9010,2, 0x5C910A,120,0,0x5C9010,3, 0x5C929C,120,0,0x5C9010,4, 0x5C940E,120,0,0x5C9370,1, 0x5C9426,120,0,0x5C9370,2, 0x5C9537,120,0,0x5C9370,3, 0x5C967E,120,0,0x5C95E0,1, 0x5C9696,120,0,0x5C95E0,2, 0x5C97DE,120,0,0x5C95E0,3, 0x5CBDD3,120,0,0x5CAED0,1, 0x5CC25B,120,0,0x5CBE20,1, 0x5CC741,120,0,0x5CC560,1, 0x5CEB9E,120,0,0x5CD110,1, 0x5CFEB6,120,0,0x5CEC30,1, 0x5D4919,120,0,0x5D43B0,1, 0x5EF04E,120,0,0x5EE410,1, 0x5FB42E,120,0,0x5FB260,1, 0x5FF517,120,0,0x5FF290,1, 0x5FFC5F,120,0,0x5FF710,1, 0x5FFC76,120,0,0x5FF710,2, 0x5FFCA3,120,0,0x5FF710,3, 0x5FFCE1,120,0,0x5FF710,4, 0x5FFD10,120,0,0x5FF710,5, 0x5FFD66,120,0,0x5FF710,6, 0x5FFE15,120,0,0x5FF710,7, 0x5FFE2C,120,0,0x5FF710,8, 0x5FFE59,120,0,0x5FF710,9, 0x5FFE9C,120,0,0x5FF710,10, 0x5FFECB,120,0,0x5FF710,11, 0x5FFF21,120,0,0x5FF710,12, 0x6011BA,120,0,0x600D20,1, 0x6011CB,120,0,0x600D20,2, 0x602004,120,0,0x601FF0,1, 0x6020BC,120,0,0x6020B0,1, 0x602167,120,0,0x602160,1, 0x60216F,120,0,0x602160,2, 0x602559,120,0,0x602550,1, 0x602563,120,0,0x602550,2, 0x602F1A,120,0,0x602F00,1, 0x602FEA,120,0,0x602F00,2, 0x6030BA,120,0,0x602F00,3, 0x6030E9,120,0,0x602F00,4, 0x603184,120,0,0x603140,1, 0x6031D6,120,0,0x603140,2, 0x60329F,120,0,0x603140,3, 0x6032D4,120,0,0x603140,4, 0x6033E4,120,0,0x603320,1, 0x603454,120,0,0x603320,2, 0x60352F,120,0,0x603320,3, 0x603564,120,0,0x603320,4, 0x603664,120,0,0x6035A0,1, 0x6036F7,120,0,0x6035A0,2, 0x6037BD,120,0,0x6035A0,3, 0x6037F2,120,0,0x6035A0,4, 0x60386D,120,0,0x603830,1, 0x604382,120,0,0x604120,1, 0x6043F6,120,0,0x604120,2, 0x6044D3,120,0,0x604120,3, 0x6045AB,120,0,0x604120,4, 0x604674,120,0,0x604120,5, 0x604718,120,0,0x604120,6, 0x604926,120,0,0x604120,7, 0x60499A,120,0,0x604120,8, 0x604A75,120,0,0x604120,9, 0x604B4D,120,0,0x604120,10, 0x604C16,120,0,0x604120,11, 0x604C54,120,0,0x604120,12, 0x604D22,120,0,0x604120,13, 0x604E1C,120,0,0x604120,14, 0x6050FD,120,0,0x604120,15, 0x60520B,120,0,0x604120,16, 0x6052D9,120,0,0x604120,17, 0x605426,120,0,0x604120,18, 0x60556C,120,0,0x604120,19, 0x605631,120,0,0x604120,20, 0x605682,120,0,0x604120,21, 0x60572C,120,0,0x604120,22, 0x60578B,120,0,0x604120,23, 0x6058A8,120,0,0x604120,24, 0x6058E7,120,0,0x604120,25, 0x605926,120,0,0x604120,26, 0x6078DA,120,0,0x606350,1, 0x608213,120,0,0x6080E0,1, 0x60844C,120,0,0x6080E0,2, 0x60A18D,120,0,0x60A160,1, 0x60A1C1,120,0,0x60A160,2, 0x60A20A,120,0,0x60A160,3, 0x60A2B5,120,0,0x60A160,4, 0x60A2DC,120,0,0x60A160,5, 0x60A395,120,0,0x60A160,6, 0x60A3A8,120,0,0x60A160,7, 0x60A40F,120,0,0x60A160,8, 0x60A43B,120,0,0x60A160,9, 0x60A463,120,0,0x60A160,10, 0x60A490,120,0,0x60A160,11, 0x60A628,120,0,0x60A160,12, 0x60E714,120,0,0x60E000,1, 0x6125DB,120,0,0x60E000,2, 0x616EB0,120,0,0x616E90,1, 0x616ECD,120,0,0x616E90,2, 0x616EEA,120,0,0x616E90,3, 0x616F03,120,0,0x616E90,4, 0x616F1C,120,0,0x616E90,5, 0x616F35,120,0,0x616E90,6, 0x616F4E,120,0,0x616E90,7, 0x616F90,120,0,0x616F70,1, 0x616FAD,120,0,0x616F70,2, 0x616FCA,120,0,0x616F70,3, 0x616FE3,120,0,0x616F70,4, 0x616FFC,120,0,0x616F70,5, 0x617015,120,0,0x616F70,6, 0x61702E,120,0,0x616F70,7, 0x617067,120,0,0x617050,1, 0x61707A,120,0,0x617050,2, 0x6170A3,120,0,0x617050,3, 0x6170B6,120,0,0x617050,4, 0x6170F1,120,0,0x617050,5, 0x617107,120,0,0x617050,6, 0x617127,120,0,0x617050,7, 0x61713D,120,0,0x617050,8, 0x61715D,120,0,0x617050,9, 0x617173,120,0,0x617050,10, 0x617193,120,0,0x617050,11, 0x6171A9,120,0,0x617050,12, 0x6171C9,120,0,0x617050,13, 0x6171DF,120,0,0x617050,14, 0x6171FF,120,0,0x617050,15, 0x617215,120,0,0x617050,16, 0x617235,120,0,0x617050,17, 0x61724B,120,0,0x617050,18, 0x61726B,120,0,0x617050,19, 0x617281,120,0,0x617050,20, 0x6172A1,120,0,0x617050,21, 0x6172B7,120,0,0x617050,22, 0x6172D7,120,0,0x617050,23, 0x6172ED,120,0,0x617050,24, 0x61730D,120,0,0x617050,25, 0x617323,120,0,0x617050,26, 0x617343,120,0,0x617050,27, 0x617359,120,0,0x617050,28, 0x617379,120,0,0x617050,29, 0x61738F,120,0,0x617050,30, 0x6173AF,120,0,0x617050,31, 0x6173C5,120,0,0x617050,32, 0x6173E5,120,0,0x617050,33, 0x6173FB,120,0,0x617050,34, 0x61741B,120,0,0x617050,35, 0x617431,120,0,0x617050,36, 0x617451,120,0,0x617050,37, 0x617467,120,0,0x617050,38, 0x617487,120,0,0x617050,39, 0x61749D,120,0,0x617050,40, 0x6174BD,120,0,0x617050,41, 0x6174D3,120,0,0x617050,42, 0x6174F3,120,0,0x617050,43, 0x617509,120,0,0x617050,44, 0x617529,120,0,0x617050,45, 0x61753F,120,0,0x617050,46, 0x61755F,120,0,0x617050,47, 0x617575,120,0,0x617050,48, 0x617595,120,0,0x617050,49, 0x6175AB,120,0,0x617050,50, 0x6175CB,120,0,0x617050,51, 0x6175E1,120,0,0x617050,52, 0x617601,120,0,0x617050,53, 0x617617,120,0,0x617050,54, 0x617637,120,0,0x617050,55, 0x61764D,120,0,0x617050,56, 0x61766D,120,0,0x617050,57, 0x617683,120,0,0x617050,58, 0x6176A3,120,0,0x617050,59, 0x6176B9,120,0,0x617050,60, 0x6176D9,120,0,0x617050,61, 0x6176EF,120,0,0x617050,62, 0x61770F,120,0,0x617050,63, 0x617725,120,0,0x617050,64, 0x617745,120,0,0x617050,65, 0x61775B,120,0,0x617050,66, 0x61777B,120,0,0x617050,67, 0x617791,120,0,0x617050,68, 0x6177B1,120,0,0x617050,69, 0x6177C7,120,0,0x617050,70, 0x6177E7,120,0,0x617050,71, 0x6177FD,120,0,0x617050,72, 0x61781D,120,0,0x617050,73, 0x617833,120,0,0x617050,74, 0x617853,120,0,0x617050,75, 0x617869,120,0,0x617050,76, 0x617889,120,0,0x617050,77, 0x61789F,120,0,0x617050,78, 0x6178BF,120,0,0x617050,79, 0x6178D5,120,0,0x617050,80, 0x6178F5,120,0,0x617050,81, 0x61790B,120,0,0x617050,82, 0x61792B,120,0,0x617050,83, 0x617941,120,0,0x617050,84, 0x617961,120,0,0x617050,85, 0x617977,120,0,0x617050,86, 0x617997,120,0,0x617050,87, 0x6179A9,120,0,0x617050,88, 0x6179C5,120,0,0x617050,89, 0x6179D7,120,0,0x617050,90, 0x6179F3,120,0,0x617050,91, 0x617A05,120,0,0x617050,92, 0x617A47,120,0,0x617A30,1, 0x617A70,120,0,0x617A30,2, 0x617AB0,120,0,0x617A30,3, 0x617AD0,120,0,0x617A30,4, 0x617AF0,120,0,0x617A30,5, 0x617B10,120,0,0x617A30,6, 0x617B30,120,0,0x617A30,7, 0x617B50,120,0,0x617A30,8, 0x617B70,120,0,0x617A30,9, 0x617B90,120,0,0x617A30,10, 0x617BB0,120,0,0x617A30,11, 0x617BD0,120,0,0x617A30,12, 0x617BF0,120,0,0x617A30,13, 0x617C10,120,0,0x617A30,14, 0x617C30,120,0,0x617A30,15, 0x617C50,120,0,0x617A30,16, 0x617C70,120,0,0x617A30,17, 0x617C90,120,0,0x617A30,18, 0x617CB0,120,0,0x617A30,19, 0x617CD0,120,0,0x617A30,20, 0x617CF0,120,0,0x617A30,21, 0x617D10,120,0,0x617A30,22, 0x617D30,120,0,0x617A30,23, 0x617D50,120,0,0x617A30,24, 0x617D70,120,0,0x617A30,25, 0x617D90,120,0,0x617A30,26, 0x617DB0,120,0,0x617A30,27, 0x617DD0,120,0,0x617A30,28, 0x617DF0,120,0,0x617A30,29, 0x617E10,120,0,0x617A30,30, 0x617E30,120,0,0x617A30,31, 0x617E50,120,0,0x617A30,32, 0x617E70,120,0,0x617A30,33, 0x617E90,120,0,0x617A30,34, 0x617EB0,120,0,0x617A30,35, 0x617ED0,120,0,0x617A30,36, 0x617EF0,120,0,0x617A30,37, 0x617F10,120,0,0x617A30,38, 0x617F30,120,0,0x617A30,39, 0x617F50,120,0,0x617A30,40, 0x617F70,120,0,0x617A30,41, 0x617F90,120,0,0x617A30,42, 0x617FB0,120,0,0x617A30,43, 0x617FCC,120,0,0x617A30,44, 0x617FE8,120,0,0x617A30,45, 0x618004,120,0,0x617A30,46, 0x61829F,120,0,0x618250,1, 0x6182AC,120,0,0x618250,2, 0x6182BB,120,0,0x618250,3, 0x6182CE,120,0,0x618250,4, 0x61831A,120,0,0x618300,1, 0x618584,120,0,0x618570,1, 0x618B06,120,0,0x618AC0,1, 0x618B81,120,0,0x618AC0,2, 0x618B8E,120,0,0x618AC0,3, 0x618B9D,120,0,0x618AC0,4, 0x618C3A,120,0,0x618C20,1, 0x61A580,120,0,0x61A320,1, 0x61C24F,120,0,0x61C040,1, 0x61D63B,120,0,0x61D5A0,1, 0x61D7FD,120,0,0x61D5A0,2, 0x61D98E,120,0,0x61D5A0,3, 0x61E5C7,120,0,0x61E5B0,1, 0x61E5F3,120,0,0x61E5B0,2, 0x61E6D9,120,0,0x61E5B0,3, 0x61E6EE,120,0,0x61E5B0,4, 0x624B1B,120,0,0x624B10,1, 0x624B9E,120,0,0x624B10,2, 0x624BB0,120,0,0x624B10,3, 0x624BE0,120,0,0x624B10,4, 0x624BF2,120,0,0x624B10,5, 0x624C09,120,0,0x624B10,6, 0x624C1B,120,0,0x624B10,7, 0x624C3D,120,0,0x624B10,8, 0x624C4F,120,0,0x624B10,9, 0x624C61,120,0,0x624B10,10, 0x624C73,120,0,0x624B10,11, 0x63780A,120,0,0x6372C0,1>;
using def_t = CPad *(int);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<int>, 0>;
META_END

META_BEGIN(CPad::StopShaking)
static int address;
static int global_address;
static const int id = 0x4AB070;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB070, 0x4AB090, 0x4AAF40>;
// total references count: 10en (3), 11en (3), steam (3)
using refs_t = RefList<0x42BE34,100,0,0x42BB70,1, 0x42C21F,100,0,0x42BB70,2, 0x42C421,100,0,0x42BB70,3, 0x42BE34,110,0,0x42BB70,1, 0x42C21F,110,0,0x42BB70,2, 0x42C421,110,0,0x42BB70,3, 0x42BE04,120,0,0x42BB40,1, 0x42C1EF,120,0,0x42BB40,2, 0x42C3F1,120,0,0x42BB40,3>;
using def_t = void(CPad *, int);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,int>, 0,1>;
META_END

META_BEGIN(CPad::StopPadsShaking)
static int address;
static int global_address;
static const int id = 0x4AB080;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB080, 0x4AB0A0, 0x4AAF50>;
// total references count: 10en (5), 11en (5), steam (5)
using refs_t = RefList<0x40DFFB,100,0,0x40DFB0,1, 0x40ED86,100,0,0x40ED80,1, 0x4A3CFE,100,0,0x4A3BCD,1, 0x4BBC4A,100,0,0x4BBC10,1, 0x600523,100,0,0x5FFAB0,1, 0x40DFFB,110,0,0x40DFB0,1, 0x40ED86,110,0,0x40ED80,1, 0x4A3D1F,110,0,0x4A3BEE,1, 0x4BBC6A,110,0,0x4BBC30,1, 0x600543,110,0,0x5FFAD0,1, 0x40DFFB,120,0,0x40DFB0,1, 0x40ED86,120,0,0x40ED80,1, 0x4A3BBD,120,0,0x4A3A8C,1, 0x4BBB1A,120,0,0x4BBAE0,1, 0x600183,120,0,0x5FF710,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::DoCheats)
static int address;
static int global_address;
static const int id = 0x4AB090;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB090, 0x4AB0B0, 0x4AAF60>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x4A44F2,100,0,0x4A4410,1, 0x4A4512,110,0,0x4A4430,1, 0x4A4365,120,0,0x4A42D0,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::FixPadsAfterSave)
static int address;
static int global_address;
static const int id = 0x4AB0A0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB0A0, 0x4AB0C0, 0x4AAF70>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x61D3B0,100,0,0x61C420,1, 0x61D390,110,0,0x61C400,1, 0x61CFF0,120,0,0x61C040,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::Update)
static int address;
static int global_address;
static const int id = 0x4AB0C0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB0C0, 0x4AB0E0, 0x4AAF90>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x4AB714,100,0,0x4AB6C0,1, 0x4AB734,110,0,0x4AB6E0,1, 0x4AB5E4,120,0,0x4AB590,1>;
using def_t = void(CPad *, int);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,int>, 0,1>;
META_END

META_BEGIN(CPad::UpdatePads)
static int address;
static int global_address;
static const int id = 0x4AB6C0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AB6C0, 0x4AB6E0, 0x4AB590>;
// total references count: 10en (11), 11en (11), steam (11)
using refs_t = RefList<0x490476,100,0,0x49045D,1, 0x4A4412,100,0,0x4A4410,1, 0x4A5C7E,100,0,0x4A5C60,1, 0x4A669F,100,0,0x4A65D0,1, 0x4AB0A0,100,0,0x4AB0A0,1, 0x54460C,100,0,0x5445FF,1, 0x5FFFD9,100,0,0x5FFAB0,1, 0x60018F,100,0,0x5FFAB0,2, 0x61D9F4,100,0,0x61D960,1, 0x61DBB6,100,0,0x61D960,2, 0x61DD47,100,0,0x61D960,3, 0x490486,110,0,0x49046D,1, 0x4A4432,110,0,0x4A4430,1, 0x4A5C9E,110,0,0x4A5C80,1, 0x4A66BF,110,0,0x4A65F0,1, 0x4AB0C0,110,0,0x4AB0C0,1, 0x54462C,110,0,0x54461F,1, 0x5FFFF9,110,0,0x5FFAD0,1, 0x6001AF,110,0,0x5FFAD0,2, 0x61D9D4,110,0,0x61D940,1, 0x61DB96,110,0,0x61D940,2, 0x61DD27,110,0,0x61D940,3, 0x490386,120,0,0x49036D,1, 0x4A42D2,120,0,0x4A42D0,1, 0x4A5B4E,120,0,0x4A5B30,1, 0x4A656F,120,0,0x4A64A0,1, 0x4AAF70,120,0,0x4AAF70,1, 0x5444FC,120,0,0x5444EF,1, 0x5FFC39,120,0,0x5FF710,1, 0x5FFDEF,120,0,0x5FF710,2, 0x61D634,120,0,0x61D5A0,1, 0x61D7F6,120,0,0x61D5A0,2, 0x61D987,120,0,0x61D5A0,3>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::AddToPCCheatString)
static int address;
static int global_address;
static const int id = 0x4ABD20;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4ABD20, 0x4ABD40, 0x4ABBF0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x602BE7,100,0,0x602930,1, 0x602BC7,110,0,0x602910,1, 0x602807,120,0,0x602550,1>;
using def_t = void(CPad *, char);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,char>, 0,1>;
META_END

META_BEGIN(CPad::StartShake)
static int address;
static int global_address;
static const int id = 0x4AD2E0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AD2E0, 0x4AD300, 0x4AD1B0>;
// total references count: 10en (10), 11en (10), steam (10)
using refs_t = RefList<0x440CBE,100,0,0x440030,1, 0x523EE6,100,0,0x523CD0,1, 0x52B7E7,100,0,0x52B070,1, 0x57D7DA,100,0,0x57D580,1, 0x587463,100,0,0x5870D0,1, 0x58766E,100,0,0x5870D0,2, 0x5990DF,100,0,0x593030,1, 0x59B93E,100,0,0x59B550,1, 0x5CC433,100,0,0x5CBFF0,1, 0x6129C3,100,0,0x60E3E0,1, 0x440CBE,110,0,0x440030,1, 0x523F06,110,0,0x523CF0,1, 0x52B807,110,0,0x52B090,1, 0x57D7FA,110,0,0x57D5A0,1, 0x587483,110,0,0x5870F0,1, 0x58768E,110,0,0x5870F0,2, 0x5990FF,110,0,0x593050,1, 0x59B95E,110,0,0x59B570,1, 0x5CC453,110,0,0x5CC010,1, 0x6129A3,110,0,0x60E3C0,1, 0x440C2E,120,0,0x43FFA0,1, 0x523DD6,120,0,0x523BC0,1, 0x52B6D7,120,0,0x52AF60,1, 0x57D60A,120,0,0x57D3B0,1, 0x587293,120,0,0x586F00,1, 0x58749E,120,0,0x586F00,2, 0x598F0F,120,0,0x592E60,1, 0x59B76E,120,0,0x59B380,1, 0x5CC263,120,0,0x5CBE20,1, 0x6125E3,120,0,0x60E000,1>;
using def_t = void(CPad *, short, unsigned char);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,short,unsigned char>, 0,1,2>;
META_END

META_BEGIN(CPad::SetDrunkInputDelay)
static int address;
static int global_address;
static const int id = 0x4AD340;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AD340, 0x4AD360, 0x4AD210>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x451720,100,0,0x451550,1, 0x608834,100,0,0x6084C0,1, 0x451720,110,0,0x451550,1, 0x608814,110,0,0x6084A0,1, 0x451630,120,0,0x451460,1, 0x608454,120,0,0x6080E0,1>;
using def_t = void(CPad *, int);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,int>, 0,1>;
META_END

META_BEGIN(CPad::ReconcileTwoControllersInput)
static int address;
static int global_address;
static const int id = 0x4AD350;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AD350, 0x4AD370, 0x4AD220>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x4AB17F,100,0,0x4AB0C0,1, 0x4AB239,100,0,0x4AB0C0,2, 0x4AB19F,110,0,0x4AB0E0,1, 0x4AB259,110,0,0x4AB0E0,2, 0x4AB04F,120,0,0x4AAF90,1, 0x4AB109,120,0,0x4AAF90,2>;
using def_t = CControllerState *(CPad *, CControllerState *, CControllerState const &, CControllerState const &);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,CControllerState *,CControllerState const &,CControllerState const &>, 0,1,2,3>;
META_END

META_BEGIN(CPad::UpdateMouse)
static int address;
static int global_address;
static const int id = 0x4AD820;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AD820, 0x4AD840, 0x4AD6F0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x4AB6CA,100,0,0x4AB6C0,1, 0x4AB6EA,110,0,0x4AB6E0,1, 0x4AB59A,120,0,0x4AB590,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::ClearMouseHistory)
static int address;
static int global_address;
static const int id = 0x4ADB30;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4ADB30, 0x4ADB50, 0x4ADA00>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x47BEE1,100,0,0x47BE8F,1, 0x47BEE1,110,0,0x47BE8F,1, 0x47BDC1,120,0,0x47BD6F,1>;
using def_t = void();
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Cdecl;
using args_t = ArgPick<ArgTypes<>>;
META_END

META_BEGIN(CPad::InputHowLongAgo)
static int address;
static int global_address;
static const int id = 0x4ADBD0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4ADBD0, 0x4ADBF0, 0x4ADAA0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x535D98,100,0,0x535D10,1, 0x535DB8,110,0,0x535D30,1, 0x535C88,120,0,0x535C00,1>;
using def_t = int(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

META_BEGIN(CPad::Clear)
static int address;
static int global_address;
static const int id = 0x4ADBE0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4ADBE0, 0x4ADC00, 0x4ADAB0>;
// total references count: 10en (11), 11en (11), steam (11)
using refs_t = RefList<0x406BFC,100,0,0x4069D0,1, 0x498FDD,100,0,0x498E5F,1, 0x498FEE,100,0,0x498E5F,2, 0x4A49C2,100,0,0x4A4850,1, 0x4A49D3,100,0,0x4A4850,2, 0x4A4F95,100,0,0x4A4B10,1, 0x4A4FA6,100,0,0x4A4B10,2, 0x4AF0F5,100,0,0x4AF0F0,1, 0x5D4B51,100,0,0x5D45E0,1, 0x601552,100,0,0x6010B0,1, 0x601563,100,0,0x6010B0,2, 0x406BFC,110,0,0x4069D0,1, 0x498FED,110,0,0x498E6F,1, 0x498FFE,110,0,0x498E6F,2, 0x4A49E2,110,0,0x4A4870,1, 0x4A49F3,110,0,0x4A4870,2, 0x4A4FB5,110,0,0x4A4B30,1, 0x4A4FC6,110,0,0x4A4B30,2, 0x4AF115,110,0,0x4AF110,1, 0x5D4B71,110,0,0x5D4600,1, 0x601582,110,0,0x6010E0,1, 0x601593,110,0,0x6010E0,2, 0x406BFC,120,0,0x4069D0,1, 0x498EED,120,0,0x498D6F,1, 0x498EFE,120,0,0x498D6F,2, 0x4A4882,120,0,0x4A4710,1, 0x4A4893,120,0,0x4A4710,2, 0x4A4E62,120,0,0x4A49D0,1, 0x4A4E73,120,0,0x4A49D0,2, 0x4AEFC5,120,0,0x4AEFC0,1, 0x5D4921,120,0,0x5D43B0,1, 0x6011C2,120,0,0x600D20,1, 0x6011D3,120,0,0x600D20,2>;
using def_t = void(CPad *, char);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *,char>, 0,1>;
META_END

DTOR_META_BEGIN(CPad)
static int address;
static int global_address;
static const int id = 0x4AF0E0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AF0E0, 0x4AF100, 0x4AEFB0>;
// total references count: 10en (2), 11en (2), steam (2)
using refs_t = RefList<0x4AEFB8,100,2,0,1, 0x4AF0C8,100,2,0,1, 0x4AEFD8,110,2,0,1, 0x4AF0E8,110,2,0,1, 0x4AEE88,120,2,0,1, 0x4AEF98,120,2,0,1>;
using def_t = CPad *(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

CTOR_META_BEGIN(CPad)
static int address;
static int global_address;
static const int id = 0x4AF0F0;
static const bool is_virtual = false;
static const int vtable_index = -1;
using mv_addresses_t = MvAddresses<0x4AF0F0, 0x4AF110, 0x4AEFC0>;
// total references count: 10en (1), 11en (1), steam (1)
using refs_t = RefList<0x4AEFBD,100,2,0,1, 0x4AEFDD,110,2,0,1, 0x4AEE8D,120,2,0,1>;
using def_t = CPad *(CPad *);
static const int cb_priority = PRIORITY_BEFORE; 
using calling_convention_t = CallingConventions::Thiscall;
using args_t = ArgPick<ArgTypes<CPad *>, 0>;
META_END

template<>
struct stack_object<CPad> : stack_object_no_default<CPad> {
    SUPPORTED_10EN_11EN_STEAM stack_object() {
        plugin::CallMethodDynGlobal<CPad *>(ctor_gaddr(CPad), reinterpret_cast<CPad *>(objBuff));
    }
    SUPPORTED_10EN_11EN_STEAM ~stack_object() {
        plugin::CallMethodDynGlobal<CPad *>(dtor_gaddr(CPad), reinterpret_cast<CPad *>(objBuff));
    }
};

template <>
SUPPORTED_10EN_11EN_STEAM inline CPad *operator_new<CPad>() {
    void *objData = operator new(sizeof(CPad)); 
    CPad *obj = reinterpret_cast<CPad *>(objData);
    plugin::CallMethodDynGlobal<CPad *>(ctor_gaddr(CPad), obj);
    return obj;
}
template <>
SUPPORTED_10EN_11EN_STEAM inline CPad *operator_new_array<CPad>(unsigned int objCount) {
    void *objData = operator new(sizeof(CPad) * objCount + 4); 
    *reinterpret_cast<unsigned int *>(objData) = objCount;
    CPad *objArray = reinterpret_cast<CPad *>(reinterpret_cast<unsigned int>(objData) + 4);
    for (unsigned int i = 0; i < objCount; i++)
        plugin::CallMethodDynGlobal<CPad *>(ctor_gaddr(CPad), &objArray[i]);
    return objArray;
}
template <>
SUPPORTED_10EN_11EN_STEAM inline void operator_delete<CPad>(CPad *obj) {
    if (obj == nullptr) return;
    plugin::CallMethodDynGlobal<CPad *>(dtor_gaddr(CPad), obj);
    operator delete(obj);
}
template <>
SUPPORTED_10EN_11EN_STEAM inline void operator_delete_array<CPad>(CPad *objArray) {
    if (objArray == nullptr) return;
    void *objData = reinterpret_cast<void *>(reinterpret_cast<char *>(objArray) - 4);
    unsigned int arraySize = *reinterpret_cast<unsigned int *>(objData);
    for (unsigned int i = 0; i < arraySize; i++)
        plugin::CallMethodDynGlobal<CPad *>(dtor_gaddr(CPad), &objArray[i]);
    operator delete(objData);
}

}
